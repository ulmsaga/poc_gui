[36m2024-06-13 10:04:15.602[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 3197 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-06-13 10:04:15.613[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-06-13 10:04:15.613[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-06-13 10:04:15.957[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-06-13 10:04:15.997[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 35 ms. Found 1 JPA repository interfaces.
[36m2024-06-13 10:04:16.154[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-06-13 10:04:16.649[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-06-13 10:04:16.656[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-06-13 10:04:16.657[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-06-13 10:04:16.657[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-06-13 10:04:16.730[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-06-13 10:04:16.730[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1087 ms
[36m2024-06-13 10:04:16.834[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-06-13 10:04:16.876[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-06-13 10:04:16.996[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-06-13 10:04:17.129[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-06-13 10:04:17.329[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-06-13 10:04:17.362[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-06-13 10:04:17.697[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-06-13 10:04:17.703[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-13 10:04:18.124[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-06-13 10:04:18.217[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 10:04:18.217[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 10:04:18.218[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                A.branch_id
            ,	B.branch_name
            ,	A.opteam_id
            ,	C.team_name opteam_name
            ,	A.part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-13 10:04:18.271[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@19ce597a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4d21b505, org.springframework.security.web.context.SecurityContextPersistenceFilter@8318808, org.springframework.security.web.header.HeaderWriterFilter@51d80f6e, org.springframework.security.web.authentication.logout.LogoutFilter@253c7189, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@408bb173, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@360d0c7a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@20e25bf7, org.springframework.security.web.session.SessionManagementFilter@7ccfed46, org.springframework.security.web.access.ExceptionTranslationFilter@66c91224, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@38224635]
[36m2024-06-13 10:04:18.299[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-2][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                A.branch_id
            ,	B.branch_name
            ,	A.opteam_id
            ,	C.team_name opteam_name
            ,	A.part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-13 10:04:18.305[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-06-13 10:04:18.569[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-06-13 10:04:18.586[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-06-13 10:04:18.592[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.379 seconds (JVM running for 4.061)
[36m2024-06-13 10:04:21.333[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-06-13 10:04:21.333[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Initializing Servlet 'dispatcherServlet'
[36m2024-06-13 10:04:21.334[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Completed initialization in 1 ms
[36m2024-06-13 10:04:21.594[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-13 10:04:21.613[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 10:04:21.699[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-13 10:04:21.709[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-13 10:04:21.725[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-13 10:04:21.770[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:21.770[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:21.801[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 10:04:21.861[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_LIST
[36m2024-06-13 10:04:21.862[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_TREE
[36m2024-06-13 10:04:21.862[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_LIST
[36m2024-06-13 10:04:21.862[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_TREE
[36m2024-06-13 10:04:21.862[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:04:21.955[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:21.955[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:21.988[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:21.989[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:22.002[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 10:04:22.355[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:22.355[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:22.355[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:22.355[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:22.355[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:22.356[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:22.359[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:22.359[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:22.359[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:22.359[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:22.359[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:22.360[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:22.371[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:04:22.499[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 10:04:22.500[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:04:22.528[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:22.528[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:22.530[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:04:28.323[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:28.324[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:28.332[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:04:28.392[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:28.392[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:28.396[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:04:31.868[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:04:34.326[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:34.327[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:34.334[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:04:34.395[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:34.395[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:34.401[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:04:40.322[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:40.322[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:40.329[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:04:40.387[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:40.387[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:40.390[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:04:41.874[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:04:46.321[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:46.322[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:46.331[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:04:46.390[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:46.390[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:46.492[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:04:51.877[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:04:52.312[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:52.312[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:52.409[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:04:52.480[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:52.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:52.521[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:04:58.321[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:58.321[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:58.330[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:04:58.424[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:04:58.424[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:04:58.429[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:05:01.883[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:05:04.321[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:04.321[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:04.446[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:05:04.560[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:04.560[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:04.562[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:05:10.332[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:10.332[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:10.340[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:05:10.395[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:10.395[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:10.396[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:05:11.889[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:05:16.328[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:16.328[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:16.336[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:05:16.392[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:16.393[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:16.539[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:05:21.894[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:05:22.303[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:22.303[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:22.311[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:05:22.370[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:22.370[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:22.377[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:05:28.331[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:28.331[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:28.434[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:05:28.509[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:28.510[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:28.512[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:05:31.900[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:05:34.324[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:34.324[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:34.335[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:05:34.392[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:34.392[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:34.394[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:05:40.331[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:40.332[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:40.352[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:05:40.418[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:40.419[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:40.419[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:05:41.906[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:05:46.334[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:46.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:46.394[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:05:46.455[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:46.456[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:46.466[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:05:51.912[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:05:52.307[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:52.308[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:52.330[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:05:52.388[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:52.389[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:52.396[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:05:58.345[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:58.345[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:58.454[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:05:58.525[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:05:58.526[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:05:58.527[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:06:01.915[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:06:04.343[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:04.344[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:04.352[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:06:04.408[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:04.409[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:04.410[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:06:10.339[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:10.339[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:10.391[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:06:10.594[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:10.594[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:10.594[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:06:11.916[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:06:16.324[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:16.324[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:16.332[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:06:16.388[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:16.389[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:16.400[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:06:21.920[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:06:22.318[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:22.318[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:22.332[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:06:22.390[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:22.390[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:22.398[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:06:28.328[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:28.329[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:28.352[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:06:28.414[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:28.415[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:28.420[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:06:31.926[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:06:34.332[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:34.332[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:34.341[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:06:34.393[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:34.394[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:34.395[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:06:40.345[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:40.346[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:40.411[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:06:40.472[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:40.473[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:40.474[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:06:41.928[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:06:46.329[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:46.329[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:46.377[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:06:46.440[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:46.440[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:46.451[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:06:51.933[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:06:52.328[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:52.329[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:52.346[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:06:52.403[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:52.403[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:52.477[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:06:58.328[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:58.329[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:58.337[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:06:58.393[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:06:58.393[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:06:58.395[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:07:01.939[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:07:04.330[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:04.330[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:04.366[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:07:04.629[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:04.629[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:04.630[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:07:10.327[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:10.328[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:10.346[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:07:10.403[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:10.404[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:10.406[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:07:11.944[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:07:16.329[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:16.330[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:16.338[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:07:16.396[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:16.397[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:16.478[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:07:21.949[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:07:22.326[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:22.326[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:22.437[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:07:22.495[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:22.495[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:22.506[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:07:29.308[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:29.309[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:29.317[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:07:29.407[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:29.407[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:29.409[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:07:31.955[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:07:35.331[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:35.332[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:35.353[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:07:35.412[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:35.413[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:35.414[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:07:41.333[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:41.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:41.344[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:07:41.404[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:41.405[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:41.407[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:07:41.960[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:07:47.339[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:47.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:47.421[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:07:47.489[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:47.490[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:47.517[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:07:51.965[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:07:53.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:53.337[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:53.371[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:07:53.432[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:53.432[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:53.440[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:07:59.335[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:59.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:59.351[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:07:59.410[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:07:59.410[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:07:59.412[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:08:01.967[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:08:05.334[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:08:05.335[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:08:05.342[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:08:05.401[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:08:05.401[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:08:05.402[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:08:11.334[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:08:11.334[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:08:11.342[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:08:11.407[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:08:11.407[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:08:11.409[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:08:11.973[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:08:17.334[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:08:17.334[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:08:17.342[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:08:17.402[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:08:17.403[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:08:17.439[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:08:21.978[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:08:23.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:08:23.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:08:23.372[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:08:23.434[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:08:23.434[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:08:23.475[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:08:31.984[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:08:41.985[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:08:51.991[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:09:01.994[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:09:12.000[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:09:22.004[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:09:25.343[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:09:25.343[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:09:25.351[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:09:25.410[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:09:25.410[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:09:25.412[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:09:32.011[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:09:42.014[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:09:52.020[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:10:02.026[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:10:12.032[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:10:22.037[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:10:25.345[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:10:25.346[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:10:25.363[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:10:25.421[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:10:25.422[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:10:25.424[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:10:32.038[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:10:42.044[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:10:52.050[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:11:02.054[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:11:12.059[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:11:22.065[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:11:25.338[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:11:25.339[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:11:25.346[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:11:25.403[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:11:25.403[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:11:25.405[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:11:32.067[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:11:42.068[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:11:52.073[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:12:02.078[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:12:08.431[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:08.431[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:08.553[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:12:08.622[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:08.622[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:08.647[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:12:10.326[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:10.326[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:10.335[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:12:10.391[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:10.391[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:10.399[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:12:12.083[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:12:16.347[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:16.347[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:16.416[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:12:16.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:16.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:16.482[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:12:22.088[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:12:22.343[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:22.343[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:22.374[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:12:22.431[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:22.431[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:22.432[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:12:28.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:28.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:28.479[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:12:28.564[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:28.565[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:28.567[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:12:32.091[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:12:34.324[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:34.325[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:34.425[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:12:34.491[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:34.491[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:34.501[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:12:40.312[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:40.313[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:40.409[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:12:40.479[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:40.479[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:40.544[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:12:42.093[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:12:43.681[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:43.681[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:43.730[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 10:12:43.917[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 10:12:43.925[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 10:12:46.323[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:46.324[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:46.331[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:12:46.386[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:46.386[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:46.387[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:12:49.467[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:49.468[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:49.479[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 10:12:49.917[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:49.917[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:49.919[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 10:12:52.099[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:12:52.315[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:52.316[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:52.323[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:12:52.384[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:52.384[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:52.385[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:12:57.520[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:57.520[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:57.527[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before set Executor
[36m2024-06-13 10:12:57.527[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before Loop sArr
[36m2024-06-13 10:12:57.530[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before Future
[36m2024-06-13 10:12:57.584[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 10:12:57.584[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 10:12:57.585[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 10:12:57.593[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 10:12:57.593[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 10:12:58.279[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:58.279[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:58.412[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:12:58.484[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:12:58.485[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:12:58.487[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:12:59.722[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- IMSI : OK
[36m2024-06-13 10:12:59.723[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- ENB : OK
[36m2024-06-13 10:12:59.724[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- MME : OK
[36m2024-06-13 10:12:59.725[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- SGW : OK
[36m2024-06-13 10:12:59.725[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- PGW : OK
[36m2024-06-13 10:13:01.600[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:01.601[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:01.634[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-13 10:13:02.103[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:13:03.875[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:03.875[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:03.886[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            FILE_PATH TARGET_FILE_PATH
        ,   FILE_NAME
        FROM CU_PACKET_FILE cpf
        WHERE 1 = 1
        AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
        AND ENV_STATUS = 'local'

[36m2024-06-13 10:13:03.954[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:03.954[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:04.315[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:04.315[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:04.316[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:13:04.401[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:04.402[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:04.407[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:13:10.324[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:10.324[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:10.459[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:13:10.544[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:10.544[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:10.546[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:13:12.107[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:13:16.328[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:16.328[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:16.347[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:13:16.425[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:16.425[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:16.449[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:13:22.109[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:13:22.312[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:22.314[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:22.387[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:13:22.464[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:22.464[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:22.492[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:13:28.303[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:28.304[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:28.456[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:13:28.561[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:28.561[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:28.562[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:13:32.113[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:13:34.325[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:34.325[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:34.368[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:13:34.435[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:34.436[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:34.437[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:13:40.334[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:40.335[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:40.342[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:13:40.414[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:40.415[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:40.416[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:13:42.119[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:13:46.335[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:46.335[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:46.362[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:13:46.433[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:46.433[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:46.481[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:13:52.120[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:13:52.346[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:52.346[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:52.380[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:13:52.460[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:52.461[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:52.475[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:13:58.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:58.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:58.343[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:13:58.412[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:13:58.412[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:13:58.414[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:14:02.124[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:14:04.335[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:04.335[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:04.434[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:14:04.517[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:04.517[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:04.519[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:14:10.329[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:10.329[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:10.336[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:14:10.406[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:10.406[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:10.408[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:14:12.126[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:14:16.335[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:16.335[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:16.499[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:14:16.606[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:16.609[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:16.619[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:14:22.132[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:14:22.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:22.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:22.389[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:14:22.461[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:22.462[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:22.492[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:14:28.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:28.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:28.557[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:14:28.659[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:28.660[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:28.661[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:14:32.133[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:14:34.353[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:34.354[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:34.360[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:14:34.429[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:34.429[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:34.430[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:14:40.334[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:40.334[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:40.343[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:14:40.430[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:40.432[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:40.436[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:14:42.137[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:14:46.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:46.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:46.413[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:14:46.490[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:46.490[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:46.499[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:14:52.140[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:14:52.353[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:52.353[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:52.393[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:14:52.467[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:52.467[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:52.548[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:14:58.353[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:58.353[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:58.450[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:14:58.530[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:14:58.530[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:14:58.531[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:15:02.145[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:15:04.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:04.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:04.378[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:15:04.447[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:04.447[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:04.448[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:15:10.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:10.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:10.378[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:15:10.454[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:10.456[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:10.459[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:15:12.147[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:15:16.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:16.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:16.350[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:15:16.418[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:16.418[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:16.427[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:15:22.150[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:15:22.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:22.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:22.345[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:15:22.418[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:22.418[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:22.567[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:15:28.345[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:28.345[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:28.352[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:15:28.455[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:28.456[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:28.458[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:15:32.155[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:15:34.353[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:34.353[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:34.379[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:15:34.450[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:34.451[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:34.452[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:15:40.355[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:40.356[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:40.399[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:15:40.479[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:40.479[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:40.482[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:15:42.157[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:15:46.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:46.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:46.369[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:15:46.440[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:46.440[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:46.468[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:15:52.162[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:15:52.335[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:52.335[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:52.480[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:15:52.576[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:52.577[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:52.592[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:15:58.343[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:58.344[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:58.422[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:15:58.532[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:15:58.532[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:15:58.534[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:16:02.167[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:16:04.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:04.353[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:04.543[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:16:04.646[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:04.646[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:04.648[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:16:10.353[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:10.354[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:10.361[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:16:10.432[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:10.432[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:10.433[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:16:12.173[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:16:16.334[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:16.335[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:16.572[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:16:16.702[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:16.702[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:16.712[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:16:22.179[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:16:22.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:22.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:22.361[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:16:22.443[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:22.443[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:22.457[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:16:28.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:28.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:28.359[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:16:28.426[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:28.426[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:28.428[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:16:32.184[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:16:34.353[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:34.353[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:34.410[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:16:34.493[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:34.493[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:34.497[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:16:40.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:40.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:40.359[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:16:40.427[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:40.427[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:40.428[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:16:42.189[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:16:46.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:46.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:46.541[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:16:46.648[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:46.648[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:46.678[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:16:52.193[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:16:52.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:52.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:52.350[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:16:52.423[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:52.424[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:52.432[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:16:58.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:58.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:58.406[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:16:58.482[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:16:58.483[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:16:58.485[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:17:02.199[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:17:04.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:04.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:04.367[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:17:04.436[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:04.436[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:04.437[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:17:10.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:10.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:10.359[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:17:10.426[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:10.427[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:10.428[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:17:12.204[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:17:16.349[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:16.349[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:16.365[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:17:16.447[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:16.448[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:16.478[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:17:22.210[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:17:22.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:22.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:22.361[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:17:22.434[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:22.434[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:22.524[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:17:28.345[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:28.345[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:28.427[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:17:28.504[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:28.504[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:28.505[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:17:32.215[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:17:34.334[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:34.334[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:34.341[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:17:34.419[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:34.420[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:34.422[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:17:40.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:40.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:40.359[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:17:40.427[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:40.428[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:40.429[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:17:42.221[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:17:46.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:46.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:46.360[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:17:46.431[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:46.431[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:46.441[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:17:52.221[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:17:52.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:52.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:52.359[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:17:52.430[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:52.430[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:52.548[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:17:58.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:58.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:58.359[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:17:58.433[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:17:58.435[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:17:58.436[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:18:02.223[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:18:04.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:04.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:04.358[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:18:04.556[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:04.556[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:04.559[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:18:10.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:10.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:10.402[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:18:10.477[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:10.478[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:10.479[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:18:12.226[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:18:16.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:16.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:16.379[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:18:16.451[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:16.451[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:16.484[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:18:22.228[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:18:22.349[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:22.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:22.446[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:18:22.531[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:22.532[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:22.539[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:18:28.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:28.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:28.361[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:18:28.434[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:28.435[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:28.438[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:18:32.229[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:18:34.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:34.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:34.515[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:18:34.614[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:34.614[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:34.615[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:18:40.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:40.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:40.361[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:18:40.429[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:40.429[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:40.430[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:18:42.232[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:18:46.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:46.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:46.443[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:18:46.525[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:46.525[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:46.572[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:18:52.233[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:18:52.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:52.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:52.389[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:18:52.465[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:52.465[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:52.475[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:18:58.332[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:58.332[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:58.360[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:18:58.434[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:18:58.435[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:18:58.437[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:19:02.236[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:19:04.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:04.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:04.432[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:19:04.510[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:04.510[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:04.511[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:19:10.358[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:10.358[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:10.366[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:19:10.437[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:10.438[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:10.440[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:19:12.241[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:19:16.339[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:16.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:16.482[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:19:16.577[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:16.577[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:16.595[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:19:22.244[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:19:22.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:22.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:22.366[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:19:22.434[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:22.435[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:22.442[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:19:28.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:28.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:28.407[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:19:28.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:28.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:28.483[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:19:32.250[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:19:34.333[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:34.333[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:34.363[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:19:34.433[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:34.433[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:34.434[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:19:40.347[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:40.347[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:40.354[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:19:40.423[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:40.424[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:40.425[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:19:42.255[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:19:46.346[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:46.346[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:46.394[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:19:46.468[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:46.469[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:46.502[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:19:52.258[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:19:52.348[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:52.348[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:52.357[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:19:52.434[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:52.434[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:52.531[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:19:58.353[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:58.354[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:58.430[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:19:58.507[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:19:58.508[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:19:58.508[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:20:02.263[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:20:04.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:04.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:04.357[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:20:04.429[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:04.430[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:04.434[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:20:10.339[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:10.339[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:10.364[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:20:10.434[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:10.434[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:10.435[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:20:12.269[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:20:16.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:16.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:16.363[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:20:16.460[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:16.460[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:16.471[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:20:22.272[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:20:22.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:22.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:22.361[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:20:22.432[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:22.432[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:22.597[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:20:28.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:28.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:28.359[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:20:28.426[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:28.427[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:28.428[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:20:32.275[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:20:34.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:34.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:34.359[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:20:34.426[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:34.426[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:34.428[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:20:40.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:40.352[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:40.416[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:20:40.497[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:40.497[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:40.502[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:20:42.276[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:20:46.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:46.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:46.360[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:20:46.461[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:46.461[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:46.495[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:20:52.278[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:20:52.358[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:52.358[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:52.453[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:20:52.539[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:52.539[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:52.546[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:20:59.374[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:59.375[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:59.400[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:20:59.473[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:20:59.473[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:20:59.475[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:21:02.283[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:21:05.366[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:05.367[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:05.389[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:21:05.654[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:05.654[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:05.655[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:21:11.335[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:11.335[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:11.453[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:21:11.543[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:11.543[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:11.545[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:21:12.289[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:21:17.373[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:17.373[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:17.382[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:21:17.566[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:17.566[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:17.647[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:21:22.291[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:21:23.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:23.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:23.388[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:21:23.469[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:23.469[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:23.477[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:21:29.373[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:29.373[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:29.381[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:21:29.450[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:29.450[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:29.451[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:21:32.293[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:21:35.368[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:35.369[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:35.442[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:21:35.523[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:35.523[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:35.524[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:21:41.372[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:41.372[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:41.388[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:21:41.459[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:41.459[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:41.460[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:21:42.299[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:21:47.370[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:47.370[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:47.535[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:21:47.641[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:47.641[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:47.651[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:21:52.304[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:21:53.329[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:53.329[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:53.341[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:21:53.443[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:21:53.443[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:21:53.451[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:22:02.309[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:22:12.315[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:22:22.321[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:22:25.342[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:22:25.343[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:22:25.351[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:22:25.426[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:22:25.427[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:22:25.428[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:22:32.326[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:22:42.331[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:22:52.336[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:23:02.339[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:23:12.344[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:23:22.348[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:23:25.346[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:23:25.347[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:23:25.645[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:23:25.754[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:23:25.755[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:23:25.756[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:23:32.353[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:23:42.356[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:23:52.362[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:24:02.366[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:24:12.372[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:24:22.374[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:24:25.343[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:24:25.343[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:24:25.350[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:24:25.428[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:24:25.428[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:24:25.429[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:24:32.379[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:24:42.384[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:24:52.388[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:25:02.389[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:25:12.395[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:25:22.396[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:25:25.337[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:25:25.337[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:25:25.349[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:25:25.451[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:25:25.451[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:25:25.567[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:25:32.402[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:25:42.406[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:25:52.410[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:26:02.416[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:26:12.420[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:26:22.430[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:26:25.343[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:26:25.343[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:26:25.376[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:26:25.455[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:26:25.455[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:26:25.463[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:26:32.441[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:26:42.444[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:26:52.449[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:27:02.455[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:27:12.460[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:27:22.462[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:27:25.317[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:27:25.317[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:27:25.353[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:27:25.431[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:27:25.431[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:27:25.432[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:27:32.466[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:27:42.469[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:27:52.471[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:28:02.477[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:28:12.479[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:28:22.484[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:28:25.346[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:28:25.347[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:28:25.431[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:28:25.516[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:28:25.516[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:28:25.517[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:28:32.490[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:28:42.495[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:28:52.501[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:29:02.502[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:29:12.506[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:29:22.511[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:29:25.342[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:29:25.342[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:29:25.357[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:29:25.433[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:29:25.434[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:29:25.434[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:29:32.517[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:29:42.522[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:29:52.528[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:30:02.532[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:30:12.538[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:30:22.543[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:30:25.341[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:30:25.342[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:30:25.525[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:30:25.604[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:30:25.604[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:30:25.615[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:30:32.548[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:30:42.553[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:30:52.559[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:31:02.561[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:31:12.566[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:31:22.569[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:31:25.339[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:31:25.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:31:25.379[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:31:25.459[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:31:25.459[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:31:25.495[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:31:32.571[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:31:42.576[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:31:52.581[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:32:02.586[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:32:12.592[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:32:22.595[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:32:25.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:32:25.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:32:25.418[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:32:25.503[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:32:25.503[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:32:25.504[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:32:32.600[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:32:42.606[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:32:52.606[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:33:02.612[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:33:12.617[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:33:22.620[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:33:25.339[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:33:25.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:33:25.676[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:33:25.788[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:33:25.788[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:33:25.789[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:33:32.626[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:33:42.631[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:33:52.633[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:34:02.635[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:34:12.641[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:34:22.646[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:34:25.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:34:25.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:34:25.350[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:34:25.426[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:34:25.426[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:34:25.427[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:34:32.649[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:34:42.654[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:34:52.655[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:35:02.656[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:35:12.661[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:35:22.665[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:35:25.366[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:35:25.366[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:35:25.547[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:35:25.686[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:35:25.686[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:35:25.687[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:35:32.671[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:35:42.675[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:35:52.681[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:36:02.686[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:36:12.692[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:36:22.697[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:36:25.337[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:36:25.337[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:36:25.349[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:36:25.426[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:36:25.427[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:36:25.427[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:36:32.700[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:36:42.706[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:36:52.709[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:37:02.715[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:37:12.720[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:37:22.725[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:37:25.369[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:37:25.369[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:37:25.379[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:37:25.452[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:37:25.452[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:37:25.453[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:37:32.731[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:37:42.734[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:37:52.739[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:38:02.741[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:38:12.747[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:38:22.752[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:38:25.341[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:38:25.341[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:38:25.468[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:38:25.567[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:38:25.567[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:38:25.568[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:38:30.068[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:38:30.068[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:38:30.191[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:38:30.286[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:38:30.287[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:38:30.288[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:38:32.758[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:38:34.334[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:38:34.334[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:38:34.357[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:38:34.431[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:38:34.432[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:38:34.434[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:38:40.354[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:38:40.354[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:38:40.381[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:38:40.464[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:38:40.464[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:38:40.466[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:38:42.759[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:38:46.358[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:38:46.359[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:38:46.417[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:38:46.518[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:38:46.518[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:38:46.520[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:38:52.325[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:38:52.326[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:38:52.572[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:38:52.684[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:38:52.684[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:38:52.685[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:38:52.764[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:38:58.325[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:38:58.325[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:38:58.564[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:38:58.659[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:38:58.660[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:38:58.661[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:39:01.709[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:39:01.709[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:39:01.711[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- before set Executor
[36m2024-06-13 10:39:01.711[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- before Loop sArr
[36m2024-06-13 10:39:01.712[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- before Future
[36m2024-06-13 10:39:01.785[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 10:39:01.785[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 10:39:01.785[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 10:39:01.785[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 10:39:01.790[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 10:39:02.150[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- IMSI : OK
[36m2024-06-13 10:39:02.150[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- ENB : OK
[36m2024-06-13 10:39:02.151[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- MME : OK
[36m2024-06-13 10:39:02.152[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- SGW : OK
[36m2024-06-13 10:39:02.152[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- PGW : OK
[36m2024-06-13 10:39:02.765[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:39:04.320[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:39:04.321[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:39:04.338[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:39:04.427[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:39:04.427[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:39:04.428[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:39:10.324[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:39:10.324[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:39:10.419[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:39:10.501[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:39:10.501[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:39:10.502[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:39:12.771[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:39:16.376[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:39:16.376[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:39:16.386[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:39:16.679[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:39:16.679[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:39:16.680[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:39:16.751[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:39:16.751[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:39:16.751[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:39:16.751[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:39:16.752[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:39:16.752[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:39:16.751[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:39:16.752[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:39:16.842[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:39:16.842[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 10:39:16.842[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:39:16.971[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:39:16.971[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:39:16.972[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:39:17.030[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:39:17.030[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:39:17.031[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:39:22.775[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:39:32.776[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:39:42.781[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:39:52.787[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:40:02.789[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:40:03.671[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:40:03.671[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:40:03.682[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0022'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 10:40:03.732[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 10:40:03.734[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0022'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 10:40:10.435[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:40:10.436[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:40:10.460[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 10:40:10.512[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 10:40:10.516[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 10:40:12.794[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:40:15.620[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:40:15.620[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:40:15.642[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 10:40:15.661[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 10:40:15.662[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0013'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 10:40:16.853[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:40:16.854[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:40:16.870[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:40:16.938[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:40:16.938[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:40:16.950[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:40:19.961[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:40:19.961[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:40:19.975[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 10:40:19.993[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 10:40:19.995[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 10:40:22.800[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:40:23.523[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:40:23.524[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:40:23.534[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 10:40:23.556[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 10:40:23.567[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 10:40:31.935[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:40:31.935[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:40:31.953[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 10:40:31.992[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 10:40:31.994[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 10:40:32.802[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:40:34.797[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:40:34.797[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:40:34.813[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 10:40:34.978[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 10:40:34.983[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 10:40:42.804[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:40:52.810[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:41:02.812[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:41:12.814[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:41:16.813[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:41:16.813[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:41:16.934[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:41:16.996[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:41:16.996[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:41:17.006[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:41:22.819[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:41:32.825[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:41:42.829[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:41:49.136[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:41:49.136[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:41:49.150[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 10:41:49.605[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:41:49.606[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:41:49.606[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:41:49.605[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:41:49.605[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:41:49.606[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:41:49.606[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:41:49.606[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:41:49.606[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:41:49.606[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:41:49.606[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:41:49.606[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:41:49.606[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:41:49.621[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 10:41:49.621[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:41:49.679[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:41:49.679[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:41:49.679[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:41:52.833[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:42:02.838[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:42:12.844[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:42:22.850[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:42:32.856[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:42:42.861[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:42:52.864[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:43:02.869[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:43:12.874[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:43:22.880[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:43:32.885[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:43:42.890[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:43:52.896[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:44:02.897[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:44:11.804[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-13 10:44:11.805[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-06-13 10:44:11.846[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-06-13 10:44:19.361[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 5636 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-06-13 10:44:19.363[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-06-13 10:44:19.364[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-06-13 10:44:19.696[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-06-13 10:44:19.741[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 38 ms. Found 1 JPA repository interfaces.
[36m2024-06-13 10:44:19.920[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-06-13 10:44:20.445[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-06-13 10:44:20.452[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-06-13 10:44:20.452[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-06-13 10:44:20.452[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-06-13 10:44:20.524[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-06-13 10:44:20.524[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1136 ms
[36m2024-06-13 10:44:20.648[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-06-13 10:44:20.707[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-06-13 10:44:20.843[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-06-13 10:44:20.993[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-06-13 10:44:21.129[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-06-13 10:44:21.150[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-06-13 10:44:21.449[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-06-13 10:44:21.454[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-13 10:44:21.953[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-06-13 10:44:22.064[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-2][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                A.branch_id
            ,	B.branch_name
            ,	A.opteam_id
            ,	C.team_name opteam_name
            ,	A.part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-13 10:44:22.124[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@48dc06a9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1798c749, org.springframework.security.web.context.SecurityContextPersistenceFilter@4fcb796f, org.springframework.security.web.header.HeaderWriterFilter@19a544cd, org.springframework.security.web.authentication.logout.LogoutFilter@67748053, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@66c91224, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ffcb1bd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@726ee6cf, org.springframework.security.web.session.SessionManagementFilter@6037748a, org.springframework.security.web.access.ExceptionTranslationFilter@3338d706, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6700374f]
[36m2024-06-13 10:44:22.129[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 10:44:22.129[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 10:44:22.130[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                A.branch_id
            ,	B.branch_name
            ,	A.opteam_id
            ,	C.team_name opteam_name
            ,	A.part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-13 10:44:22.182[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-06-13 10:44:22.522[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-06-13 10:44:22.543[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-06-13 10:44:22.552[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.573 seconds (JVM running for 4.278)
[36m2024-06-13 10:44:23.574[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_LIST
[36m2024-06-13 10:44:23.577[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_TREE
[36m2024-06-13 10:44:23.577[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_LIST
[36m2024-06-13 10:44:23.577[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_TREE
[36m2024-06-13 10:44:23.577[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:44:33.582[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:44:43.588[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:44:53.593[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:45:03.596[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:45:13.598[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:45:23.602[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:45:33.607[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:45:43.613[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:45:53.617[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:46:03.623[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:46:13.628[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:46:23.633[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:46:33.636[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:46:43.642[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:46:53.643[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:47:03.649[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:47:13.651[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:47:23.652[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:47:33.653[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:47:43.657[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:47:53.660[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:48:03.664[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:48:13.670[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:48:23.676[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:48:33.681[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:48:43.686[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:48:53.692[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:49:03.698[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:49:13.702[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:49:23.708[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:49:33.711[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:49:43.712[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:49:53.714[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:50:03.720[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:50:13.725[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:50:23.730[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:50:33.735[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:50:43.741[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:50:53.745[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:51:03.746[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:51:13.749[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:51:23.754[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:51:33.758[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:51:43.648[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-13 10:51:43.649[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-06-13 10:51:43.692[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-06-13 10:51:52.624[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 6248 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-06-13 10:51:52.627[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-06-13 10:51:52.627[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-06-13 10:51:52.984[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-06-13 10:51:53.027[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 36 ms. Found 1 JPA repository interfaces.
[36m2024-06-13 10:51:53.189[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-06-13 10:51:53.707[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-06-13 10:51:53.717[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-06-13 10:51:53.717[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-06-13 10:51:53.717[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-06-13 10:51:53.805[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-06-13 10:51:53.805[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1146 ms
[36m2024-06-13 10:51:53.950[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-06-13 10:51:53.996[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-06-13 10:51:54.119[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-06-13 10:51:54.241[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-06-13 10:51:54.385[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-06-13 10:51:54.409[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-06-13 10:51:54.884[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-06-13 10:51:54.889[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-13 10:51:55.378[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-06-13 10:51:55.532[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@46d83ec4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2ccb8db3, org.springframework.security.web.context.SecurityContextPersistenceFilter@359fd0a2, org.springframework.security.web.header.HeaderWriterFilter@3f7d73e3, org.springframework.security.web.authentication.logout.LogoutFilter@2fb555e8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@510e0dd2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54a98358, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3941bdd7, org.springframework.security.web.session.SessionManagementFilter@3da701a1, org.springframework.security.web.access.ExceptionTranslationFilter@6f8035d6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@14a5d7ee]
[36m2024-06-13 10:51:55.574[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-06-13 10:51:55.625[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 10:51:55.625[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 10:51:55.626[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-2][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                CONCAT('BRANCH_', A.branch_id) branch_id
            ,	B.branch_name
            ,	CONCAT('TEAM_', A.opteam_id) opteam_id
            ,	C.team_name opteam_name
            ,	CONCAT('PART_', A.part_id) part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-13 10:51:55.626[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                CONCAT('BRANCH_', A.branch_id) branch_id
            ,	B.branch_name
            ,	CONCAT('TEAM_', A.opteam_id) opteam_id
            ,	C.team_name opteam_name
            ,	CONCAT('PART_', A.part_id) part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A
        where A.row_num < 4000

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-13 10:51:55.896[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-06-13 10:51:55.923[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-06-13 10:51:55.931[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.734 seconds (JVM running for 4.304)
[36m2024-06-13 10:51:56.968[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_LIST
[36m2024-06-13 10:51:57.354[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_TREE
[36m2024-06-13 10:51:57.355[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_LIST
[36m2024-06-13 10:51:57.355[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_TREE
[36m2024-06-13 10:51:57.355[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:52:00.328[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-2][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-06-13 10:52:00.328[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-2][m- Initializing Servlet 'dispatcherServlet'
[36m2024-06-13 10:52:00.329[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-2][m- Completed initialization in 1 ms
[36m2024-06-13 10:52:03.247[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-13 10:52:03.544[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 10:52:03.556[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-13 10:52:03.568[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-13 10:52:03.576[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-13 10:52:03.615[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:52:03.615[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:52:03.640[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 10:52:03.783[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:52:03.783[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:52:03.815[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:52:03.816[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:52:03.819[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 10:52:04.059[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:52:04.059[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:52:04.059[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:52:04.059[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:52:04.059[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:52:04.059[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:52:04.060[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:52:04.060[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:52:04.069[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:52:04.072[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:52:04.072[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:52:04.073[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:52:04.075[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:52:04.083[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:52:04.116[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 10:52:04.166[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:52:04.167[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:52:04.170[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:52:07.360[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:52:17.366[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:52:27.368[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:52:37.373[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:52:47.378[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:52:57.380[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:53:04.040[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:53:04.040[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:53:04.049[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:53:04.110[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:53:04.110[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:53:04.111[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:53:07.386[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:53:17.392[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:53:27.398[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:53:37.403[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:53:47.409[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:53:57.414[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:54:04.067[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:54:04.068[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:54:04.100[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:54:04.159[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:54:04.159[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:54:04.163[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:54:07.420[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:54:17.426[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:54:27.431[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:54:37.436[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:54:47.438[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:54:57.440[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:55:04.052[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:04.053[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:04.063[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:55:04.124[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:04.127[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:04.131[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:55:07.445[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:55:17.446[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:55:18.559[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-13 10:55:18.560[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-06-13 10:55:18.602[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-06-13 10:55:26.745[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 6474 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-06-13 10:55:26.748[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-06-13 10:55:26.748[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-06-13 10:55:27.075[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-06-13 10:55:27.117[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 35 ms. Found 1 JPA repository interfaces.
[36m2024-06-13 10:55:27.288[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-06-13 10:55:27.737[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-06-13 10:55:27.744[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-06-13 10:55:27.744[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-06-13 10:55:27.744[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-06-13 10:55:27.824[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-06-13 10:55:27.824[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1047 ms
[36m2024-06-13 10:55:27.953[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-06-13 10:55:27.994[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-06-13 10:55:28.095[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-06-13 10:55:28.217[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-06-13 10:55:28.522[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-06-13 10:55:28.556[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-06-13 10:55:28.846[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-06-13 10:55:28.851[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-13 10:55:29.376[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-06-13 10:55:29.565[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1e387974, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2a23c061, org.springframework.security.web.context.SecurityContextPersistenceFilter@2c56e044, org.springframework.security.web.header.HeaderWriterFilter@259ae1a9, org.springframework.security.web.authentication.logout.LogoutFilter@6e669b5c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@153cf928, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4884350b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c6557da, org.springframework.security.web.session.SessionManagementFilter@510e0dd2, org.springframework.security.web.access.ExceptionTranslationFilter@6109366a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1b6e32ee]
[36m2024-06-13 10:55:29.580[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 10:55:29.580[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 10:55:29.580[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-2][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                CONCAT('BRANCH_', A.branch_id) branch_id
            ,	B.branch_name
            ,	CONCAT('TEAM_', A.opteam_id) opteam_id
            ,	C.team_name opteam_name
            ,	CONCAT('PART_', A.part_id) part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-13 10:55:29.581[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.*
        from
        (
            select
                CONCAT('BRANCH_', A.branch_id) branch_id
            ,	B.branch_name
            ,	CONCAT('TEAM_', A.opteam_id) opteam_id
            ,	C.team_name opteam_name
            ,	CONCAT('PART_', A.part_id) part_id
            ,	D.part_name
            ,	A.mtso_name
            ,	E.mtso_id
            ,	enb_id
            ,	bts_name
            ,   enb_id value
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
            ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                    else concat(opteam_name, ' (', opteam_id, ')')
                end group_filter
            ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
            ,	@ROWNUM:=@ROWNUM+1 AS row_num
            from
                 CL_ENB  A
                left outer join  CM_BRANCH  B
                on A.branch_id = B.branch_id
                left outer join  CM_TEAM  C
                on A.opteam_id = C.team_id
                left outer join  CM_PART  D
                on A.part_id = D.part_id
                left outer join  CB_MTSO  E
                on A.mtso_name = E.mtso_name
                ,	(SELECT @rownum:=0) TMP
            where 1 = 1
            and opr_status = 'ACT'
        ) A

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-06-13 10:55:29.655[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-06-13 10:55:30.001[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-06-13 10:55:30.020[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-06-13 10:55:30.026[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.639 seconds (JVM running for 4.26)
[36m2024-06-13 10:55:34.815[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_LIST
[36m2024-06-13 10:55:34.831[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: ENB_TREE
[36m2024-06-13 10:55:34.831[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_LIST
[36m2024-06-13 10:55:34.831[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- sMsgId :: MME_TREE
[36m2024-06-13 10:55:34.831[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:55:41.603[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-06-13 10:55:41.603[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Initializing Servlet 'dispatcherServlet'
[36m2024-06-13 10:55:41.604[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Completed initialization in 0 ms
[36m2024-06-13 10:55:44.369[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-06-13 10:55:44.390[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 10:55:44.407[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-06-13 10:55:44.419[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-06-13 10:55:44.430[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-06-13 10:55:44.467[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:44.467[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:44.492[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 10:55:44.639[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:44.639[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:44.676[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:44.677[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:44.679[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 10:55:44.836[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:55:44.930[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:44.930[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:44.930[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:44.931[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:44.932[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:44.932[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:44.932[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:44.933[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:44.944[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:44.945[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:44.943[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:44.946[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:44.952[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 10:55:44.961[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:55:44.964[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:55:45.073[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:45.073[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:45.077[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:55:50.959[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:50.960[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:51.075[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 10:55:51.250[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:51.250[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:51.250[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:51.251[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:51.251[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:51.251[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:51.251[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:51.251[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:51.251[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:51.251[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:51.252[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:51.251[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:51.253[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:55:51.261[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:55:51.261[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 10:55:51.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:55:51.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:55:51.353[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:55:54.842[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:56:04.846[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:56:14.296[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:56:14.297[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:56:14.346[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '2095'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 10:56:14.802[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 10:56:14.806[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '2095'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 10:56:14.850[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:56:21.359[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:56:21.360[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:56:21.573[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 10:56:21.648[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 10:56:21.651[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 10:56:24.853[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:56:32.812[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:56:32.814[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:56:32.889[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 10:56:33.011[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 10:56:33.013[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 10:56:34.857[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:56:44.863[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:56:50.187[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:56:50.188[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:56:50.322[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 10:56:50.375[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 10:56:50.379[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 10:56:51.244[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:56:51.245[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:56:51.394[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:56:51.505[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:56:51.506[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:56:51.517[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:56:54.864[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:57:03.678[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:57:03.679[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:57:03.691[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 10:57:03.768[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 10:57:03.772[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 10:57:04.869[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:57:14.872[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:57:24.874[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:57:27.690[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:57:27.690[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:57:27.717[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 10:57:28.122[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:57:28.122[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:57:28.122[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:57:28.122[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:57:28.122[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:57:28.123[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:57:28.124[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:57:28.125[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:57:28.122[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:57:28.130[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 10:57:28.129[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:57:28.136[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:57:28.136[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:57:28.145[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:57:28.146[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:57:28.221[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:57:28.222[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:57:28.223[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:57:34.875[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:57:44.877[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:57:54.882[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:58:04.885[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:58:14.891[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:58:24.896[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:58:28.122[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:58:28.123[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:58:28.138[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:58:28.526[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:58:28.527[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:58:28.535[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:58:34.898[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:58:44.904[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:58:54.905[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:59:04.908[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:59:14.912[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:59:24.917[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:59:28.138[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:59:28.138[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:59:28.150[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 10:59:28.219[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 10:59:28.219[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 10:59:28.223[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 10:59:34.924[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:59:44.930[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 10:59:54.935[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:00:04.937[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:00:14.943[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:00:24.944[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:00:28.143[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:00:28.144[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:00:28.203[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:00:28.281[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:00:28.282[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:00:28.333[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:00:34.950[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:00:44.952[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:00:54.956[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:01:04.959[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:01:14.965[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:01:24.971[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:01:28.137[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:01:28.138[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:01:28.146[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:01:28.213[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:01:28.213[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:01:28.244[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:01:34.975[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:01:44.981[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:01:54.982[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:02:04.988[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:02:14.993[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:02:24.995[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:02:28.108[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:02:28.108[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:02:28.147[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:02:28.217[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:02:28.217[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:02:28.221[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:02:34.996[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:02:44.998[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:02:55.004[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:03:05.010[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:03:15.016[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:03:25.021[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:03:28.119[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:03:28.119[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:03:28.192[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:03:28.267[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:03:28.267[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:03:28.277[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:03:35.027[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:03:45.031[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:03:55.036[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:04:05.039[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:04:15.040[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:04:25.042[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:04:28.119[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:04:28.119[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:04:28.156[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:04:28.233[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:04:28.234[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:04:28.236[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:04:35.043[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:04:45.049[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:04:55.052[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:05:05.058[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:05:15.063[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:05:25.069[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:05:28.132[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:05:28.132[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:05:28.165[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:05:28.258[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:05:28.258[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:05:28.271[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:05:35.075[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:05:45.080[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:05:55.086[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:06:05.092[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:06:15.093[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:06:25.099[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:06:28.126[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:06:28.128[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:06:28.347[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:06:28.419[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:06:28.420[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:06:28.431[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:06:35.104[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:06:45.109[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:06:55.111[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:07:05.113[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:07:15.119[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:07:25.123[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:07:28.123[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:07:28.123[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:07:28.134[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:07:28.202[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:07:28.202[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:07:28.204[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:07:35.128[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:07:45.131[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:07:55.133[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:08:05.137[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:08:15.139[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:08:25.144[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:08:28.115[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:08:28.116[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:08:28.128[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:08:28.301[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:08:28.301[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:08:28.363[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:08:35.148[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:08:45.153[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:08:55.158[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:09:05.163[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:09:15.168[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:09:25.174[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:09:28.127[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:09:28.133[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:09:28.147[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:09:28.218[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:09:28.218[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:09:28.220[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:09:35.179[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:09:45.186[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:09:55.191[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:10:05.197[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:10:15.203[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:10:25.206[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:10:28.121[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:10:28.122[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:10:28.142[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:10:28.215[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:10:28.215[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:10:28.233[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:10:35.211[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:10:45.213[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:10:55.219[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:10:56.848[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:10:56.849[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:10:56.873[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 11:10:57.239[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:10:57.239[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:10:57.239[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:10:57.239[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:10:57.239[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:10:57.239[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:10:57.239[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:10:57.239[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:10:57.239[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:10:57.239[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:10:57.241[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:10:57.241[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:10:57.242[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:10:57.289[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 11:10:57.289[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:10:57.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:10:57.336[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:10:57.337[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:11:05.224[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:11:15.231[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:11:25.233[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:11:35.239[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:11:45.244[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:11:55.246[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:11:57.276[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:11:57.276[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:11:57.291[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:11:57.385[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:11:57.385[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:11:57.395[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:12:05.253[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:12:15.259[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:12:25.263[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:12:35.268[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:12:45.272[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:12:55.277[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:12:57.284[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:12:57.285[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:12:57.345[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:12:57.426[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:12:57.426[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:12:57.437[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:13:05.278[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:13:15.283[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:13:25.289[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:13:35.289[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:13:45.295[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:13:55.300[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:13:57.273[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:13:57.273[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:13:57.281[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:13:57.372[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:13:57.372[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:13:57.523[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:14:05.306[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:14:15.311[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:14:25.311[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:14:35.315[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:14:45.318[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:14:55.324[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:14:57.261[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:14:57.261[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:14:57.304[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:14:57.383[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:14:57.384[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:14:57.435[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:15:05.330[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:15:15.336[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:15:22.681[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:15:22.681[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:15:22.682[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:15:22.688[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:15:22.681[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:15:22.693[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:15:22.699[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:15:22.722[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:15:22.722[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 11:15:22.723[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:15:22.734[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:15:22.969[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:15:22.970[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:15:22.971[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:15:23.035[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:15:23.035[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:15:23.036[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:15:25.342[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:15:35.347[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:15:45.350[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:15:55.352[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:16:05.358[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:16:15.365[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:16:16.880[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:16:16.881[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:16:16.906[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:16:16.908[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:16:17.017[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 11:16:17.033[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:16:17.034[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:16:17.034[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:16:17.035[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:16:17.058[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:16:17.062[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:16:17.264[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:16:17.264[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:16:17.270[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:16:17.333[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:16:17.334[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:16:17.335[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:16:25.370[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:16:35.373[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:16:45.378[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:16:55.381[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:17:05.382[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:17:15.384[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:17:16.958[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:17:16.958[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:17:16.994[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:17:17.076[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:17:17.077[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:17:17.088[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:17:25.390[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:17:35.391[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:17:45.391[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:17:55.394[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:18:05.397[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:18:15.401[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:18:17.023[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:18:17.027[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:18:17.098[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:18:17.179[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:18:17.180[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:18:17.199[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:18:25.406[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:18:35.410[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:18:45.412[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:18:55.420[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:19:05.426[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:19:15.432[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:19:16.983[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:19:16.983[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:19:16.991[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:19:17.081[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:19:17.081[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:19:17.098[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:19:25.437[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:19:35.440[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:19:45.441[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:19:55.444[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:20:05.448[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:20:15.449[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:20:16.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:20:16.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:20:16.967[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:20:17.084[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:20:17.086[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:20:17.401[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:20:25.451[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:20:35.454[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:20:45.459[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:20:55.463[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:21:05.468[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:21:15.476[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:21:16.970[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:21:16.971[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:21:17.035[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:21:17.117[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:21:17.117[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:21:17.126[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:21:25.481[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:21:35.487[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:21:45.492[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:21:55.498[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:22:05.501[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:22:15.507[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:22:16.983[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:22:16.983[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:22:16.993[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:22:17.101[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:22:17.101[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:22:17.127[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:22:25.510[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:22:35.515[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:22:45.520[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:22:55.526[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:23:05.531[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:23:06.802[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:06.802[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:06.802[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:06.802[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:06.803[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:06.803[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:06.802[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:06.804[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:06.806[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:06.807[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:06.806[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:06.807[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:06.840[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:06.841[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:06.949[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:23:06.950[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 11:23:06.950[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:23:06.951[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:23:06.958[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:06.958[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:07.008[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:07.008[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:07.034[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:07.034[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:07.035[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 11:23:07.050[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:07.050[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:07.051[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:07.051[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:07.052[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:23:07.086[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:07.086[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:07.087[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:23:07.157[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:07.157[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:07.158[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:23:13.623[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:13.623[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:13.624[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:13.624[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:13.623[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:13.624[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:13.636[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 11:23:13.636[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:23:13.949[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:23:13.949[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:23:13.959[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:23:15.536[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:23:25.542[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:23:35.544[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:23:45.550[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:23:55.554[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:24:05.559[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:24:13.812[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:24:13.812[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:24:13.847[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:24:13.945[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:24:13.945[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:24:14.086[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:24:15.561[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:24:25.564[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:24:35.567[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:24:45.572[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:24:55.578[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:25:05.580[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:25:13.752[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:25:13.757[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:25:13.775[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:25:13.850[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:25:13.850[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:25:13.918[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:25:15.582[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:25:25.586[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:25:35.587[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:25:42.231[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:25:42.231[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:25:42.232[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:25:42.232[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:25:42.256[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 11:25:42.308[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:25:42.308[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:25:42.309[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:25:42.309[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:25:42.310[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:25:42.322[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:25:42.496[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:25:42.496[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:25:42.497[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:25:42.558[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:25:42.558[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:25:42.560[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:25:45.591[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:25:55.597[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:26:00.105[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:26:00.105[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:26:00.105[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:26:00.105[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:26:00.106[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:26:00.106[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:26:00.105[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:26:00.107[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:26:00.166[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:26:00.166[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:26:00.148[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 11:26:00.452[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:26:00.452[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:26:00.453[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:26:00.516[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:26:00.516[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:26:00.518[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:26:05.599[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:26:15.604[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:26:25.606[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:26:35.610[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:26:45.615[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:26:55.620[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:27:05.625[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:27:15.630[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:27:25.633[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:27:29.604[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:27:29.604[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:27:29.613[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:27:29.694[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:27:29.694[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:27:29.702[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:27:35.635[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:27:41.138[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:27:41.139[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:27:41.139[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:27:41.139[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:27:41.140[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:27:41.139[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:27:41.141[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:27:41.141[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:27:41.149[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:27:41.153[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:27:41.155[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 11:27:41.640[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:27:41.640[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:27:41.642[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:27:41.709[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:27:41.710[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:27:41.714[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:27:45.641[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:27:55.643[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:28:04.270[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:28:04.270[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:28:04.270[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:28:04.270[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:28:04.270[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:28:04.270[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:28:04.270[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:28:04.271[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:28:04.277[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 11:28:04.279[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:28:04.283[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:28:04.600[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:28:04.601[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:28:04.602[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:28:04.663[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:28:04.663[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:28:04.665[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:28:05.648[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:28:15.654[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:28:25.659[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:28:35.663[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:28:45.668[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:28:55.671[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:29:04.390[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:29:04.390[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:29:04.494[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:29:04.577[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:29:04.577[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:29:04.588[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:29:05.677[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:29:15.679[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:29:25.684[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:29:35.688[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:29:45.689[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:29:55.695[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:30:04.402[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:30:04.403[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:30:04.416[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:30:04.489[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:30:04.490[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:30:04.502[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:30:05.696[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:30:15.701[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:30:25.704[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:30:35.708[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:30:45.711[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:30:55.717[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:31:04.402[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:31:04.402[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:31:04.439[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:31:04.517[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:31:04.517[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:31:04.568[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:31:05.722[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:31:15.727[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:31:25.731[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:31:35.733[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:31:45.738[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:31:55.742[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:32:04.411[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:32:04.411[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:32:04.424[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:32:04.504[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:32:04.504[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:32:04.512[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:32:05.747[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:32:15.750[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:32:25.757[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:32:35.763[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:32:45.767[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:32:50.936[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:32:50.937[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:32:51.050[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 11:32:51.983[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:32:51.984[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:32:51.984[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:32:51.984[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:32:51.995[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:32:51.995[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:32:52.009[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:32:52.010[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:32:52.010[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:32:52.010[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:32:52.014[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:32:52.014[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:32:52.066[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:32:52.068[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 11:32:52.071[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:32:52.123[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:32:52.123[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:32:52.125[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:32:55.770[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:33:05.773[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:33:15.779[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:33:25.782[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:33:35.787[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:33:45.789[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:33:51.934[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:33:51.934[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:33:51.946[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:33:52.029[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:33:52.030[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:33:52.038[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:33:55.794[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:34:05.795[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:34:15.801[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:34:25.802[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:34:35.807[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:34:45.812[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:34:51.939[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:34:51.939[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:34:52.062[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:34:52.262[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:34:52.263[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:34:52.277[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:34:55.817[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:35:05.822[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:35:15.825[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:35:25.830[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:35:35.835[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:35:45.836[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:35:51.905[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:35:51.905[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:35:51.950[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:35:52.028[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:35:52.029[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:35:52.037[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:35:55.843[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:36:05.846[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:36:13.192[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:36:13.193[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:36:13.216[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 11:36:14.124[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:36:14.124[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:36:14.126[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:36:14.126[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:36:14.124[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:36:14.126[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:36:14.124[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:36:14.127[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:36:14.126[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:36:14.128[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:36:14.138[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 11:36:14.140[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:36:14.140[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:36:14.141[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:36:14.149[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:36:14.253[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:36:14.254[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:36:14.255[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:36:15.849[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:36:25.855[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:36:35.860[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:36:45.866[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:36:55.866[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:37:05.868[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:37:14.034[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:37:14.035[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:37:14.071[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:37:14.191[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:37:14.192[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:37:14.263[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:37:15.874[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:37:25.879[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:37:35.883[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:37:45.889[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:37:55.895[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:38:05.897[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:38:14.106[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:38:14.106[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:38:14.120[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:38:14.204[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:38:14.204[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:38:14.216[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:38:15.903[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:38:25.909[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:38:35.910[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:38:36.565[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:38:36.569[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:38:36.600[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 11:38:37.829[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:38:37.830[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:38:37.829[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:38:37.831[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:38:37.832[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:38:37.833[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:38:37.831[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:38:37.835[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:38:37.836[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:38:37.837[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:38:37.836[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:38:37.839[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:38:37.843[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:38:37.849[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 11:38:37.852[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:38:37.975[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:38:37.975[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:38:37.977[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:38:45.912[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:38:55.917[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:39:05.923[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:39:15.930[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:39:25.935[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:39:35.936[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:39:37.763[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:39:37.763[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:39:37.773[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:39:38.032[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:39:38.032[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:39:38.045[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:39:45.941[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:39:55.946[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:40:05.947[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:40:15.953[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:40:25.958[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:40:35.961[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:40:37.786[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:40:37.786[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:40:37.797[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:40:37.895[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:40:37.895[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:40:37.920[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:40:45.964[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:40:55.970[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:41:05.971[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:41:15.976[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:41:25.980[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:41:35.983[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:41:37.839[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:41:37.840[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:41:37.922[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:41:38.092[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:41:38.093[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:41:38.102[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:41:45.985[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:41:55.992[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:42:05.995[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:42:16.001[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:42:26.004[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:42:36.008[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:42:37.792[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:42:37.792[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:42:37.827[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:42:37.917[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:42:37.917[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:42:37.939[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:42:46.009[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:42:56.014[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:43:06.020[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:43:16.023[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:43:26.028[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:43:36.033[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:43:37.783[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:43:37.784[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:43:37.791[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:43:37.883[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:43:37.883[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:43:37.894[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:43:46.035[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:43:56.040[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:44:06.045[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:44:16.050[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:44:26.053[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:44:36.058[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:44:37.779[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:44:37.779[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:44:37.919[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:44:38.005[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:44:38.005[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:44:38.042[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:44:46.060[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:44:56.060[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:45:06.065[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:45:16.067[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:45:26.072[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:45:36.077[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:45:37.772[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:45:37.772[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:45:37.782[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:45:37.884[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:45:37.884[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:45:37.892[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:45:46.083[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:45:56.086[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:46:06.088[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:46:16.088[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:46:26.090[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:46:36.091[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:46:38.326[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:46:38.326[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:46:38.337[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:46:38.639[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:46:38.639[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:46:38.673[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:46:46.093[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:46:56.098[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:47:06.103[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:47:16.105[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:47:26.111[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:47:36.116[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:47:46.117[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:47:56.122[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:48:06.128[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:48:16.134[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:48:25.333[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:48:25.334[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:48:25.504[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:48:25.632[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:48:25.633[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:48:25.646[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:48:26.138[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:48:36.140[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:48:46.146[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:48:56.147[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:49:06.153[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:49:16.159[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:49:25.322[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:49:25.322[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:49:25.329[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:49:25.435[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:49:25.435[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:49:25.436[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:49:26.161[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:49:36.166[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:49:46.171[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:49:56.174[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:50:06.177[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:50:16.183[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:50:25.327[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:50:25.327[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:50:25.336[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:50:25.452[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:50:25.452[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:50:25.634[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:50:26.189[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:50:36.194[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:50:46.200[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:50:56.204[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:51:06.213[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:51:16.215[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:51:25.326[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:51:25.327[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:51:25.594[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:51:25.761[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:51:25.761[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:51:26.117[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:51:26.223[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:51:36.231[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:51:46.232[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:51:56.242[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:52:06.244[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:52:16.253[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:52:25.326[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:52:25.326[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:52:25.370[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:52:25.474[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:52:25.475[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:52:25.503[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:52:26.262[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:52:36.272[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:52:46.281[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:52:56.288[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:53:06.299[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:53:16.310[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:53:25.312[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:53:25.313[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:53:25.503[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:53:25.634[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:53:25.634[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:53:25.647[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:53:26.313[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:53:36.317[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:53:46.323[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:53:56.331[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:54:06.341[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:54:16.348[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:54:25.396[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:54:25.398[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:54:25.429[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:54:25.528[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:54:25.529[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:54:25.530[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:54:26.355[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:54:36.363[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:54:46.382[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:54:56.408[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:55:06.419[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:55:16.432[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:55:25.407[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:55:25.407[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:55:25.805[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:55:25.944[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:55:25.945[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:55:25.946[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:55:26.445[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:55:36.448[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:55:46.455[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:55:56.462[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:56:06.474[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:56:16.479[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:56:25.394[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:56:25.395[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:56:25.598[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:56:25.726[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:56:25.726[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:56:25.727[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:56:26.492[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:57:15.751[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m16s635ms).
[36m2024-06-13 11:57:23.136[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:57:33.141[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:57:43.153[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:57:53.165[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:58:41.519[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:58:50.022[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:58:50.023[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:58:51.427[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 11:58:51.561[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 11:58:51.562[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 11:58:51.563[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 11:58:51.642[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:58:53.797[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m8s28ms).
[36m2024-06-13 11:59:01.648[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:59:11.658[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 11:59:21.664[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:00:24.661[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:00:34.672[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:00:43.021[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:00:43.021[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:00:43.045[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:00:43.138[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:00:43.139[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:00:43.140[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:00:44.683[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:00:46.812[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m23s4ms).
[36m2024-06-13 12:00:54.687[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:01:03.493[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:01:03.494[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:01:03.508[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:01:03.589[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:01:03.594[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:01:03.596[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:01:04.701[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:01:14.710[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:01:24.713[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:01:34.720[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:01:44.724[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:01:54.727[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:01:55.490[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:01:55.491[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:01:55.499[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:01:55.591[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:01:55.592[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:01:55.593[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:02:04.733[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:02:14.734[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:02:24.734[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:02:34.740[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:02:44.746[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:02:54.751[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:02:55.500[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:02:55.501[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:02:55.568[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:02:55.657[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:02:55.657[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:02:55.659[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:03:04.753[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:03:14.760[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:03:24.762[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:03:34.768[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:03:44.773[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:03:54.779[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:03:55.482[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:03:55.482[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:03:55.506[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:03:55.580[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:03:55.580[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:03:55.582[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:04:04.784[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:04:14.790[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:04:24.791[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:04:34.797[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:04:44.803[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:04:54.807[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:04:55.487[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:04:55.487[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:04:55.623[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:04:55.710[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:04:55.710[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:04:55.712[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:05:04.811[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:05:14.813[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:05:24.819[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:05:34.819[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:05:44.822[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:05:54.824[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:05:55.494[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:05:55.494[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:05:55.502[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:05:55.587[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:05:55.587[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:05:55.588[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:06:04.831[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:06:14.836[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:06:24.839[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:06:34.843[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:06:44.849[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:06:54.855[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:06:55.489[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:06:55.490[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:06:55.534[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:06:55.608[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:06:55.608[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:06:55.609[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:07:04.858[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:07:14.864[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:07:24.866[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:07:34.867[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:07:44.871[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:07:54.871[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:07:55.520[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:07:55.520[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:07:55.528[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:07:55.602[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:07:55.602[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:07:55.603[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:08:04.877[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:08:14.883[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:08:24.889[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:08:34.895[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:08:44.902[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:08:54.907[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:08:55.741[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:08:55.742[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:08:55.778[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:08:55.870[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:08:55.870[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:08:55.872[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:09:04.909[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:09:14.910[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:09:24.915[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:09:34.919[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:09:44.922[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:09:54.925[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:09:55.521[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:09:55.522[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:09:55.530[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:09:55.604[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:09:55.604[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:09:55.605[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:10:04.929[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:10:14.932[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:10:24.934[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:10:34.936[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:10:44.940[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:10:54.945[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:10:55.500[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:10:55.500[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:10:55.517[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:10:55.736[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:10:55.736[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:10:55.737[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:11:04.952[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:11:14.958[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:11:24.960[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:11:34.966[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:11:44.971[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:11:54.976[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:11:56.088[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:11:56.088[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:11:56.097[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:11:56.190[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:11:56.190[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:11:56.193[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:12:04.982[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:12:14.988[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:12:24.993[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:12:34.999[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:12:45.005[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:12:55.012[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:13:05.018[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:13:15.022[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:13:25.028[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:13:35.035[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:13:43.083[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:13:43.084[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:13:43.100[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:13:43.180[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:13:43.180[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:13:43.183[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:13:45.040[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:13:55.041[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:14:05.042[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:14:15.047[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:14:25.053[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:14:35.057[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:14:43.080[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:14:43.080[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:14:43.228[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:14:43.356[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:14:43.356[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:14:43.357[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:14:45.063[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:14:55.069[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:15:05.073[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:15:15.079[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:15:25.085[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:15:35.092[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:15:43.090[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:15:43.091[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:15:43.101[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:15:43.227[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:15:43.227[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:15:43.229[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:15:45.093[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:15:55.098[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:16:05.101[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:16:15.106[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:16:25.109[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:16:35.111[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:16:43.051[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:16:43.053[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:16:43.074[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:16:43.174[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:16:43.174[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:16:43.176[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:16:45.119[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:16:55.130[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:17:05.132[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:17:15.135[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:17:25.140[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:17:35.144[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:17:43.094[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:17:43.094[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:17:43.158[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:17:43.294[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:17:43.294[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:17:43.296[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:17:45.154[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:17:55.156[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:18:05.159[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:18:15.170[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:18:25.178[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:18:35.187[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:18:43.080[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:18:43.081[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:18:43.090[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:18:43.186[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:18:43.187[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:18:43.189[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:18:45.198[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:18:55.205[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:19:05.212[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:19:15.219[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:19:25.224[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:19:35.229[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:19:43.096[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:19:43.096[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:19:43.332[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:19:43.464[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:19:43.464[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:19:43.466[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:19:45.237[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:19:55.246[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:20:05.257[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:20:15.263[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:20:25.273[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:20:35.284[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:20:43.097[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:20:43.097[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:20:43.107[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:20:43.199[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:20:43.199[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:20:43.200[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:20:45.291[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:20:55.302[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:21:05.313[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:21:15.324[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:21:25.332[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:21:35.335[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:21:43.091[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:21:43.091[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:21:43.278[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:21:43.406[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:21:43.406[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:21:43.407[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:21:45.346[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:21:55.357[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:22:05.368[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:22:15.380[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:23:09.179[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m22s165ms).
[36m2024-06-13 12:23:17.552[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:23:27.564[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:23:35.260[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:23:35.260[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:23:35.267[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:23:35.362[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:23:35.363[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:23:35.364[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:23:37.576[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:23:47.588[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:24:48.725[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:24:58.736[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:25:00.337[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m21s141ms).
[36m2024-06-13 12:25:08.745[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:25:18.751[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:25:26.395[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:25:26.395[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:25:26.403[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:25:26.490[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:25:26.490[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:25:26.491[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:25:28.761[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:26:34.561[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:26:44.572[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:26:54.573[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:26:56.151[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m25s807ms).
[36m2024-06-13 12:27:04.584[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:27:14.595[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:28:17.513[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:28:17.513[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:28:19.954[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:28:21.507[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m25s356ms).
[36m2024-06-13 12:28:22.523[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- 21. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@3b576ee3[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
java.sql.SQLSyntaxErrorException: (conn=7448) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128) ~[HikariCP-4.0.3.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:337) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:70) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor228.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectOne(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:152) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwMonitorRepositoryImpl.getLastStatusTime(NwMonitorRepositoryImpl.java:21) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwMonitorRepositoryImpl$$FastClassBySpringCGLIB$$7791df91.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwMonitorRepositoryImpl$$EnhancerBySpringCGLIB$$bb98889f.getLastStatusTime(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwMonitorServiceImpl.getLastStatusTime(NwMonitorServiceImpl.java:19) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwMonitorController.getLastStatusTime(NwMonitorController.java:24) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwMonitorController$$FastClassBySpringCGLIB$$be77db10.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.controller.NwMonitorController$$EnhancerBySpringCGLIB$$70256b91.getLastStatusTime(<generated>) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor227.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-06-13 12:28:22.558[m [33m[WARN ][m [com.zaxxer.hikari.pool.PoolBase] [33m[http-nio-9091-exec-5][m- HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@79f9bca3 ((conn=7448) Connection.setNetworkTimeout cannot be called on a closed connection). Possibly consider using a shorter maxLifetime value.
[36m2024-06-13 12:28:22.563[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[HikariPool-1 connection closer][m- 21. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@3b576ee3[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
java.sql.SQLSyntaxErrorException: (conn=7448) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451) ~[HikariCP-4.0.3.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-06-13 12:28:22.586[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:28:22.706[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:28:22.706[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:28:22.707[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:28:29.961[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:28:39.964[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:28:49.975[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:29:45.289[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:29:55.300[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:30:02.846[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:30:02.846[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:30:02.945[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:30:03.054[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:30:03.054[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:30:03.056[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:30:05.311[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:30:06.821[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m15s310ms).
[36m2024-06-13 12:30:15.320[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:30:25.328[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:31:26.758[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:31:28.258[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m21s437ms).
[36m2024-06-13 12:31:36.768[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:31:46.779[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:31:54.270[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:31:54.270[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:31:54.280[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:31:54.370[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:31:54.370[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:31:54.372[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:31:56.790[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:32:06.792[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:33:03.231[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:33:13.238[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:33:14.711[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m16s441ms).
[36m2024-06-13 12:33:23.242[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:33:33.244[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:33:40.711[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:33:40.712[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:33:40.791[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:33:40.891[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:33:40.891[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:33:40.892[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:33:43.255[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:34:45.900[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:34:55.904[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:35:05.915[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:35:07.367[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m22s645ms).
[36m2024-06-13 12:35:15.921[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:36:11.475[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:36:18.894[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:36:18.895[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:36:21.094[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:36:21.250[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:36:21.250[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:36:21.251[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:36:21.485[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:36:22.920[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m15s552ms).
[36m2024-06-13 12:36:31.496[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:36:41.502[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:36:51.511[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:37:44.984[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:37:54.996[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:38:02.360[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:38:02.360[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:38:02.371[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:38:02.462[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:38:02.462[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:38:02.463[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:38:05.007[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:38:06.405[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m13s473ms).
[36m2024-06-13 12:38:15.015[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:38:25.019[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:39:28.017[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:39:29.406[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m23s2ms).
[36m2024-06-13 12:39:38.024[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:39:48.028[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:39:55.337[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:39:55.337[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:39:55.527[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:39:55.662[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:39:55.662[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:39:55.664[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:39:58.031[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:40:08.026[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:40:15.149[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:40:15.149[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:40:15.162[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:40:15.279[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:40:15.279[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:40:15.281[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:40:18.027[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:40:28.031[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:40:38.035[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:40:48.037[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:40:58.038[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:41:07.752[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:41:07.752[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:41:07.833[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:41:08.014[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:41:08.014[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:41:08.016[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:41:08.040[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:41:18.045[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:41:28.047[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:41:38.049[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:41:48.055[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:41:58.058[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:42:07.790[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:42:07.791[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:42:07.802[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:42:07.880[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:42:07.880[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:42:07.881[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:42:08.063[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:42:18.065[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:42:24.936[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:42:24.937[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:42:25.009[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 12:42:25.967[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:42:25.968[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:42:25.967[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:42:25.968[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:42:25.968[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:42:25.968[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:42:25.968[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:42:25.969[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:42:25.971[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:42:25.971[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:42:25.968[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:42:25.976[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:42:26.058[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 12:42:26.058[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:42:26.059[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:42:26.123[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:42:26.123[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:42:26.124[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:42:28.068[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:42:38.070[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:42:48.076[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:42:58.078[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:43:08.081[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:43:18.087[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:43:25.954[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:43:25.955[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:43:25.994[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:43:26.084[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:43:26.084[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:43:26.085[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:43:28.089[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:43:38.094[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:43:48.098[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:43:58.104[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:44:08.109[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:44:18.111[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:44:25.895[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:44:25.895[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:44:25.985[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:44:26.067[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:44:26.067[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:44:26.069[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:44:28.116[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:44:38.122[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:44:48.123[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:44:58.128[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:45:03.301[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:45:03.302[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:45:03.343[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 12:45:04.207[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:45:04.207[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:45:04.207[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:45:04.207[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:45:04.208[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:45:04.207[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:45:04.208[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:45:04.208[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:45:04.209[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:45:04.209[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:45:04.210[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:45:04.210[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:45:04.388[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 12:45:04.390[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:45:04.388[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:45:04.441[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:45:04.441[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:45:04.442[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:45:08.133[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:45:18.139[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:45:28.146[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:45:36.414[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:45:36.414[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:45:36.447[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 12:45:37.362[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:45:37.363[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:45:37.363[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:45:37.364[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:45:37.365[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:45:37.365[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:45:37.365[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:45:37.366[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:45:37.370[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:45:37.371[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:45:37.373[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:45:37.373[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:45:37.616[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:45:37.616[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 12:45:37.617[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:45:37.682[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:45:37.682[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:45:37.684[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:45:38.152[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:45:48.154[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:45:58.159[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:46:08.165[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:46:18.171[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:46:28.177[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:46:37.344[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:46:37.344[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:46:37.351[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:46:37.440[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:46:37.440[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:46:37.451[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:46:38.182[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:46:48.186[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:46:58.191[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:47:08.197[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:47:17.714[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:47:17.715[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:47:17.715[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:47:17.715[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:47:17.714[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:47:17.723[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:47:17.723[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:47:17.721[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:47:17.743[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:47:17.743[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:47:17.776[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 12:47:18.093[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:47:18.094[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:47:18.094[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:47:18.130[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:47:18.130[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:47:18.144[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:47:18.203[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:47:25.864[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:47:25.868[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:47:26.140[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 12:47:26.944[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:47:26.945[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:47:26.945[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:47:26.945[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:47:26.944[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:47:26.946[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:47:26.947[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:47:26.947[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:47:26.944[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:47:26.951[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:47:26.944[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:47:26.955[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:47:26.988[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:47:26.988[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 12:47:26.990[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:47:27.124[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:47:27.125[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:47:27.126[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:47:28.208[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:47:38.213[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:47:48.214[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:47:58.218[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:48:08.223[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:48:18.226[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:48:26.882[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:48:26.884[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:48:26.895[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:48:26.996[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:48:26.996[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:48:27.005[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:48:28.232[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:48:38.238[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:48:48.242[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:48:58.248[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:49:08.253[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:49:18.259[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:49:26.875[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:49:26.875[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:49:26.920[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:49:27.004[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:49:27.004[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:49:27.005[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:49:28.260[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:49:38.266[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:49:48.267[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:49:51.725[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:49:51.726[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:49:51.726[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:49:51.726[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:49:51.726[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:49:51.727[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:49:51.726[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:49:51.727[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:49:51.739[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:49:51.740[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:49:51.740[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 12:49:52.045[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:49:52.045[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:49:52.050[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:49:52.153[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:49:52.153[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:49:52.155[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:49:58.273[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:50:08.277[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:50:18.281[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:50:28.286[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:50:38.289[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:50:48.294[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:50:51.959[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:50:51.960[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:50:51.986[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:50:52.073[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:50:52.073[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:50:52.081[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:50:58.300[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:51:08.303[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:51:18.309[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:51:28.310[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:51:38.315[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:51:48.320[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:51:53.353[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:51:53.354[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:51:53.374[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:51:53.452[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:51:53.452[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:51:53.453[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:51:58.322[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:51:59.772[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:51:59.772[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:51:59.785[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 12:52:00.843[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:52:00.844[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:52:00.843[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:52:00.844[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:52:00.845[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:52:00.843[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:52:00.845[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:52:00.845[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:52:00.845[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:52:00.845[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:52:00.843[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:52:00.846[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:52:00.882[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:52:00.882[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 12:52:00.884[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:52:00.990[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:52:00.990[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:52:00.993[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:52:08.329[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:52:18.333[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:52:19.529[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:52:19.529[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:52:19.540[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 12:52:20.531[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:52:20.531[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:52:20.530[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:52:20.532[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:52:20.534[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:52:20.534[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:52:20.536[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:52:20.536[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:52:20.586[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:52:20.589[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 12:52:20.671[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:52:20.671[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:52:20.765[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:52:20.766[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:52:20.768[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:52:20.886[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:52:20.886[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:52:20.889[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:52:28.336[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:52:38.339[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:52:48.346[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:52:58.348[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:53:08.352[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:53:18.358[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:53:20.460[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:53:20.461[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:53:20.608[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:53:20.701[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:53:20.701[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:53:20.702[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:53:28.365[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:53:38.367[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:53:48.373[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:53:58.378[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:54:08.384[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:54:18.390[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:54:20.461[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:54:20.462[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:54:20.653[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:54:20.774[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:54:20.774[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:54:20.782[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:54:28.397[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:54:38.402[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:54:48.407[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:54:51.773[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:54:51.774[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:54:51.786[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 12:54:52.776[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:54:52.777[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:54:52.777[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:54:52.777[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:54:52.779[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:54:52.780[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:54:52.780[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:54:52.780[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:54:52.780[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:54:52.780[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:54:52.816[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:54:52.816[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:54:52.830[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:54:52.830[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 12:54:52.832[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:54:52.911[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:54:52.912[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:54:52.913[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:54:58.409[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:55:08.414[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:55:18.421[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:55:28.428[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:55:38.430[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:55:48.435[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:55:52.765[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:55:52.765[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:55:52.777[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:55:52.876[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:55:52.876[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:55:52.884[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:55:58.440[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:56:03.047[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:56:03.047[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:56:03.085[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 12:56:04.147[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:56:04.147[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:56:04.148[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:56:04.148[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:56:04.148[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:56:04.148[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:56:04.147[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:56:04.147[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:56:04.149[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:56:04.149[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:56:04.149[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:56:04.149[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:56:04.157[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:56:04.162[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 12:56:04.162[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:56:04.386[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:56:04.386[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:56:04.389[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:56:08.446[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:56:18.448[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:56:28.454[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:56:38.461[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:56:48.463[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:56:58.465[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:57:04.096[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:57:04.097[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:57:04.104[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:57:04.203[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:57:04.203[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:57:04.212[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:57:08.471[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:57:18.475[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:57:28.477[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:57:33.258[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:57:33.259[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:57:33.275[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 12:57:34.276[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:57:34.276[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:57:34.276[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:57:34.277[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:57:34.277[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:57:34.278[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:57:34.276[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:57:34.278[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:57:34.276[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:57:34.279[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:57:34.281[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:57:34.281[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:57:34.307[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 12:57:34.307[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:57:34.310[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:57:34.396[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:57:34.397[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:57:34.398[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:57:38.481[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:57:48.487[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:57:58.491[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:58:08.495[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:58:18.500[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:58:28.506[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:58:34.214[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:58:34.214[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:58:34.223[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:58:34.316[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:58:34.317[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:58:34.327[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:58:38.511[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:58:48.517[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:58:58.519[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:59:08.524[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:59:18.528[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:59:28.529[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:59:34.265[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:59:34.265[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:59:34.274[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 12:59:34.358[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 12:59:34.358[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 12:59:34.359[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 12:59:38.530[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:59:48.536[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 12:59:58.542[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:00:08.544[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:00:18.551[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:00:28.553[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:00:34.274[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:00:34.275[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:00:34.287[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:00:34.366[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:00:34.366[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:00:34.375[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:00:38.559[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:00:48.565[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:00:58.568[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:01:08.575[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:01:18.578[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:01:28.583[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:01:34.272[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:01:34.272[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:01:34.305[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:01:34.395[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:01:34.395[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:01:34.434[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:01:38.586[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:01:48.587[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:01:58.592[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:02:08.598[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:02:18.603[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:02:28.609[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:02:38.613[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:02:48.614[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:02:58.620[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:03:08.626[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:03:10.236[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:03:10.244[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:03:10.237[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:03:10.245[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:03:10.236[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:03:10.246[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:03:10.237[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:03:10.247[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:03:10.242[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:03:10.248[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:03:10.237[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:03:10.248[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:03:10.395[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:03:10.397[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 13:03:10.395[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:03:10.397[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:03:10.403[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:03:10.443[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 13:03:11.603[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:03:11.604[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:03:11.620[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:03:13.742[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:03:13.744[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:03:13.770[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 13:03:14.687[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:03:14.688[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:03:14.687[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:03:14.688[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:03:14.688[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:03:14.688[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:03:14.688[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:03:14.687[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:03:14.688[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:03:14.688[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:03:14.698[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:03:14.700[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 13:03:14.753[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:03:14.757[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:03:14.794[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:03:14.860[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:03:14.861[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:03:14.862[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:03:18.631[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:03:28.635[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:03:35.995[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:03:35.995[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:03:36.075[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '4383'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 13:03:36.124[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 13:03:36.131[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '4383'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 13:03:38.640[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:03:48.641[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:03:58.648[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:04:08.652[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:04:14.657[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:04:14.659[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:04:14.738[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:04:14.841[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:04:14.842[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:04:14.870[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:04:18.660[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:04:28.662[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:04:38.665[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:04:48.667[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:04:58.669[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:05:08.673[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:05:14.652[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:05:14.653[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:05:14.662[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:05:14.761[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:05:14.761[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:05:14.762[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:05:18.679[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:05:28.683[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:05:38.684[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:05:48.685[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:05:58.690[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:06:08.694[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:06:14.673[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:06:14.673[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:06:14.708[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:06:14.784[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:06:14.784[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:06:14.785[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:06:18.698[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:06:28.703[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:06:38.708[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:06:48.710[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:06:58.715[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:07:08.721[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:07:14.668[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:07:14.669[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:07:14.838[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:07:14.929[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:07:14.929[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:07:14.931[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:07:18.724[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:07:28.730[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:07:38.735[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:07:42.835[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:07:42.835[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:07:42.853[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 13:07:43.887[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:07:43.887[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:07:43.887[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:07:43.887[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:07:43.888[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:07:43.888[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:07:43.888[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:07:43.888[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:07:43.887[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:07:43.888[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:07:43.918[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 13:07:43.918[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:07:43.959[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:07:43.960[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:07:43.961[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:07:44.039[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:07:44.039[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:07:44.040[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:07:48.742[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:07:58.747[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:08:08.749[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:08:18.754[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:08:28.761[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:08:38.766[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:08:48.771[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:08:58.777[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:09:07.256[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:09:07.256[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:09:07.265[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:09:07.347[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:09:07.347[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:09:07.354[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:09:08.778[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:09:18.783[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:09:28.787[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:09:38.791[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:09:43.893[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:09:43.894[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:09:43.924[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:09:44.006[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:09:44.007[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:09:44.008[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:09:48.793[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:09:58.794[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:10:08.800[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:10:18.802[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:10:28.808[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:10:38.814[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:10:43.882[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:10:43.882[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:10:43.916[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:10:43.996[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:10:43.996[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:10:44.078[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:10:48.818[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:10:58.823[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:11:08.829[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:11:18.831[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:11:28.832[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:11:38.837[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:11:43.881[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:11:43.881[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:11:43.913[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:11:43.990[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:11:43.991[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:11:43.992[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:11:48.843[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:11:58.849[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:12:08.854[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:12:18.861[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:12:28.864[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:12:38.870[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:12:44.442[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:12:44.443[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:12:44.860[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:12:44.982[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:12:44.982[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:12:44.984[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:12:48.875[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:12:58.881[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:13:08.887[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:13:18.893[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:13:28.898[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:13:38.904[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:13:48.907[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:13:58.910[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:14:08.911[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:14:18.917[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:14:25.158[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:14:25.159[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:14:25.222[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:14:25.292[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:14:25.292[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:14:25.293[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:14:28.922[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:14:38.929[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:14:48.930[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:14:58.936[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:15:08.934[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:15:18.927[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:15:28.928[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:15:38.930[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:15:48.934[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:15:58.939[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:16:08.945[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:16:18.945[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:16:28.951[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:16:38.956[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:16:48.962[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:16:58.966[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:17:08.971[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:17:18.974[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:17:28.980[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:17:38.981[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:17:48.986[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:17:58.992[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:18:02.479[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:18:02.480[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:18:02.498[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:18:02.668[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:18:02.668[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:18:02.669[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:18:08.997[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:18:19.004[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:18:29.010[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:18:39.013[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:18:49.018[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:18:59.024[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:19:00.466[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:19:00.467[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:19:00.476[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:19:00.547[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:19:00.547[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:19:00.740[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:19:09.028[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:19:19.031[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:19:29.036[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:19:39.038[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:19:49.039[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:19:59.045[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:20:09.049[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:20:19.054[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:20:29.060[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:20:39.062[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:20:49.066[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:20:59.072[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:21:09.077[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:21:19.083[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:21:29.086[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:21:39.091[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:21:49.093[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:21:59.099[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:22:09.104[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:22:19.110[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:22:21.394[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:22:21.394[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:22:21.407[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:22:21.474[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:22:21.475[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:22:21.476[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:22:29.117[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:22:30.458[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:22:30.460[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:22:30.504[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 13:22:31.519[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:22:31.519[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:22:31.519[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:22:31.519[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:22:31.520[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:22:31.520[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:22:31.520[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:22:31.520[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:22:31.521[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:22:31.521[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:22:31.533[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:22:31.533[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:22:31.574[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 13:22:31.574[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:22:31.582[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:22:31.781[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:22:31.782[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:22:31.783[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:22:39.124[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:22:49.128[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:22:59.130[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:23:09.134[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:23:19.138[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:23:29.144[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:23:31.515[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:23:31.516[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:23:31.527[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:23:31.599[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:23:31.599[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:23:31.600[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:23:39.148[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:23:49.154[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:23:59.158[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:23:59.323[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:23:59.324[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:23:59.356[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 13:24:00.528[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:24:00.528[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:24:00.540[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:24:00.573[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:24:00.574[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:24:00.608[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:24:00.608[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:24:00.609[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:24:00.609[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:24:00.611[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:24:00.611[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:24:00.613[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 13:24:00.613[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:24:00.614[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:24:00.706[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:24:00.794[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:24:00.795[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:24:00.795[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:24:09.164[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:24:19.169[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:24:29.172[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:24:39.174[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:24:49.180[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:24:59.186[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:25:00.450[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:25:00.451[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:25:00.485[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:25:00.591[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:25:00.592[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:25:00.593[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:25:09.192[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:25:19.198[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:25:29.199[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:25:39.203[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:25:49.209[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:25:59.210[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:26:00.459[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:26:00.459[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:26:00.468[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:26:00.568[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:26:00.568[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:26:00.569[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:26:09.212[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:26:19.213[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:26:28.523[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:26:28.524[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:26:28.582[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 13:26:29.219[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:26:29.593[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:26:29.594[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:26:29.604[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:26:29.604[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:26:29.605[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:26:29.605[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:26:29.605[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:26:29.605[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:26:29.605[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:26:29.605[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:26:29.605[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:26:29.605[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:26:29.628[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:26:29.628[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 13:26:29.628[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:26:29.722[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:26:29.723[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:26:29.724[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:26:39.224[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:26:49.229[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:26:59.236[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:27:09.237[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:27:19.243[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:27:29.249[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:27:29.592[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:27:29.592[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:27:29.601[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:27:29.684[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:27:29.684[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:27:29.685[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:27:39.251[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:27:49.252[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:27:59.256[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:28:09.262[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:28:13.073[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:28:13.074[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:28:13.092[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 13:28:14.098[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:28:14.098[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:28:14.098[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:28:14.098[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:28:14.098[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:28:14.098[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:28:14.100[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:28:14.100[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:28:14.098[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:28:14.100[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:28:14.141[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:28:14.141[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:28:14.155[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:28:14.155[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 13:28:14.166[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:28:14.230[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:28:14.231[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:28:14.236[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:28:19.268[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:28:29.274[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:28:39.280[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:28:49.282[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:28:59.287[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:29:09.293[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:29:14.078[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:29:14.079[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:29:14.103[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:29:14.184[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:29:14.184[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:29:14.185[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:29:19.299[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:29:29.305[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:29:39.311[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:29:49.317[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:29:59.318[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:30:09.321[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:30:14.047[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:30:14.048[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:30:14.059[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:30:14.142[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:30:14.143[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:30:14.163[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:30:19.325[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:30:29.331[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:30:39.336[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:30:49.342[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:30:59.347[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:31:09.354[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:31:14.047[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:31:14.048[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:31:14.197[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:31:14.275[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:31:14.276[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:31:14.286[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:31:19.357[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:31:29.359[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:31:39.365[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:31:49.369[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:31:59.374[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:32:09.377[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:32:14.058[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:32:14.059[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:32:14.105[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:32:14.212[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:32:14.212[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:32:14.213[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:32:19.382[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:32:29.385[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:32:39.391[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:32:49.394[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:32:59.399[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:33:09.403[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:33:14.056[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:33:14.056[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:33:14.080[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:33:14.152[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:33:14.152[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:33:14.153[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:33:19.407[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:33:29.409[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:33:39.414[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:33:49.419[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:33:59.421[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:34:09.426[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:34:14.062[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:34:14.063[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:34:14.383[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:34:14.494[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:34:14.494[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:34:14.495[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:34:19.433[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:34:29.438[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:34:39.444[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:34:49.448[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:34:59.453[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:35:09.458[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:35:14.067[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:35:14.067[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:35:14.109[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:35:14.190[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:35:14.191[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:35:14.192[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:35:19.461[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:35:29.464[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:35:39.469[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:35:49.474[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:35:57.920[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:35:57.923[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:35:57.998[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 13:35:58.990[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:35:58.990[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:35:58.990[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:35:58.990[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:35:58.990[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:35:58.991[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:35:58.991[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:35:58.991[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:35:58.991[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:35:58.990[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:35:58.997[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:35:58.998[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:35:59.057[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:35:59.058[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:35:59.058[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 13:35:59.129[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:35:59.129[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:35:59.130[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:35:59.480[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:36:09.485[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:36:19.487[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:36:29.489[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:36:39.492[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:36:43.078[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:36:43.078[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:36:43.150[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 13:36:44.188[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:36:44.188[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:36:44.188[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:36:44.189[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:36:44.189[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:36:44.189[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:36:44.190[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:36:44.190[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:36:44.190[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:36:44.190[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:36:44.191[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:36:44.191[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:36:44.200[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:36:44.202[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:36:44.202[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 13:36:44.296[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:36:44.297[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:36:44.298[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:36:49.496[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:36:59.501[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:37:09.507[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:37:19.513[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:37:29.518[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:37:39.521[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:37:44.232[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:37:44.232[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:37:44.261[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:37:44.347[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:37:44.347[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:37:44.348[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:37:49.525[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:37:59.530[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:38:09.536[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:38:19.536[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:38:29.541[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:38:39.546[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:38:49.551[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:38:59.557[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:39:09.563[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:39:19.566[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:39:29.572[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:39:39.576[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:39:49.582[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:39:59.584[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:40:09.589[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:40:19.595[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:40:29.601[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:40:39.605[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:40:49.606[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:40:59.612[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:41:01.619[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:41:01.619[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:41:01.681[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 13:41:02.616[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:41:02.616[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:41:02.616[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:41:02.616[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:41:02.616[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:41:02.616[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:41:02.617[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:41:02.617[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:41:02.617[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:41:02.616[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:41:02.616[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:41:02.618[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:41:02.632[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:41:02.632[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 13:41:02.632[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:41:02.799[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:41:02.799[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:41:02.802[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:41:09.617[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:41:19.621[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:41:29.626[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:41:39.631[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:41:49.633[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:41:59.639[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:42:02.576[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:02.576[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:02.586[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:42:02.687[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:02.687[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:02.689[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:42:02.908[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:02.908[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:02.908[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:02.908[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:02.908[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:02.908[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:02.908[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:02.908[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:02.909[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:02.909[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:02.920[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:42:02.922[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 13:42:02.922[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:02.922[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:02.931[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:42:02.938[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:02.939[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:02.942[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 13:42:03.050[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:03.050[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:03.051[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:42:09.640[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:42:19.644[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:42:26.200[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:26.201[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:26.230[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 13:42:27.259[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:27.259[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:27.259[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:27.259[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:27.259[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:27.259[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:27.259[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:27.260[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:27.260[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:27.260[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:27.266[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:42:27.270[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 13:42:27.294[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:27.295[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:27.297[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:42:27.385[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:42:27.385[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:42:27.538[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:42:29.650[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:42:39.653[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:42:49.659[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:42:59.664[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:43:09.665[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:43:19.672[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:43:29.678[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:43:39.684[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:43:49.690[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:43:59.696[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:44:09.700[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:44:19.035[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:44:19.036[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:44:19.041[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:44:19.041[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:44:19.047[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:44:19.048[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:44:19.050[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:44:19.051[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:44:19.060[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:44:19.060[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:44:19.063[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:44:19.063[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:44:19.127[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:44:19.159[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:44:19.160[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 13:44:19.358[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:44:19.358[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:44:19.361[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 13:44:19.363[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:44:19.364[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:44:19.365[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:44:19.701[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:44:29.706[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:44:33.089[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:44:33.090[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:44:33.115[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 13:44:34.054[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:44:34.054[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:44:34.054[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:44:34.054[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:44:34.054[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:44:34.054[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:44:34.054[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:44:34.055[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:44:34.054[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:44:34.055[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:44:34.061[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 13:44:34.061[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:44:34.087[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:44:34.087[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:44:34.125[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:44:34.201[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:44:34.201[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:44:34.202[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:44:39.711[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:44:49.716[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:44:59.717[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:45:09.720[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:45:19.725[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:45:29.728[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:45:34.029[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:45:34.029[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:45:34.036[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:45:34.125[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:45:34.125[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:45:34.216[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:45:39.733[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:45:49.737[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:45:59.742[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:46:09.748[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:46:19.753[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:46:29.759[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:46:34.058[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:46:34.058[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:46:34.104[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:46:34.180[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:46:34.180[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:46:34.188[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:46:39.761[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:46:49.767[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:46:59.772[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:47:09.779[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:47:19.784[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:47:29.785[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:47:34.041[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:47:34.042[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:47:34.066[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:47:34.151[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:47:34.151[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:47:34.157[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:47:39.787[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:47:49.793[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:47:59.795[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:48:09.802[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:48:19.808[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:48:29.814[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:48:34.050[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:48:34.050[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:48:34.173[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:48:34.299[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:48:34.299[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:48:34.300[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:48:39.819[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:48:49.825[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:48:59.830[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:49:00.935[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:49:00.935[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:49:01.115[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '3046'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 13:49:01.158[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 13:49:01.160[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '3046'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 13:49:03.478[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:49:03.478[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:49:03.541[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '2982'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 13:49:03.611[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 13:49:03.612[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '2982'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 13:49:09.831[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:49:19.780[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:49:29.784[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:49:33.982[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:49:33.982[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:49:33.991[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:49:34.067[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:49:34.067[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:49:34.076[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:49:39.789[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:49:41.745[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:49:41.746[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:49:41.784[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 13:49:41.829[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 13:49:41.832[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 13:49:49.795[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:49:54.220[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:49:54.220[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:49:54.229[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- before set Executor
[36m2024-06-13 13:49:54.230[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- before Loop sArr
[36m2024-06-13 13:49:54.233[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- before Future
[36m2024-06-13 13:49:54.339[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND ENB_ID = '27024'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 13:49:54.339[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND ENB_ID = '27024'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 13:49:54.339[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND ENB_ID = '27024'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 13:49:54.339[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND ENB_ID = '27024'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 13:49:54.339[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND ENB_ID = '27024'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 13:49:54.499[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- IMSI : OK
[36m2024-06-13 13:49:54.499[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- ENB : OK
[36m2024-06-13 13:49:54.500[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- MME : OK
[36m2024-06-13 13:49:54.501[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- SGW : OK
[36m2024-06-13 13:49:54.501[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- PGW : OK
[36m2024-06-13 13:49:59.797[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:50:01.555[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:50:01.555[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:50:01.679[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 13:50:01.731[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 13:50:01.733[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 13:50:09.772[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:50:09.772[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:50:09.782[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_LINK_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                        AND A.NODE_TYPE = 'MME'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 13:50:09.800[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:50:10.064[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 13:50:10.066[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

                    ,	A.NODE_TYPE NODE2_TYPE
                    ,	A.NODE_ID NODE2_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE2_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_LINK_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_LINK_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                        AND A.NODE_TYPE = 'MME'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 13:50:19.805[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:50:29.807[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:50:33.962[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:50:33.962[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:50:34.358[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:50:34.473[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:50:34.473[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:50:34.474[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:50:39.811[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:50:49.816[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:50:59.822[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:51:09.823[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:51:19.826[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:51:29.832[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:51:33.963[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:51:33.964[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:51:33.983[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:51:34.057[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:51:34.057[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:51:34.066[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:51:39.838[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:51:49.841[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:51:59.846[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:52:09.847[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:52:19.848[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:52:29.852[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:52:33.985[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:52:33.985[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:52:34.023[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 13:52:34.101[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 13:52:34.101[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 13:52:34.248[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 13:52:39.854[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:52:49.858[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:52:59.859[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:53:09.861[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:53:19.862[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:53:29.867[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:53:39.874[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:53:49.879[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:53:59.884[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:54:09.890[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:54:19.893[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:54:29.898[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:54:39.900[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:54:49.904[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:54:59.909[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:55:09.913[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:55:19.914[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:55:29.920[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:55:39.925[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:55:49.930[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:55:59.932[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:56:09.932[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:56:19.934[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:56:29.934[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:56:39.935[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:56:49.939[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:56:59.946[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:57:09.949[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:57:19.954[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:57:29.958[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:57:39.961[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:57:49.967[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:57:59.969[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:58:09.974[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:58:19.980[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:58:29.986[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:58:39.989[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:58:49.990[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:58:59.995[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:59:09.998[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:59:20.009[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:59:30.020[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:59:40.029[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 13:59:50.038[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:00:00.039[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:00:10.051[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:00:20.061[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:00:30.069[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:00:40.069[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:00:50.072[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:01:00.081[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:01:10.091[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:01:20.102[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:01:30.106[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:01:40.117[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:01:50.117[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:02:00.128[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:02:10.129[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:02:20.135[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:02:30.145[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:02:40.151[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:02:50.157[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:03:00.167[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:03:10.179[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:03:20.179[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:03:30.189[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:03:40.198[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:03:50.206[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:04:00.210[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:04:10.221[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:04:20.232[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:04:30.242[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:04:40.253[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:05:39.763[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:05:49.532[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m19s527ms).
[36m2024-06-13 14:05:49.783[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:05:59.797[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:06:09.811[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:06:19.825[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:06:46.137[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:06:56.136[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:07:05.853[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=46s300ms).
[36m2024-06-13 14:07:06.134[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:07:16.135[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:07:23.395[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:07:23.396[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:07:23.418[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 14:07:26.140[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:07:27.469[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:07:27.469[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:07:27.497[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 14:07:28.495[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:07:28.495[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:07:28.499[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:07:28.499[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:07:28.502[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:07:28.502[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:07:28.504[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:07:28.520[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:07:28.520[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:07:28.526[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:07:28.527[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:07:28.528[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:07:28.528[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:07:28.548[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:07:28.554[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 14:07:28.688[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:07:28.688[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:07:28.690[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:07:36.145[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:07:46.145[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:07:56.146[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:08:06.149[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:08:16.154[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:08:26.159[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:08:30.356[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:08:30.357[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:08:30.372[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 14:08:31.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:08:31.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:08:31.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:08:31.486[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:08:31.486[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:08:31.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:08:31.486[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:08:31.486[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:08:31.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:08:31.481[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:08:31.487[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:08:31.487[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:08:31.502[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 14:08:31.502[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:08:31.502[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:08:31.628[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:08:31.629[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:08:31.632[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:08:36.161[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:08:46.164[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:08:56.170[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:09:06.176[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:09:16.180[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:09:26.182[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:09:31.249[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:09:31.250[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:09:31.309[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:09:31.392[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:09:31.392[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:09:31.393[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:09:36.187[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:09:46.189[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:09:56.195[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:10:06.200[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:10:16.205[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:10:26.210[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:10:31.268[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:10:31.269[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:10:31.423[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:10:31.568[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:10:31.570[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:10:31.575[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:10:36.211[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:10:46.215[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:10:56.216[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:11:06.219[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:11:16.224[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:11:26.227[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:11:31.280[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:11:31.280[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:11:31.298[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:11:31.382[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:11:31.382[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:11:31.417[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:11:36.235[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:11:46.239[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:11:47.954[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:11:47.954[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:11:47.955[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:11:47.955[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:11:47.960[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:11:47.960[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:11:47.960[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:11:47.960[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:11:47.977[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:11:47.978[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:11:47.977[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 14:11:48.406[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:11:48.406[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:11:48.407[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:11:48.488[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:11:48.488[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:11:48.490[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:11:56.245[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:12:06.251[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:12:16.258[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:12:26.261[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:12:36.264[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:12:46.265[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:12:48.062[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:12:48.062[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:12:48.164[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:12:48.257[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:12:48.257[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:12:48.259[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:12:56.268[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:13:06.272[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:13:16.278[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:13:26.281[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:13:36.284[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:13:46.286[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:13:47.995[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:13:47.995[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:13:48.097[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:13:48.174[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:13:48.174[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:13:48.202[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:13:56.286[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:14:06.291[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:14:16.296[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:14:26.302[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:14:36.307[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:14:46.311[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:14:48.151[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:14:48.159[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:14:48.214[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:14:48.349[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:14:48.349[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:14:48.374[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:14:56.311[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:15:06.315[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:15:16.316[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:15:26.317[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:15:36.321[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:15:46.324[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:15:48.020[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:15:48.021[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:15:48.033[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:15:48.133[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:15:48.133[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:15:48.141[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:15:56.329[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:16:06.335[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:16:16.341[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:16:26.346[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:16:36.351[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:16:46.354[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:16:46.697[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:16:46.697[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:16:46.697[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:16:46.697[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:16:46.698[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:16:46.698[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:16:46.716[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:16:48.010[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:16:48.011[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:16:48.210[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:16:48.297[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:16:48.297[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:16:48.306[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:16:56.360[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:17:06.365[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:17:16.369[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:17:26.375[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:17:29.831[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:17:29.831[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:17:29.831[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:17:29.831[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:17:29.831[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:17:29.831[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:17:29.831[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:17:29.831[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:17:29.932[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:17:29.932[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:17:29.933[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 14:17:30.133[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:17:30.133[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:17:30.134[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:17:30.191[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:17:30.191[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:17:30.193[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:17:36.378[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:17:46.380[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:17:53.544[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:17:53.544[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:17:53.544[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:17:53.545[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:17:53.545[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:17:53.545[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:17:53.545[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:17:53.545[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:17:53.577[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:17:53.578[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:17:53.579[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 14:17:53.820[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:17:53.820[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:17:53.822[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:17:53.878[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:17:53.879[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:17:53.880[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:17:56.385[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:18:06.390[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:18:16.392[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:18:26.395[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:18:28.465[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:18:28.465[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:18:28.465[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:18:28.465[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:18:28.519[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 14:18:28.583[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:18:28.584[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:18:28.585[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:18:28.585[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:18:28.587[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:18:28.592[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:18:28.780[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:18:28.780[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:18:28.781[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:18:28.841[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:18:28.841[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:18:28.842[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:18:36.401[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:18:46.403[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:18:56.408[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:19:06.409[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:19:16.411[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:19:20.252[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:19:20.252[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:19:20.252[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:19:20.253[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:19:20.253[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:19:20.252[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:19:20.258[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:19:20.258[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:19:20.431[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:19:20.431[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:19:20.431[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 14:19:20.512[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:19:20.512[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:19:20.513[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:19:20.572[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:19:20.572[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:19:20.573[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:19:26.416[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:19:36.422[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:19:39.658[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:19:39.661[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:19:39.657[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:19:39.661[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:19:39.661[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:19:39.661[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:19:39.657[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:19:39.661[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:19:39.739[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:19:39.739[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 14:19:39.744[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:19:39.936[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:19:39.937[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:19:39.937[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:19:39.997[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:19:39.997[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:19:39.998[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:19:46.425[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:19:56.431[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:20:06.435[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:20:16.436[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:20:26.442[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:20:36.443[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:20:39.817[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:20:39.820[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:20:39.828[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:20:39.962[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:20:39.962[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:20:39.981[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:20:46.448[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:20:54.191[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:20:54.191[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:20:54.191[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:20:54.192[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:20:54.193[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:20:54.194[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:20:54.194[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:20:54.194[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:20:54.200[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:20:54.201[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:20:54.205[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 14:20:54.862[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:20:54.862[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:20:54.864[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:20:54.864[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:20:54.894[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:20:54.894[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:20:56.453[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:21:06.455[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:21:16.460[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:21:26.466[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:21:36.466[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:21:46.472[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:21:54.309[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:21:54.309[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:21:54.345[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:21:54.423[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:21:54.423[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:21:54.477[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:21:56.477[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:22:01.757[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:22:01.757[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:22:01.757[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:22:01.757[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:22:01.757[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:22:01.757[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:22:01.883[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:22:06.480[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:22:09.555[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:22:09.555[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:22:09.683[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:22:09.737[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:22:09.738[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:22:13.878[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:22:13.879[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:22:13.905[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:22:13.929[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:22:13.932[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:22:16.482[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:22:26.487[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:22:36.493[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:22:38.569[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:22:38.571[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:22:38.582[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 14:22:39.516[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:22:39.516[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:22:39.516[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:22:39.516[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:22:39.517[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:22:39.517[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:22:39.517[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:22:39.516[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:22:39.517[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:22:39.516[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:22:39.561[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:22:39.561[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:22:39.570[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:22:39.570[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 14:22:39.570[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:22:39.646[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:22:39.647[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:22:39.648[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:22:46.498[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:22:56.504[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:23:06.509[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:23:16.515[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:23:26.520[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:23:31.560[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:23:31.561[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:23:31.598[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 14:23:32.744[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:23:32.745[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:23:32.745[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:23:32.745[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:23:32.745[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:23:32.745[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:23:32.745[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:23:32.745[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:23:32.745[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:23:32.744[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:23:32.746[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:23:32.745[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:23:32.773[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 14:23:32.773[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:23:32.773[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:23:32.860[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:23:32.860[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:23:32.860[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:23:36.526[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:23:42.750[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:23:42.750[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:23:42.751[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:23:42.751[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:23:42.750[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:23:42.751[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:23:43.062[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:23:46.527[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:23:56.528[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:24:06.532[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:24:08.139[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:24:08.139[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:24:08.139[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:24:08.140[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:24:08.142[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:24:08.142[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:24:08.165[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:24:13.328[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:24:13.329[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:24:13.341[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:24:13.412[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:24:13.422[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:24:16.536[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:24:26.541[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:24:32.688[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:24:32.689[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:24:32.698[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:24:32.815[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:24:32.815[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:24:32.839[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:24:36.546[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:24:42.983[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:24:42.986[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:24:42.986[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:24:42.986[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:24:42.987[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:24:43.005[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:24:43.005[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:24:42.986[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:24:42.987[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:24:43.227[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:24:43.227[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:24:43.122[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:24:43.248[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:24:43.264[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:24:43.267[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:24:43.277[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:24:43.291[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:24:46.551[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:24:54.326[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:24:54.326[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:24:54.327[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:24:54.327[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:24:54.327[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:24:54.327[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:24:54.327[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:24:54.327[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:24:54.347[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:24:54.347[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:24:54.383[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:24:54.410[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:24:54.410[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:24:54.450[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:24:54.451[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:24:54.455[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:24:54.457[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:24:56.557[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:25:06.559[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:25:16.562[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:25:26.565[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:25:32.708[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:25:32.708[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:25:32.743[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:25:32.838[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:25:32.838[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:25:33.022[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:25:36.566[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:25:46.569[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:25:50.549[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:25:50.549[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:25:50.549[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:25:50.550[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:25:50.550[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:25:50.549[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:25:50.551[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:25:50.551[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:25:50.577[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:25:50.577[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:25:50.594[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:25:50.594[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:25:50.595[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:25:50.597[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:25:50.598[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:25:50.617[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:25:50.618[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:25:56.575[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:26:06.582[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:26:16.587[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:26:26.589[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:26:32.757[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:26:32.759[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:26:32.791[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:26:32.876[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:26:32.876[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:26:32.884[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:26:36.595[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:26:46.598[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:26:56.603[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:27:06.609[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:27:16.612[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:27:26.614[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:27:32.859[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:27:32.861[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:27:33.275[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:27:33.356[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:27:33.356[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:27:33.357[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:27:36.619[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:27:45.174[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:27:45.175[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:27:45.178[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:27:45.178[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:27:45.182[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:27:45.183[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:27:45.183[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:27:45.183[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:27:45.184[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:27:45.198[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:27:45.246[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:27:45.249[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:27:46.622[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:27:56.624[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:28:05.712[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:28:05.712[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:28:05.712[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:28:05.713[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:28:05.713[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:28:05.713[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:28:05.729[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:28:06.630[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:28:16.632[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:28:26.637[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:28:32.709[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:28:32.709[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:28:32.727[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:28:32.843[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:28:32.843[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:28:32.861[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:28:36.642[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:28:46.649[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:28:54.742[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:28:54.742[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:28:54.742[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:28:54.745[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:28:54.746[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:28:54.745[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:28:54.746[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:28:54.746[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:28:54.951[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0064'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:28:54.951[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:28:54.994[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:28:55.002[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0064'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:28:56.651[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:29:01.522[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:29:01.523[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:29:01.523[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:29:01.523[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:29:01.524[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:29:01.524[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:29:01.530[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:29:01.531[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:29:01.785[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:29:01.788[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0064'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:29:01.807[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:29:01.809[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0064'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:29:06.653[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:29:16.659[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:29:26.664[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:29:32.715[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:29:32.716[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:29:32.725[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:29:32.843[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:29:32.843[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:29:32.870[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:29:36.670[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:29:46.675[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:29:56.678[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:30:06.681[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:30:16.684[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:30:21.177[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:30:21.177[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:30:21.177[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:30:21.178[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:30:21.178[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:30:21.177[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:30:21.177[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:30:21.178[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:30:21.208[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:30:21.214[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0064'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:30:21.233[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:30:21.233[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0064'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:30:26.687[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:30:32.877[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:30:32.878[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:30:32.889[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:30:32.984[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:30:32.984[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:30:32.991[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:30:36.689[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:30:46.691[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:30:56.697[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:31:06.702[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:31:16.707[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:31:23.267[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:23.269[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:23.269[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:23.269[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:23.269[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:23.269[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:23.273[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:23.274[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:23.279[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:31:23.295[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:23.296[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0064'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:31:23.296[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:23.306[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0064'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:31:23.314[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:31:23.314[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0064'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:31:23.323[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:31:23.325[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0064'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:31:26.709[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:31:32.700[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:32.700[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:32.708[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:31:32.845[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:32.845[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:32.854[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:31:36.713[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:31:46.719[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:31:49.454[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:49.458[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:49.458[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:49.454[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:49.461[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:49.454[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:49.466[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:49.458[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:49.473[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:49.473[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:49.500[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:31:49.500[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0064'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:31:49.501[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0064'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:31:49.544[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:31:49.544[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:31:49.544[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0064'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:31:49.545[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0064'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:31:54.965[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:54.966[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:55.004[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-06-13 14:31:55.955[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:55.955[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:55.955[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:55.955[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:55.955[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:55.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:55.955[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:55.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:55.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:55.956[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:55.955[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:55.957[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:55.966[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:31:55.967[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:31:55.967[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-06-13 14:31:56.113[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:56.113[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:56.114[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:31:56.723[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:31:58.736[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:31:58.736[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:31:58.751[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_LINK_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                        AND A.NODE_TYPE = 'MME'

                                    AND A.NODE_ID = '0023'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:31:58.868[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:31:58.869[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

                    ,	A.NODE_TYPE NODE2_TYPE
                    ,	A.NODE_ID NODE2_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE2_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_LINK_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_LINK_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                        AND A.NODE_TYPE = 'MME'

                                    AND A.NODE_ID = '0023'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:32:05.021[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:32:05.021[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:32:05.037[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:32:05.058[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:32:05.060[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:32:06.724[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:32:07.419[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:32:07.419[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:32:07.426[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_LINK_ENB_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                        AND A.NODE_TYPE = 'MME'

                                    AND A.NODE_ID = '0023'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:32:07.444[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:32:07.445[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	'ENB' NODE1_TYPE
                    ,	A.ENB_ID NODE1_ID
                    ,	A.BTS_NAME NODE1_NAME
                    ,	CONCAT(A.BTS_NAME, ' (', A.ENB_ID, ')') NODE1_EXP_ID

                    ,	A.NODE_TYPE NODE2_TYPE
                    ,	A.NODE_ID NODE2_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE2_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_LINK_ENB_KPI_1M A LEFT OUTER JOIN
                    PM_LINK_ENB_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.ENB_ID = B.ENB_ID
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                                AND A.ENB_ID = '27024'

                        AND A.NODE_TYPE = 'MME'

                                    AND A.NODE_ID = '0023'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:32:12.886[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:32:12.886[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:32:13.076[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0064'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:32:13.094[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:32:13.096[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0064'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:32:16.726[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:32:16.730[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:32:16.731[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:32:16.741[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0059'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:32:16.760[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:32:16.764[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0059'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:32:21.378[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:32:21.378[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:32:21.407[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0081'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:32:21.425[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:32:21.426[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0081'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:32:26.728[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:32:32.180[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:32:32.180[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:32:32.187[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:32:32.205[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:32:32.206[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:32:35.648[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:32:35.649[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:32:35.758[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0022'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:32:35.804[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:32:35.805[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0022'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:32:36.729[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:32:39.510[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:32:39.511[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:32:39.547[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:32:39.566[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:32:39.571[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:32:43.030[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:32:43.030[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:32:43.038[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:32:43.058[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:32:43.059[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:32:46.581[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:32:46.581[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:32:46.616[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:32:46.637[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:32:46.639[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:32:46.732[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:32:48.451[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:32:48.451[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:32:48.736[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:32:48.826[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:32:48.829[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:32:50.391[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:32:50.391[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:32:50.403[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:32:50.419[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:32:50.420[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0021'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:32:54.391[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:32:54.392[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:32:54.443[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM

             PM_EPC_ROOT_CAUSE_1M 

      A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-06-13 14:32:54.465[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-06-13 14:32:54.467[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(ATTEMPT_CNT, 0) ATTEMPT_CNT
        ,	IFNULL(SUCCESS_CNT, 0) SUCCESS_CNT
        ,	CASE IFNULL(ATTEMPT_CNT, 0) WHEN 0 THEN '0' ELSE ROUND((SUCCESS_CNT / ATTEMPT_CNT) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN DATA_SUCCESS_CNT + IMS_SUCCESS_CNT != 0 AND DROP_CNT != 0 THEN ROUND(((DROP_CNT / (DATA_SUCCESS_CNT + IMS_SUCCESS_CNT)) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(DATA_ATTEMPT_CNT, 0) DATA_ATTEMPT_CNT
        , 	IFNULL(DATA_SUCCESS_CNT, 0) DATA_SUCCESS_CNT
        , 	CASE WHEN DATA_ATTEMPT_CNT != 0 AND DATA_SUCCESS_CNT != 0 THEN ROUND(((DATA_SUCCESS_CNT / DATA_ATTEMPT_CNT) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(IMS_ATTEMPT_CNT, 0) IMS_ATTEMPT_CNT
        ,	IFNULL(IMS_SUCCESS_CNT, 0) IMS_SUCCESS_CNT
        , 	CASE WHEN IMS_ATTEMPT_CNT != 0 AND IMS_SUCCESS_CNT != 0 THEN ROUND(((IMS_SUCCESS_CNT / IMS_ATTEMPT_CNT) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(DETACH_CNT, 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN IFNULL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                                AND A.NODE_ID = '0016'

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

                AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-06-13 14:32:55.879[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:32:55.880[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:32:55.888[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        FROM V_PM_TOPOLOGY_LAST_TIME

[36m2024-06-13 14:32:55.995[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:32:55.995[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:32:56.013[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE
                WHEN A.THRESHOLD_LEVEL <= B.CRITICAL THEN 'CR'
                ELSE
                    CASE
                        WHEN A.THRESHOLD_LEVEL <= B.MAJOR AND A.THRESHOLD_LEVEL > B.CRITICAL THEN 'MJ'
                        ELSE
                            CASE WHEN A.THRESHOLD_LEVEL <= B.MINOR THEN 'MN' END
                    END
            END GRADE
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
        ,	DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
        ,	A.GRAPH_TYPE
        ,	A.LOCATION
        ,   CASE WHEN NODE1_TYPE = 'ENB' THEN NODE1_ID ELSE IFNULL(C.NODE_NAME, '-') END NODE1_KEY
        ,	NODE1_TYPE
        ,	NODE1_ID
        ,	IFNULL(C.NODE_NAME, '-') NODE1_NAME
        ,	IFNULL(CASE WHEN NODE1_TYPE = 'ENB' THEN CONCAT( C.BRANCH_NAME, '-', C.TEAM_NAME, '-', C.PART_NAME) ELSE C.MTSO_NAME END, '-') NODE1_ORG
        ,   CASE WHEN NODE2_TYPE = 'ENB' THEN NODE2_ID ELSE IFNULL(D.NODE_NAME, '-') END NODE2_KEY
        ,	REPLACE(NODE2_TYPE, 'ALL', '-') NODE2_TYPE
        ,	REPLACE(NODE2_ID, 'ALL', '-') NODE2_ID
        ,	IFNULL(D.NODE_NAME, '-') NODE2_NAME
        ,	D.MTSO_NAME NODE2_ORG
        ,	A.CALL_TYPE
        ,	A.ALARM_TYPE_CODE
        ,	A.ALARM_SUBTYPE_CODE
        ,	A.ALARM_CLASS
        ,	A.ALARM_NAME
        ,	CASE WHEN E.OPERATOR = '<' THEN '낮음' WHEN E.OPERATOR = '>' THEN '높음' ELSE '' END OPERATOR_RESULT
        ,	A.CURRENT_VALUE
        ,	A.THRESHOLD_LEVEL
        ,   CONCAT(
                CASE
                    WHEN B.MINOR = 9 THEN E.LV10
                    WHEN B.MINOR = 8 THEN E.LV9
                    WHEN B.MINOR = 7 THEN E.LV8
                    WHEN B.MINOR = 6 THEN E.LV7
                    WHEN B.MINOR = 5 THEN E.LV6
                    WHEN B.MINOR = 4 THEN E.LV5
                    WHEN B.MINOR = 3 THEN E.LV4
                    WHEN B.MINOR = 2 THEN E.LV3
                    WHEN B.MINOR = 1 THEN E.LV2
                END
            ,   ' '
            ,   CASE WHEN E.OPERATOR = '<' THEN '이상' WHEN E.OPERATOR = '>' THEN '이하' ELSE '' END
            ) NORMAL_CASE
        ,	A.CURRENT_EXPRESSION
        ,	A.CONTINUE_CNT
        ,	IFNULL(B.ALARM_YN, 'N') ALARM_YN
        FROM
            FM_ALARM A
            LEFT OUTER JOIN FM_ALARM_THRESHOLD E
            ON A.ALARM_CLASS = E.ALARM_CLASS
            LEFT OUTER JOIN CU_STD_THRESHOLD B
            ON A.ALARM_CLASS = B.ALARM_CLASS
            LEFT OUTER JOIN
            (

        SELECT
            'ENB' NODE_TYPE
        ,	A.ENB_ID NODE_ID
        ,	A.BTS_NAME NODE_NAME
        ,	IFNULL(E.MTSO_ID, '-') MTSO_ID, IFNULL(A.MTSO_NAME, '-') MTSO_NAME
        ,	A.BRANCH_ID, B.BRANCH_NAME
        ,	A.OPTEAM_ID, C.TEAM_NAME
        ,	A.PART_ID, D.PART_NAME
        FROM
        CL_ENB A
        LEFT OUTER JOIN CM_BRANCH B ON A.BRANCH_ID = B.BRANCH_ID
        LEFT OUTER JOIN CM_TEAM C ON A.OPTEAM_ID = C.TEAM_ID
        LEFT OUTER JOIN CM_PART D ON A.PART_ID = D.PART_ID
        LEFT OUTER JOIN CB_MTSO E ON A.MTSO_NAME = E.MTSO_NAME
        WHERE 1 = 1

                UNION

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) C
            ON A.NODE1_TYPE = C.NODE_TYPE
            AND A.NODE1_ID = C.NODE_ID
            LEFT OUTER JOIN
            (

        SELECT
            'MME' NODE_TYPE
        ,	A.MME_ID NODE_ID
        ,	CASE WHEN IFNULL(A.MME_ID, '0') = '0' THEN '-' ELSE CONCAT('MME', '#', LPAD(A.MME_ID * 1, 2, '0')) END NODE_NAME
        ,	A.MTSO_ID, IFNULL(B.MTSO_NAME, '-') MTSO_NAME
        ,	null BRANCH_ID, null BRANCH_NAME
        ,	null OPTEAM_ID, null TEAM_NAME
        ,	null PART_ID, null PART_NAME
        FROM CL_MME A
        LEFT OUTER JOIN CB_MTSO B ON A.MTSO_ID = B.MTSO_ID

            ) D
            ON A.NODE2_TYPE = D.NODE_TYPE
            AND A.NODE2_ID = D.NODE_ID
        WHERE 1 = 1
        AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
        AND A.ALARM_TYPE_CODE IN ('00')
        AND A.THRESHOLD_LEVEL <= B.MINOR
        AND A.STAT_TYPE = '1M'
        AND B.USE_YN = 'Y'
        AND B.APPLY_YN = 'Y'
        AND A.CONTINUE_CNT >= B.CONTINUE_CNT
        ORDER BY THRESHOLD_LEVEL, CASE WHEN GRAPH_TYPE = 'NODE' THEN 0 ELSE 1 END , NODE1_TYPE

[36m2024-06-13 14:32:56.735[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:33:00.822[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:33:00.822[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:33:00.823[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before set Executor
[36m2024-06-13 14:33:00.823[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before Loop sArr
[36m2024-06-13 14:33:00.824[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before Future
[36m2024-06-13 14:33:00.877[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 14:33:00.877[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 14:33:00.878[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 14:33:00.878[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 14:33:00.878[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CAUSE_CNT DESC, CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-06-13 14:33:01.256[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- IMSI : OK
[36m2024-06-13 14:33:01.259[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- ENB : OK
[36m2024-06-13 14:33:01.259[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- MME : OK
[36m2024-06-13 14:33:01.259[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- SGW : OK
[36m2024-06-13 14:33:01.259[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- PGW : OK
[36m2024-06-13 14:33:04.073[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-06-13 14:33:04.074[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-06-13 14:33:04.295[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT

        DATE_FORMAT(A.EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
    ,	DATE_FORMAT(A.EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
    ,	CASE WHEN SUMMARYCREATETIME = 0 THEN '-' ELSE FROM_UNIXTIME(SUMMARYCREATETIME) END SUMMARYCREATETIME
    ,	CASE
            WHEN ONGOINGFLAG='0' THEN 'Start'
            WHEN ONGOINGFLAG='1' THEN 'Interim'
            WHEN ONGOINGFLAG='2' THEN 'End'
            ELSE '-'
        END ONGOINGFLAG
    ,	'1' MASKING_FLAG
    ,	IMSI
    ,	IMSI IMSI_ORIGINAL
    ,	MDN
    ,	IMEI
    ,	SERVICECODE
    ,	PAYCODE
    ,	CASE
            WHEN GENDER='1' THEN 'Male'
            WHEN GENDER='2' THEN 'Female'
            ELSE GENDER
        END GENDER
    ,	IFNULL(AGE,'-') AGE
    ,	IFNULL(A.VENDOR, '-') VENDOR
    ,	IFNULL(A.MODEL, '-') MODEL
    ,	IFNULL(P.NAME, A.PGW_ID) PGW_ID
    ,	IFNULL(P.NAME, A.IMS_PGW_ID) IMS_PGW_ID
    ,	IFNULL(S.NAME, A.SGW_ID) SGW_ID
    ,	A.MME_ID MME_ID_ORIGINAL
    ,	IFNULL(M.MME_NAME,(CASE WHEN A.MME_ID ='0' THEN '-' ELSE A.MME_ID END)) MME_ID
    ,   CASE
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='1' THEN 'AuC'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_AUTHENTICATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END S6A_AUTHENTICATION_EQUIP_TYPE
    ,	IFNULL(S6A_AUTHENTICATION_EQUIP_ID, '-') EQ_S6A_AUTHENTICATION_EQUIP_ID
    ,	CASE
            WHEN S6A_LOCATION_EQUIP_TYPE='2' THEN 'HLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='3' THEN 'GLR'
            WHEN S6A_LOCATION_EQUIP_TYPE='4' THEN 'IWF'
            ELSE '-'
        END EQ_S6A_LOCATION_EQUIP_TYPE
    ,	IFNULL(S6A_LOCATION_EQUIP_ID, '-') EQ_S6A_LOCATION_EQUIP_ID
    ,	CASE
            WHEN S13_EQUIP_TYPE='4' THEN 'IWF'
            WHEN S13_EQUIP_TYPE='5' THEN 'EIR'
            ELSE '-'
        END EQ_S13_EQUIP_TYPE
    ,	IFNULL(S13_EQUIP_ID, '-') EQ_S13_EQUIP_ID
    ,	IFNULL((SELECT BTS_NAME || '(' || IFNULL(ENB_ID, '-') || ')' FROM CL_ENB WHERE ENB_ID = FIRST_ENB_ID), '-') FIRST_ENB_ID
    ,	IFNULL(FIRST_CELL_ID, '-') FIRST_CELL_ID
    ,	IFNULL(FIRST_ENB_VLAN_ID, '-') FIRST_ENB_VLAN_ID
    ,	CASE
            WHEN PDN_TYPE='1' THEN 'ipv4'
            WHEN PDN_TYPE='2' THEN 'ipv6'
            WHEN PDN_TYPE='3' THEN 'ipv4v6'
            ELSE '-'
        END PDN_TYPE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = LAST_ENB_ID), '-') LAST_ENB_ID
    ,	IFNULL(LAST_ENB_VLAN_ID ,'-') LAST_ENB_VLAN_ID
    ,	CASE IFNULL(PDN_IPV4, '-') WHEN '-' THEN  '-' ELSE INET_NTOA(PDN_IPV4) END PDN_IPV4
    ,	PDN_IPV6
    ,   CASE IFNULL(PDN_IPV6, '-')
            WHEN '-' THEN '-'
            ELSE
                CASE LENGTH(PDN_IPV6)
                    WHEN 32 THEN
                        CONCAT(
                            SUBSTR(PDN_IPV6, 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 1 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 2 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 3 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 4 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 5 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 6 + 1, 4), '0', ':',
                            SUBSTR(PDN_IPV6, 4 * 7 + 1, 4), '0'
                        )
                    ELSE PDN_IPV6
                END
        END PDN_IPV6
    ,	CASE
            WHEN OLD_CALL_TYPE='1' THEN 'Attach MO'
            WHEN OLD_CALL_TYPE='2' THEN 'Attach MT'
            WHEN OLD_CALL_TYPE='3' THEN 'Service MO'
            WHEN OLD_CALL_TYPE='4' THEN 'Service MT'
            WHEN OLD_CALL_TYPE='5' THEN 'TAU'
            WHEN OLD_CALL_TYPE='6' THEN 'Paging'
            WHEN OLD_CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN OLD_CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN OLD_CALL_TYPE='9' THEN 'Detach MO'
            WHEN OLD_CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END OLD_CALL_TYPE
    ,	CASE WHEN OLD_CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(OLD_CALL_END_TIME) END OLD_CALL_END_TIME
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = OLD_CALL_LAST_ENB_ID), '-') OLD_CALL_LAST_ENB_ID
    ,	IFNULL(OLD_CALL_LAST_CELL_ID, '-') OLD_CALL_LAST_CELL_ID
    ,	IFNULL(OLD_CALL_LAST_TAC, '-') OLD_CALL_LAST_TAC
    ,	CASE
            WHEN CALL_TYPE='1' THEN 'Attach MO'
            WHEN CALL_TYPE='2' THEN 'Attach MT'
            WHEN CALL_TYPE='3' THEN 'Service MO'
            WHEN CALL_TYPE='4' THEN 'Service MT'
            WHEN CALL_TYPE='5' THEN 'TAU'
            WHEN CALL_TYPE='6' THEN 'Paging'
            WHEN CALL_TYPE='7' THEN 'ExtendedService MO'
            WHEN CALL_TYPE='8' THEN 'ExtendedService MT'
            WHEN CALL_TYPE='9' THEN 'Detach MO'
            WHEN CALL_TYPE='10' THEN 'S1 Handover Inter MME'
            ELSE '-'
        END CALL_TYPE
    ,	CASE WHEN CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_START_TIME) END CALL_START_TIME
    ,	CASE WHEN CALL_END_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(CALL_END_TIME) END CALL_END_TIME
    ,	CASE WHEN CALL_DURATION_TIME ='0' THEN '-' ELSE CAST(ROUND(CALL_DURATION_TIME/1000000.0,2) AS CHAR) END CALL_DURATION_TIME
    ,	IFNULL(APN,'-') APN
    ,	IFNULL(IMS_APN ,'-') IMS_APN
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S6A_ERROR_MESSAGE),'-') DIAM_S6A_ERROR_MESSAGE
    ,	CASE WHEN S6A_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S6A_ERROR_TIME) END DIAM_S6A_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S6A_ERROR_CAUSE,6,'0'))),'-') DIAM_S6A_ERROR_CAUSE
    ,	CASE WHEN AUTHINFORMATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(AUTHINFORMATION_TIME) END AUTHENTICATIONINFORMATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(AUTHINFORMATION_CAUSE,6,'0'))),'-') AUTHINFOMATION_CAUSE
    ,	CASE WHEN UPDATELOCATION_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UPDATELOCATION_TIME) END UPDATELOCATION_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(UPDATELOCATION_CAUSE,6,'0'))),'-') UPDATELOCATION_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='01' AND MESSAGE_CODE_DEC =S13_ERROR_MESSAGE),'-') DIAM_S13_ERROR_MESSAGE
    ,	CASE WHEN S13_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S13_ERROR_TIME) END DIAM_S13_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(S13_ERROR_CAUSE,6,'0'))),'-') DIAM_S13_ERROR_CAUSE
    ,	CASE WHEN MEIDENTITYCHECK_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(MEIDENTITYCHECK_TIME) END MEIDENTITYCHECK_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_01', LPAD(MEIDENTITYCHECK_CAUSE,6,'0'))),'-')  MEIDENTITYCHECK_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='02' AND MESSAGE_CODE_DEC =S1AP_ERROR_MESSAGE),'-') SMME_S1AP_ERROR_MESSAGE
    ,	CASE WHEN S1AP_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(S1AP_ERROR_TIME) END SMME_S1AP_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(S1AP_ERROR_CAUSE,6,'0'))),'-') SMME_S1AP_ERROR_CAUSE
    ,   CASE
            WHEN CNDOMAIN='0' THEN 'PS'
            WHEN CNDOMAIN='1' THEN 'CS'
            ELSE '-'
        END CNDOMAIN
    ,	CASE
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='0' THEN 'Emergency'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='1' THEN 'HighPriorityAccess'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='2' THEN 'MT_ACCESS'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='3' THEN 'MO_Signalling'
            WHEN INITMSG_RRC_ESTABLISH_CAUSE='4' THEN 'MO_DATA'
            ELSE '-'
        END INITMSG_RRC_ESTABLISH_CAUSE
    ,	IFNULL(PATHSWITCH_COUNT, 0) PATHSWITCH_COUNT
    ,	IFNULL(PATHSWITCHFAILURE_COUNT, 0) PATHSWITCHFAILURE_COUNT
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(DETACHREQUEST_CAUSE,6,'0'))),'-') DETACHREQUEST_CAUSE
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN
                (
                    CASE
                        WHEN DETACHREQUEST_TYPE='1' THEN 'EPC detach'
                        WHEN DETACHREQUEST_TYPE='2' THEN 'IMSI detach'
                        WHEN DETACHREQUEST_TYPE='3' THEN 'combined EPS/IMSI detach'
                        ELSE '-'
                    END
                )
            WHEN DETACHREQUEST_DIRECTION='1' THEN
                (
                CASE
                WHEN DETACHREQUEST_TYPE='1' THEN 're-attach required'
                WHEN DETACHREQUEST_TYPE='2' THEN 're-attach not required'
                WHEN DETACHREQUEST_TYPE='3' THEN 'IMSI detach'
                ELSE '-'
                END
                )
            ELSE '-'
        END DETACHREQUEST_TYPE
    ,	CASE
            WHEN DETACHREQUEST_SWITCHOFF='0' THEN 'normal detach'
            WHEN DETACHREQUEST_SWITCHOFF='1' THEN 'switch off'
            ELSE '-'
        END DETACHREQUEST_SWITCHOFF
    ,	CASE
            WHEN DETACHREQUEST_DIRECTION='0' THEN 'uplink'
            WHEN DETACHREQUEST_DIRECTION='1' THEN 'downlink'
            ELSE '-'
        END DETACHREQUEST_DIRECTION
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='06' AND MESSAGE_CODE_DEC =ESM_ERROR_MESSAGE),'-')  ESM_ERROR_MESSAGE
    ,	CASE WHEN UECONTEXTRELEASEREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASEREQUEST_TIME) END UECONTEXTRELEASEREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASEREQUEST_CAUSE,6,'0'))),'-') UECONTEXTRELEASEREQUEST_CAUSE
    ,	CASE WHEN UECONTEXTRELEASE_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(UECONTEXTRELEASE_TIME) END UECONTEXTRELEASE_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_02', LPAD(UECONTEXTRELEASE_CAUSE,6,'0'))),'-') UECONTEXTRELEASE_CAUSE
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE='05' AND MESSAGE_CODE_DEC =EMM_ERROR_MESSAGE),'-') EMM_ERROR_MESSAGE
    ,	CASE WHEN EMM_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(EMM_ERROR_TIME) END EMM_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_05', LPAD(EMM_ERROR_CAUSE,6,'0'))),'-') EMM_ERROR_CAUSE
    ,	CASE WHEN DETACHREQUEST_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(DETACHREQUEST_TIME) END DETACHREQUEST_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_07', LPAD(S3_ERROR_CAUSE,6,'0'))),'-') GTP_S3_ERROR_CAUSE
    ,	SMS_MO_CP_ERROR_CAUSE
    ,	SMS_MO_RP_ERROR_CAUSE
    ,	SMS_MO_TP_ERROR_CAUSE
    ,	SMS_MT_CP_ERROR_CAUSE
    ,	SMS_MT_RP_ERROR_CAUSE
    ,	SMS_MT_TP_ERROR_CAUSE
    ,	ATTEMPT_FLAG
    ,	SUCCESS_FLAG
    ,	DATA_ATTEMPT_FLAG
    ,	DATA_SUCCESS_FLAG
    ,	IMS_ATTEMPT_FLAG
    ,	IMS_SUCCESS_FLAG
    ,	DROP_FLAG
    ,	PAGING_ATTEMPT_FLAG
    ,	PAGING_SUCCESS_FLAG
    ,	DETACH_FLAG
    ,	NPR_FLAG
    ,	AUTH_ATTEMPT_FLAG
    ,	AUTH_SUCCESS_FLAG
    ,	LOCATION_ATTEMPT_FLAG
    ,	LOCATION_SUCCESS_FLAG
    ,	MECHECK_ATTEMPT_FLAG
    ,	MECHECK_SUCCESS_FLAG
    ,	CASE
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN FIRST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END FIRST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(FIRST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =FIRST_ERROR_MESSAGE),'-') FIRST_ERROR_MESSAGE
    ,	CASE WHEN FIRST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(FIRST_ERROR_TIME) END FIRST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', FIRST_ERROR_INTERFACE_PROTOCOL, LPAD(FIRST_ERROR_CAUSE,6,'0'))),'-') FIRST_ERROR_CAUSE
    ,	CASE
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='1' THEN 'S6a_Diameter'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='2' THEN 'S1MME_S1AP'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='3' THEN 'S11_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='4' THEN 'S10_GTPv2C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='5' THEN 'S1MME_NAS-EMM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='6' THEN 'S1MME_NAS-ESM'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='7' THEN 'S3_GTPv1C'
            WHEN LAST_ERROR_INTERFACE_PROTOCOL='8' THEN 'S13_Diameter'
            ELSE '-'
        END LAST_ERROR_INTERFACE_PROTOCOL
    ,	IFNULL((SELECT MESSAGE_NAME FROM CD_MESSAGE WHERE PROTOCOL_CODE=LPAD(LAST_ERROR_INTERFACE_PROTOCOL,2,'0') AND MESSAGE_CODE_DEC =LAST_ERROR_MESSAGE),'-') LAST_ERROR_MESSAGE
    ,	CASE WHEN LAST_ERROR_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(LAST_ERROR_TIME) END LAST_ERROR_TIME
    ,	IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', LAST_ERROR_INTERFACE_PROTOCOL, LPAD(LAST_ERROR_CAUSE,6,'0'))),'-')  LAST_ERROR_CAUSE
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='1' THEN 'S6a_Diameter'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='2' THEN 'S1MME_S1AP'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='3' THEN 'S11_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='4' THEN 'S10_GTPv2C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='5' THEN 'S1MME_NAS-EMM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='6' THEN 'S1MME_NAS-ESM'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='7' THEN 'S3_GTPv1C'
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='8' THEN 'S13_Diameter'
            ELSE '-'
        END OLD_CALL_ERROR_INTF_PROTOCOL
    ,	CASE
            WHEN IFNULL(OLD_CALL_ERROR_INF_PROTOCOL, '-')='-' THEN '-'
            WHEN IFNULL(OLD_CALL_ERROR_CAUSE, '-')='-' THEN '-'
            ELSE
            IFNULL((SELECT DESCRIPTION FROM CD_CAUSE WHERE CAUSE_CODE =CONCAT('C_0', OLD_CALL_ERROR_INF_PROTOCOL, LPAD(OLD_CALL_ERROR_CAUSE,6,'0'))),'-')
        END OLD_CALL_ERROR_CAUSE
    ,	IFNULL((SELECT CONCAT(BTS_NAME, '(', IFNULL(ENB_ID, '-'), ')') FROM CL_ENB WHERE ENB_ID = INTERVAL_FIRST_ENB_ID), '-') INTERVAL_FIRST_ENB_ID
    ,	CASE
            WHEN INTERVAL_FIRST_ENB_IP ='0' THEN '-'
            ELSE INET_NTOA(INTERVAL_FIRST_ENB_IP)
        END INTERVAL_FIRST_ENB_IP
    ,	CASE WHEN INTERVAL_FIRST_CELL_ID ='0' THEN '-' ELSE INTERVAL_FIRST_CELL_ID END INTERVAL_FIRST_CELL_ID
    ,	CASE WHEN INTERVAL_FIRST_TAC ='0' THEN '-' ELSE INTERVAL_FIRST_TAC END INTERVAL_FIRST_TAC
    ,	CASE WHEN INTERVAL_FIRST_ENB_C_UID ='0' THEN '-' ELSE INTERVAL_FIRST_ENB_C_UID END INTERVAL_FIRST_ENB_C_UID
    ,	IFNULL(INTERVAL_FIRST_ENB_VLAN_ID,'-') INTERVAL_FIRST_ENB_VLAN_ID
    ,	CASE WHEN INTERVAL_CALL_START_TIME = 0 THEN '-' ELSE FROM_UNIXTIME(INTERVAL_CALL_START_TIME) END INTERVAL_CALL_START_TIME

        FROM
            XDR_LTE_CALL_KPI A
            LEFT OUTER JOIN CL_MME M ON LPAD(A.MME_ID, 4, '0') = M.MME_ID
            LEFT OUTER JOIN CL_SGW S ON LPAD(A.SGW_ID, 4, '0') = S.SGW_ID
            LEFT OUTER JOIN CL_PGW P ON LPAD(A.PGW_ID, 4, '0') = P.PGW_ID
        WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

            AND ONGOINGFLAG = '2'

        AND
        (
            (
                    A.IMSI IS NOT NULL
                AND	A.IMSI = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
            OR
            (
                    A.MDN IS NOT NULL
                AND	A.MDN = 'T0ZBZsMNsUqvbLWr2/6pkpyw=='
            )
        )

        AND A.CALL_TYPE < 9

            AND A.CALL_TYPE IN  (  '1' , '3' , '4' , '5' , '6' , '7' , '8' ) 

            AND (
                SUCCESS_FLAG = 0 OR DROP_FLAG = 1 OR
                (DATA_ATTEMPT_FLAG = 1 AND DATA_SUCCESS_FLAG = 0) OR
                (IMS_ATTEMPT_FLAG = 1 AND IMS_SUCCESS_FLAG = 0)
            )

        ORDER BY A.SUMMARYCREATETIME ASC

[36m2024-06-13 14:33:06.738[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:33:16.740[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-06-13 14:33:25.166[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-06-13 14:33:25.167[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-06-13 14:33:25.208[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
