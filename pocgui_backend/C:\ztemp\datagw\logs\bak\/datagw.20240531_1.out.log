[36m2024-05-31 09:32:28.481[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 1407 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 09:32:28.490[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 09:32:28.490[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 09:32:28.894[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 09:32:28.946[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 45 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 09:32:29.160[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 09:32:29.661[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 09:32:29.671[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 09:32:29.672[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 09:32:29.672[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 09:32:29.775[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 09:32:29.775[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1243 ms
[36m2024-05-31 09:32:29.910[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 09:32:29.955[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 09:32:30.138[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 09:32:30.295[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 09:32:30.614[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 09:32:30.640[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 09:32:30.997[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 09:32:31.003[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 09:32:31.813[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@77430c79, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@506654fa, org.springframework.security.web.context.SecurityContextPersistenceFilter@299c86f0, org.springframework.security.web.header.HeaderWriterFilter@268f126f, org.springframework.security.web.authentication.logout.LogoutFilter@1e6f7c25, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1b1d93e9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@129b0ed, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4468ced2, org.springframework.security.web.session.SessionManagementFilter@9cdf13e, org.springframework.security.web.access.ExceptionTranslationFilter@585718dd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2d6e09f0]
[36m2024-05-31 09:32:31.870[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 09:32:32.228[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 09:32:32.254[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 09:32:32.262[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 4.239 seconds (JVM running for 4.952)
[36m2024-05-31 09:35:15.923[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-2][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-05-31 09:35:15.924[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-2][m- Initializing Servlet 'dispatcherServlet'
[36m2024-05-31 09:35:15.926[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-2][m- Completed initialization in 2 ms
[36m2024-05-31 09:35:16.226[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-31 09:35:16.276[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 09:35:16.286[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-05-31 09:35:16.296[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-05-31 09:35:16.303[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-31 09:35:16.525[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:35:16.525[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:35:16.556[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 09:35:16.709[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:35:16.710[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:35:16.743[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:35:16.743[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:35:16.747[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 09:35:17.114[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:35:17.114[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:35:17.114[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:35:17.114[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:35:17.122[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 09:35:17.132[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 09:35:25.393[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:35:25.393[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:35:25.407[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 09:35:32.798[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:35:32.800[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:35:32.848[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM
                PM_EPC_ROOT_CAUSE_1M A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240531093400', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0042' , '0043' , '0044' , '0045' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.MCC = 'ALL'
            AND A.MNC = 'ALL'
            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-05-31 09:35:32.895[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- tmpCallTypeList [0], ATTACH
[36m2024-05-31 09:35:32.897[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(SUM(ATTEMPT_CNT), 0) ATTEMPT_CNT
        ,	IFNULL(SUM(SUCCESS_CNT), 0) SUCCESS_CNT
        ,	CASE IFNULL(SUM(ATTEMPT_CNT), 0) WHEN 0 THEN '0' ELSE ROUND((SUM(SUCCESS_CNT) / SUM(ATTEMPT_CNT)) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT) != 0 AND SUM(DROP_CNT) != 0 THEN ROUND(((SUM(DROP_CNT) / (SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT))) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(SUM(DATA_ATTEMPT_CNT), 0) DATA_ATTEMPT_CNT
        , 	IFNULL(SUM(DATA_SUCCESS_CNT), 0) DATA_SUCCESS_CNT
        , 	CASE WHEN SUM(DATA_ATTEMPT_CNT) != 0 AND SUM(DATA_SUCCESS_CNT) != 0 THEN ROUND(((SUM(DATA_SUCCESS_CNT) / SUM(DATA_ATTEMPT_CNT)) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(SUM(IMS_ATTEMPT_CNT), 0) IMS_ATTEMPT_CNT
        ,	IFNULL(SUM(IMS_SUCCESS_CNT), 0) IMS_SUCCESS_CNT
        , 	CASE WHEN SUM(IMS_ATTEMPT_CNT) != 0 AND SUM(IMS_SUCCESS_CNT) != 0 THEN ROUND(((SUM(IMS_SUCCESS_CNT) / SUM(IMS_ATTEMPT_CNT)) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(SUM(DETACH_CNT), 0) DETACH_CNT

            ,    
        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN NVL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240531093400', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0042' , '0043' , '0044' , '0045' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 
        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-05-31 09:35:32.904[m [33m[WARN ][m [org.mariadb.jdbc.util.log.Slf4JLogger] [33m[http-nio-9091-exec-9][m- Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'FROM
        (
            SELECT
                A.EVENT_TIME
              ...' at line 25
[36m2024-05-31 09:35:32.905[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- 1. PreparedStatement.execute() SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(SUM(ATTEMPT_CNT), 0) ATTEMPT_CNT
        ,	IFNULL(SUM(SUCCESS_CNT), 0) SUCCESS_CNT
        ,	CASE IFNULL(SUM(ATTEMPT_CNT), 0) WHEN 0 THEN '0' ELSE ROUND((SUM(SUCCESS_CNT) / SUM(ATTEMPT_CNT)) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT) != 0 AND SUM(DROP_CNT) != 0 THEN ROUND(((SUM(DROP_CNT) / (SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT))) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(SUM(DATA_ATTEMPT_CNT), 0) DATA_ATTEMPT_CNT
        , 	IFNULL(SUM(DATA_SUCCESS_CNT), 0) DATA_SUCCESS_CNT
        , 	CASE WHEN SUM(DATA_ATTEMPT_CNT) != 0 AND SUM(DATA_SUCCESS_CNT) != 0 THEN ROUND(((SUM(DATA_SUCCESS_CNT) / SUM(DATA_ATTEMPT_CNT)) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(SUM(IMS_ATTEMPT_CNT), 0) IMS_ATTEMPT_CNT
        ,	IFNULL(SUM(IMS_SUCCESS_CNT), 0) IMS_SUCCESS_CNT
        , 	CASE WHEN SUM(IMS_ATTEMPT_CNT) != 0 AND SUM(IMS_SUCCESS_CNT) != 0 THEN ROUND(((SUM(IMS_SUCCESS_CNT) / SUM(IMS_ATTEMPT_CNT)) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(SUM(DETACH_CNT), 0) DETACH_CNT

            ,    
        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN NVL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240531093400', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0042' , '0043' , '0044' , '0045' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 
        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

java.sql.SQLSyntaxErrorException: (conn=1563) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'FROM
        (
            SELECT
                A.EVENT_TIME
              ...' at line 25
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:370) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:134) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:855) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:794) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:713) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:637) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:95) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:268) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwAnalysisRepositoryImpl.getKpiAnalysis(NwAnalysisRepositoryImpl.java:27) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwAnalysisRepositoryImpl$$FastClassBySpringCGLIB$$c286ed19.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwAnalysisRepositoryImpl$$EnhancerBySpringCGLIB$$2ee9aeba.getKpiAnalysis(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl.getKpiAnalysis(NwAnalysisServiceImpl.java:46) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl$$FastClassBySpringCGLIB$$fd7da982.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl$$EnhancerBySpringCGLIB$$aa0b35bf.getKpiAnalysis(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwAnalysisController.getKpiAnalysis(NwAnalysisController.java:32) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwAnalysisController$$FastClassBySpringCGLIB$$82a4185e.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.controller.NwAnalysisController$$EnhancerBySpringCGLIB$$f921ef7b.getKpiAnalysis(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-31 09:35:32.942[m [31m[ERROR][m [com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler] [33m[http-nio-9091-exec-9][m- rsResultExcption : {}
com.mobigen.cdev.poc.core.exception.RsResultException: null
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.controller.NwAnalysisController$$EnhancerBySpringCGLIB$$f921ef7b.getKpiAnalysis(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=1563) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'FROM
        (
            SELECT
                A.EVENT_TIME
              ...' at line 25
### The error may exist in file [/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes/mybatis/mysql/module/nw/anlaysis_sqlMap.xml]
### The error may involve com.mobigen.cdev.mapper.mysql.module.nw.analysis.getKpiAnalysis-Inline
### The error occurred while setting parameters
### SQL: SELECT                 DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME             , DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME             ,  NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID             , NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID             ,   CALL_TYPE                           , IFNULL(SUM(ATTEMPT_CNT), 0) ATTEMPT_CNT         , IFNULL(SUM(SUCCESS_CNT), 0) SUCCESS_CNT         , CASE IFNULL(SUM(ATTEMPT_CNT), 0) WHEN 0 THEN '0' ELSE ROUND((SUM(SUCCESS_CNT) / SUM(ATTEMPT_CNT)) * 100, 2) END SUCCESS_RATE         , IFNULL(DROP_CNT, 0) DROP_CNT         , CASE WHEN SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT) != 0 AND SUM(DROP_CNT) != 0 THEN ROUND(((SUM(DROP_CNT) / (SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT))) * 100), 2) ELSE 0 END DROP_RATE         ,  IFNULL(SUM(DATA_ATTEMPT_CNT), 0) DATA_ATTEMPT_CNT         ,  IFNULL(SUM(DATA_SUCCESS_CNT), 0) DATA_SUCCESS_CNT         ,  CASE WHEN SUM(DATA_ATTEMPT_CNT) != 0 AND SUM(DATA_SUCCESS_CNT) != 0 THEN ROUND(((SUM(DATA_SUCCESS_CNT) / SUM(DATA_ATTEMPT_CNT)) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE         , IFNULL(SUM(IMS_ATTEMPT_CNT), 0) IMS_ATTEMPT_CNT         , IFNULL(SUM(IMS_SUCCESS_CNT), 0) IMS_SUCCESS_CNT         ,  CASE WHEN SUM(IMS_ATTEMPT_CNT) != 0 AND SUM(IMS_SUCCESS_CNT) != 0 THEN ROUND(((SUM(IMS_SUCCESS_CNT) / SUM(IMS_ATTEMPT_CNT)) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE                   , IFNULL(SUM(DETACH_CNT), 0) DETACH_CNT                             ,             FROM         (             SELECT                 A.EVENT_TIME                                                                                    , A.NODE_TYPE NODE1_TYPE                     , A.NODE_ID NODE1_ID                     , CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME                     , CASE WHEN NVL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID                               , '-' NODE2_TYPE             , '-' NODE2_ID             , '-' NODE2_NAME             , '-' NODE2_EXP_ID                                        , A.CALL_TYPE             , A.ATTEMPT_CNT             ,   A.SUCCESS_CNT             ,   A.DROP_CNT             , A.DATA_ATTEMPT_CNT             ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT             , A.IMS_ATTEMPT_CNT             ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT             , A.DETACH_CNT             , B.CAUSE_TYPE             , CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE             , B.CAUSE_CNT             FROM                                                               PM_EPC_KPI_1M A LEFT OUTER JOIN                     PM_EPC_ROOT_CAUSE_1M B                     ON A.EVENT_TIME = B.EVENT_TIME                     AND A.NODE_TYPE = B.NODE_TYPE                     AND A.NODE_ID  = B.NODE_ID                     AND A.CALL_TYPE = B.CALL_TYPE                     AND A.MCC = B.MCC                     AND A.MNC = B.MNC                                                         WHERE 1 = 1                                         AND A.EVENT_TIME = DATE_FORMAT(?, '%Y%m%d%H%i%s')                                                                                                    AND A.NODE_TYPE = ?                                               AND A.NODE_ID IN  (  ? , ? , ? , ? )                                            AND A.MCC = 'ALL'                     AND A.MNC = 'ALL'                                                         AND A.CALL_TYPE IN  (  ? , ? , ? , ? , ? , ? , ? )          ) A         GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE         ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
### Cause: java.sql.SQLSyntaxErrorException: (conn=1563) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'FROM
        (
            SELECT
                A.EVENT_TIME
              ...' at line 25
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: (conn=1563) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'FROM
        (
            SELECT
                A.EVENT_TIME
              ...' at line 25
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwAnalysisRepositoryImpl.getKpiAnalysis(NwAnalysisRepositoryImpl.java:27) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwAnalysisRepositoryImpl$$FastClassBySpringCGLIB$$c286ed19.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwAnalysisRepositoryImpl$$EnhancerBySpringCGLIB$$2ee9aeba.getKpiAnalysis(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl.getKpiAnalysis(NwAnalysisServiceImpl.java:46) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl$$FastClassBySpringCGLIB$$fd7da982.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl$$EnhancerBySpringCGLIB$$aa0b35bf.getKpiAnalysis(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwAnalysisController.getKpiAnalysis(NwAnalysisController.java:32) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwAnalysisController$$FastClassBySpringCGLIB$$82a4185e.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
Caused by: java.sql.SQLSyntaxErrorException: (conn=1563) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'FROM
        (
            SELECT
                A.EVENT_TIME
              ...' at line 25
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:370) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:134) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:855) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:794) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:713) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:637) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:95) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:268) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwAnalysisRepositoryImpl.getKpiAnalysis(NwAnalysisRepositoryImpl.java:27) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwAnalysisRepositoryImpl$$FastClassBySpringCGLIB$$c286ed19.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwAnalysisRepositoryImpl$$EnhancerBySpringCGLIB$$2ee9aeba.getKpiAnalysis(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl.getKpiAnalysis(NwAnalysisServiceImpl.java:46) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl$$FastClassBySpringCGLIB$$fd7da982.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl$$EnhancerBySpringCGLIB$$aa0b35bf.getKpiAnalysis(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwAnalysisController.getKpiAnalysis(NwAnalysisController.java:32) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwAnalysisController$$FastClassBySpringCGLIB$$82a4185e.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
[36m2024-05-31 09:38:30.185[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 09:38:30.187[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 09:38:30.229[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 09:38:34.358[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 2385 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 09:38:34.360[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 09:38:34.361[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 09:38:34.656[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 09:38:34.696[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 34 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 09:38:34.849[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 09:38:35.257[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 09:38:35.263[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 09:38:35.263[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 09:38:35.263[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 09:38:35.319[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 09:38:35.320[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 932 ms
[36m2024-05-31 09:38:35.427[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 09:38:35.467[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 09:38:35.574[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 09:38:35.667[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 09:38:35.809[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 09:38:35.831[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 09:38:36.135[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 09:38:36.144[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 09:38:36.681[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6cfe32cd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5f14eb51, org.springframework.security.web.context.SecurityContextPersistenceFilter@1c0a4f87, org.springframework.security.web.header.HeaderWriterFilter@54faa040, org.springframework.security.web.authentication.logout.LogoutFilter@1d82d35c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@19439ec4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f53f5a4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3f31cf8f, org.springframework.security.web.session.SessionManagementFilter@798753cc, org.springframework.security.web.access.ExceptionTranslationFilter@7fd3c38b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1db7a4ae]
[36m2024-05-31 09:38:36.719[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 09:38:36.968[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 09:38:36.985[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 09:38:36.991[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 2.966 seconds (JVM running for 3.562)
[36m2024-05-31 09:38:46.989[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-05-31 09:38:46.989[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Initializing Servlet 'dispatcherServlet'
[36m2024-05-31 09:38:46.991[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Completed initialization in 1 ms
[36m2024-05-31 09:38:50.094[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-31 09:38:50.111[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 09:38:50.125[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-05-31 09:38:50.137[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-05-31 09:38:50.171[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-31 09:38:50.213[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:38:50.213[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:38:50.241[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 09:38:50.547[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:38:50.548[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:38:50.607[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:38:50.607[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:38:50.610[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 09:38:51.286[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:38:51.286[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:38:51.286[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:38:51.286[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:38:51.470[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 09:38:51.471[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 09:38:54.794[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:38:54.795[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:38:54.836[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 09:38:59.830[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:38:59.830[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:38:59.946[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM
                PM_EPC_ROOT_CAUSE_1M A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240531093700', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0044' , '0047' , '0081' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.MCC = 'ALL'
            AND A.MNC = 'ALL'
            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-05-31 09:39:00.003[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- tmpCallTypeList [0], ATTACH
[36m2024-05-31 09:39:00.004[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(SUM(ATTEMPT_CNT), 0) ATTEMPT_CNT
        ,	IFNULL(SUM(SUCCESS_CNT), 0) SUCCESS_CNT
        ,	CASE IFNULL(SUM(ATTEMPT_CNT), 0) WHEN 0 THEN '0' ELSE ROUND((SUM(SUCCESS_CNT) / SUM(ATTEMPT_CNT)) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT) != 0 AND SUM(DROP_CNT) != 0 THEN ROUND(((SUM(DROP_CNT) / (SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT))) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(SUM(DATA_ATTEMPT_CNT), 0) DATA_ATTEMPT_CNT
        , 	IFNULL(SUM(DATA_SUCCESS_CNT), 0) DATA_SUCCESS_CNT
        , 	CASE WHEN SUM(DATA_ATTEMPT_CNT) != 0 AND SUM(DATA_SUCCESS_CNT) != 0 THEN ROUND(((SUM(DATA_SUCCESS_CNT) / SUM(DATA_ATTEMPT_CNT)) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(SUM(IMS_ATTEMPT_CNT), 0) IMS_ATTEMPT_CNT
        ,	IFNULL(SUM(IMS_SUCCESS_CNT), 0) IMS_SUCCESS_CNT
        , 	CASE WHEN SUM(IMS_ATTEMPT_CNT) != 0 AND SUM(IMS_SUCCESS_CNT) != 0 THEN ROUND(((SUM(IMS_SUCCESS_CNT) / SUM(IMS_ATTEMPT_CNT)) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(SUM(DETACH_CNT), 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN NVL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240531093700', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0044' , '0047' , '0081' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 
        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-05-31 09:39:13.175[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:39:13.176[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:39:13.215[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM
                PM_EPC_ROOT_CAUSE_1M A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240531093700', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0044' , '0047' , '0081' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.MCC = 'ALL'
            AND A.MNC = 'ALL'
            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-05-31 09:39:13.263[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- tmpCallTypeList [0], ATTACH
[36m2024-05-31 09:39:13.268[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(SUM(ATTEMPT_CNT), 0) ATTEMPT_CNT
        ,	IFNULL(SUM(SUCCESS_CNT), 0) SUCCESS_CNT
        ,	CASE IFNULL(SUM(ATTEMPT_CNT), 0) WHEN 0 THEN '0' ELSE ROUND((SUM(SUCCESS_CNT) / SUM(ATTEMPT_CNT)) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT) != 0 AND SUM(DROP_CNT) != 0 THEN ROUND(((SUM(DROP_CNT) / (SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT))) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(SUM(DATA_ATTEMPT_CNT), 0) DATA_ATTEMPT_CNT
        , 	IFNULL(SUM(DATA_SUCCESS_CNT), 0) DATA_SUCCESS_CNT
        , 	CASE WHEN SUM(DATA_ATTEMPT_CNT) != 0 AND SUM(DATA_SUCCESS_CNT) != 0 THEN ROUND(((SUM(DATA_SUCCESS_CNT) / SUM(DATA_ATTEMPT_CNT)) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(SUM(IMS_ATTEMPT_CNT), 0) IMS_ATTEMPT_CNT
        ,	IFNULL(SUM(IMS_SUCCESS_CNT), 0) IMS_SUCCESS_CNT
        , 	CASE WHEN SUM(IMS_ATTEMPT_CNT) != 0 AND SUM(IMS_SUCCESS_CNT) != 0 THEN ROUND(((SUM(IMS_SUCCESS_CNT) / SUM(IMS_ATTEMPT_CNT)) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(SUM(DETACH_CNT), 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN NVL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240531093700', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0044' , '0047' , '0081' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 
        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-05-31 09:42:05.978[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:42:05.980[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:42:05.993[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM
                PM_EPC_ROOT_CAUSE_1M A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME >= DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
                AND A.EVENT_TIME <  DATE_FORMAT(NULL, '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0044' , '0047' , '0081' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.MCC = 'ALL'
            AND A.MNC = 'ALL'
            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-05-31 09:42:06.050[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-05-31 09:42:06.054[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(SUM(ATTEMPT_CNT), 0) ATTEMPT_CNT
        ,	IFNULL(SUM(SUCCESS_CNT), 0) SUCCESS_CNT
        ,	CASE IFNULL(SUM(ATTEMPT_CNT), 0) WHEN 0 THEN '0' ELSE ROUND((SUM(SUCCESS_CNT) / SUM(ATTEMPT_CNT)) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT) != 0 AND SUM(DROP_CNT) != 0 THEN ROUND(((SUM(DROP_CNT) / (SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT))) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(SUM(DATA_ATTEMPT_CNT), 0) DATA_ATTEMPT_CNT
        , 	IFNULL(SUM(DATA_SUCCESS_CNT), 0) DATA_SUCCESS_CNT
        , 	CASE WHEN SUM(DATA_ATTEMPT_CNT) != 0 AND SUM(DATA_SUCCESS_CNT) != 0 THEN ROUND(((SUM(DATA_SUCCESS_CNT) / SUM(DATA_ATTEMPT_CNT)) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(SUM(IMS_ATTEMPT_CNT), 0) IMS_ATTEMPT_CNT
        ,	IFNULL(SUM(IMS_SUCCESS_CNT), 0) IMS_SUCCESS_CNT
        , 	CASE WHEN SUM(IMS_ATTEMPT_CNT) != 0 AND SUM(IMS_SUCCESS_CNT) != 0 THEN ROUND(((SUM(IMS_SUCCESS_CNT) / SUM(IMS_ATTEMPT_CNT)) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(SUM(DETACH_CNT), 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN NVL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME >= DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
                AND A.EVENT_TIME <  DATE_FORMAT(NULL, '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0044' , '0047' , '0081' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 
        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-05-31 09:42:21.848[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:42:21.848[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:42:21.868[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 09:42:30.586[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:42:30.587[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:42:30.612[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM
                PM_EPC_ROOT_CAUSE_1M A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME >= DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
                AND A.EVENT_TIME <  DATE_FORMAT(NULL, '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0046' , '0048' , '0081' , '0082' , '0015' , '0010' , '0003' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.MCC = 'ALL'
            AND A.MNC = 'ALL'
            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-05-31 09:42:30.666[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-05-31 09:42:30.668[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(SUM(ATTEMPT_CNT), 0) ATTEMPT_CNT
        ,	IFNULL(SUM(SUCCESS_CNT), 0) SUCCESS_CNT
        ,	CASE IFNULL(SUM(ATTEMPT_CNT), 0) WHEN 0 THEN '0' ELSE ROUND((SUM(SUCCESS_CNT) / SUM(ATTEMPT_CNT)) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT) != 0 AND SUM(DROP_CNT) != 0 THEN ROUND(((SUM(DROP_CNT) / (SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT))) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(SUM(DATA_ATTEMPT_CNT), 0) DATA_ATTEMPT_CNT
        , 	IFNULL(SUM(DATA_SUCCESS_CNT), 0) DATA_SUCCESS_CNT
        , 	CASE WHEN SUM(DATA_ATTEMPT_CNT) != 0 AND SUM(DATA_SUCCESS_CNT) != 0 THEN ROUND(((SUM(DATA_SUCCESS_CNT) / SUM(DATA_ATTEMPT_CNT)) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(SUM(IMS_ATTEMPT_CNT), 0) IMS_ATTEMPT_CNT
        ,	IFNULL(SUM(IMS_SUCCESS_CNT), 0) IMS_SUCCESS_CNT
        , 	CASE WHEN SUM(IMS_ATTEMPT_CNT) != 0 AND SUM(IMS_SUCCESS_CNT) != 0 THEN ROUND(((SUM(IMS_SUCCESS_CNT) / SUM(IMS_ATTEMPT_CNT)) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(SUM(DETACH_CNT), 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN NVL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME >= DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
                AND A.EVENT_TIME <  DATE_FORMAT(NULL, '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0046' , '0048' , '0081' , '0082' , '0015' , '0010' , '0003' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 
        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-05-31 09:43:30.205[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:43:30.207[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:43:30.220[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM
                PM_EPC_ROOT_CAUSE_1M A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME >= DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
                AND A.EVENT_TIME <  DATE_FORMAT(NULL, '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0046' , '0048' , '0081' , '0082' , '0015' , '0010' , '0003' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.MCC = 'ALL'
            AND A.MNC = 'ALL'
            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-05-31 09:43:30.272[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-05-31 09:43:30.274[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(SUM(ATTEMPT_CNT), 0) ATTEMPT_CNT
        ,	IFNULL(SUM(SUCCESS_CNT), 0) SUCCESS_CNT
        ,	CASE IFNULL(SUM(ATTEMPT_CNT), 0) WHEN 0 THEN '0' ELSE ROUND((SUM(SUCCESS_CNT) / SUM(ATTEMPT_CNT)) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT) != 0 AND SUM(DROP_CNT) != 0 THEN ROUND(((SUM(DROP_CNT) / (SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT))) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(SUM(DATA_ATTEMPT_CNT), 0) DATA_ATTEMPT_CNT
        , 	IFNULL(SUM(DATA_SUCCESS_CNT), 0) DATA_SUCCESS_CNT
        , 	CASE WHEN SUM(DATA_ATTEMPT_CNT) != 0 AND SUM(DATA_SUCCESS_CNT) != 0 THEN ROUND(((SUM(DATA_SUCCESS_CNT) / SUM(DATA_ATTEMPT_CNT)) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(SUM(IMS_ATTEMPT_CNT), 0) IMS_ATTEMPT_CNT
        ,	IFNULL(SUM(IMS_SUCCESS_CNT), 0) IMS_SUCCESS_CNT
        , 	CASE WHEN SUM(IMS_ATTEMPT_CNT) != 0 AND SUM(IMS_SUCCESS_CNT) != 0 THEN ROUND(((SUM(IMS_SUCCESS_CNT) / SUM(IMS_ATTEMPT_CNT)) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(SUM(DETACH_CNT), 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN NVL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME >= DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
                AND A.EVENT_TIME <  DATE_FORMAT(NULL, '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0046' , '0048' , '0081' , '0082' , '0015' , '0010' , '0003' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 
        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-05-31 09:43:31.232[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:43:31.232[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:43:31.244[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM
                PM_EPC_ROOT_CAUSE_1M A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME >= DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
                AND A.EVENT_TIME <  DATE_FORMAT(NULL, '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0046' , '0048' , '0081' , '0082' , '0015' , '0010' , '0003' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.MCC = 'ALL'
            AND A.MNC = 'ALL'
            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-05-31 09:43:31.298[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- tmpCallTypeList [0], ATTACH
[36m2024-05-31 09:43:31.302[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(SUM(ATTEMPT_CNT), 0) ATTEMPT_CNT
        ,	IFNULL(SUM(SUCCESS_CNT), 0) SUCCESS_CNT
        ,	CASE IFNULL(SUM(ATTEMPT_CNT), 0) WHEN 0 THEN '0' ELSE ROUND((SUM(SUCCESS_CNT) / SUM(ATTEMPT_CNT)) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT) != 0 AND SUM(DROP_CNT) != 0 THEN ROUND(((SUM(DROP_CNT) / (SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT))) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(SUM(DATA_ATTEMPT_CNT), 0) DATA_ATTEMPT_CNT
        , 	IFNULL(SUM(DATA_SUCCESS_CNT), 0) DATA_SUCCESS_CNT
        , 	CASE WHEN SUM(DATA_ATTEMPT_CNT) != 0 AND SUM(DATA_SUCCESS_CNT) != 0 THEN ROUND(((SUM(DATA_SUCCESS_CNT) / SUM(DATA_ATTEMPT_CNT)) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(SUM(IMS_ATTEMPT_CNT), 0) IMS_ATTEMPT_CNT
        ,	IFNULL(SUM(IMS_SUCCESS_CNT), 0) IMS_SUCCESS_CNT
        , 	CASE WHEN SUM(IMS_ATTEMPT_CNT) != 0 AND SUM(IMS_SUCCESS_CNT) != 0 THEN ROUND(((SUM(IMS_SUCCESS_CNT) / SUM(IMS_ATTEMPT_CNT)) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(SUM(DETACH_CNT), 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN NVL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME >= DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
                AND A.EVENT_TIME <  DATE_FORMAT(NULL, '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0046' , '0048' , '0081' , '0082' , '0015' , '0010' , '0003' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 
        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-05-31 09:43:31.952[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:43:31.953[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:43:31.971[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM
                PM_EPC_ROOT_CAUSE_1M A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME >= DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
                AND A.EVENT_TIME <  DATE_FORMAT(NULL, '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0046' , '0048' , '0081' , '0082' , '0015' , '0010' , '0003' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.MCC = 'ALL'
            AND A.MNC = 'ALL'
            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-05-31 09:43:32.025[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-05-31 09:43:32.028[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(SUM(ATTEMPT_CNT), 0) ATTEMPT_CNT
        ,	IFNULL(SUM(SUCCESS_CNT), 0) SUCCESS_CNT
        ,	CASE IFNULL(SUM(ATTEMPT_CNT), 0) WHEN 0 THEN '0' ELSE ROUND((SUM(SUCCESS_CNT) / SUM(ATTEMPT_CNT)) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT) != 0 AND SUM(DROP_CNT) != 0 THEN ROUND(((SUM(DROP_CNT) / (SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT))) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(SUM(DATA_ATTEMPT_CNT), 0) DATA_ATTEMPT_CNT
        , 	IFNULL(SUM(DATA_SUCCESS_CNT), 0) DATA_SUCCESS_CNT
        , 	CASE WHEN SUM(DATA_ATTEMPT_CNT) != 0 AND SUM(DATA_SUCCESS_CNT) != 0 THEN ROUND(((SUM(DATA_SUCCESS_CNT) / SUM(DATA_ATTEMPT_CNT)) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(SUM(IMS_ATTEMPT_CNT), 0) IMS_ATTEMPT_CNT
        ,	IFNULL(SUM(IMS_SUCCESS_CNT), 0) IMS_SUCCESS_CNT
        , 	CASE WHEN SUM(IMS_ATTEMPT_CNT) != 0 AND SUM(IMS_SUCCESS_CNT) != 0 THEN ROUND(((SUM(IMS_SUCCESS_CNT) / SUM(IMS_ATTEMPT_CNT)) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(SUM(DETACH_CNT), 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN NVL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME >= DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
                AND A.EVENT_TIME <  DATE_FORMAT(NULL, '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0046' , '0048' , '0081' , '0082' , '0015' , '0010' , '0003' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 
        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-05-31 09:43:58.722[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:43:58.724[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:43:58.741[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 09:43:59.551[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:43:59.551[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:43:59.553[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:43:59.553[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:43:59.562[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 09:43:59.562[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 09:44:18.145[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:44:18.145[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:44:18.162[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 09:44:24.407[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:44:24.408[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:44:24.420[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM
                PM_EPC_ROOT_CAUSE_1M A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME >= DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
                AND A.EVENT_TIME <  DATE_FORMAT('20240531094300', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0045' , '0049' , '0082' , '0014' , '0059' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.MCC = 'ALL'
            AND A.MNC = 'ALL'
            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-05-31 09:44:24.484[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-2][m- tmpCallTypeList [0], ATTACH
[36m2024-05-31 09:44:24.493[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(SUM(ATTEMPT_CNT), 0) ATTEMPT_CNT
        ,	IFNULL(SUM(SUCCESS_CNT), 0) SUCCESS_CNT
        ,	CASE IFNULL(SUM(ATTEMPT_CNT), 0) WHEN 0 THEN '0' ELSE ROUND((SUM(SUCCESS_CNT) / SUM(ATTEMPT_CNT)) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT) != 0 AND SUM(DROP_CNT) != 0 THEN ROUND(((SUM(DROP_CNT) / (SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT))) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(SUM(DATA_ATTEMPT_CNT), 0) DATA_ATTEMPT_CNT
        , 	IFNULL(SUM(DATA_SUCCESS_CNT), 0) DATA_SUCCESS_CNT
        , 	CASE WHEN SUM(DATA_ATTEMPT_CNT) != 0 AND SUM(DATA_SUCCESS_CNT) != 0 THEN ROUND(((SUM(DATA_SUCCESS_CNT) / SUM(DATA_ATTEMPT_CNT)) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(SUM(IMS_ATTEMPT_CNT), 0) IMS_ATTEMPT_CNT
        ,	IFNULL(SUM(IMS_SUCCESS_CNT), 0) IMS_SUCCESS_CNT
        , 	CASE WHEN SUM(IMS_ATTEMPT_CNT) != 0 AND SUM(IMS_SUCCESS_CNT) != 0 THEN ROUND(((SUM(IMS_SUCCESS_CNT) / SUM(IMS_ATTEMPT_CNT)) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(SUM(DETACH_CNT), 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000087' THEN CAUSE_CNT ELSE 0 END) CD_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000103' THEN CAUSE_CNT ELSE 0 END) CD_C_02000103
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000503' THEN CAUSE_CNT ELSE 0 END) CD_C_02000503
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000090' THEN CAUSE_CNT ELSE 0 END) CD_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000108' THEN CAUSE_CNT ELSE 0 END) CD_C_02000108
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000403' THEN CAUSE_CNT ELSE 0 END) CD_C_02000403
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000027' THEN CAUSE_CNT ELSE 0 END) CD_C_06000027
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000038' THEN CAUSE_CNT ELSE 0 END) CD_C_06000038
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000121' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000504' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000027' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000027
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000078' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000078
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000901' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000040' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000040
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000201' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000201
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000038' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000038
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN NVL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME >= DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
                AND A.EVENT_TIME <  DATE_FORMAT('20240531094300', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0045' , '0049' , '0082' , '0014' , '0059' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 
        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-05-31 09:44:31.394[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:44:31.396[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:44:31.401[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- before set Executor
[36m2024-05-31 09:44:31.401[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- before Loop sArr
[36m2024-05-31 09:44:31.403[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- before Future
[36m2024-05-31 09:44:31.478[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_01015420'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:44:31.579[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_01015420'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:44:31.579[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_01015420'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:44:31.579[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_01015420'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:44:31.581[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_01015420'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:44:31.713[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- IMSI : OK
[36m2024-05-31 09:44:31.714[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- ENB : OK
[36m2024-05-31 09:44:31.714[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- MME : OK
[36m2024-05-31 09:44:31.715[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- SGW : OK
[36m2024-05-31 09:44:31.716[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- PGW : OK
[36m2024-05-31 09:44:40.984[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:44:40.984[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:44:40.985[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- before set Executor
[36m2024-05-31 09:44:40.986[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- before Loop sArr
[36m2024-05-31 09:44:40.988[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- before Future
[36m2024-05-31 09:44:41.040[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_06000033'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:44:41.041[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_06000033'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:44:41.041[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_06000033'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:44:41.042[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_06000033'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:44:41.042[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_06000033'
            AND FAIL_TYPE = 'SUC_FAIL'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'ATTACH'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:44:41.344[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- IMSI : OK
[36m2024-05-31 09:44:41.345[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- ENB : OK
[36m2024-05-31 09:44:41.348[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- MME : OK
[36m2024-05-31 09:44:41.348[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- SGW : OK
[36m2024-05-31 09:44:41.348[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- PGW : OK
[36m2024-05-31 09:45:03.664[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:45:03.665[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:45:03.696[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM
                PM_EPC_ROOT_CAUSE_1M A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME >= DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
                AND A.EVENT_TIME <  DATE_FORMAT('20240531094300', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0045' , '0049' , '0082' , '0014' , '0059' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.MCC = 'ALL'
            AND A.MNC = 'ALL'
            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-05-31 09:45:03.758[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- tmpCallTypeList [0], ATTACH
[36m2024-05-31 09:45:03.766[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(SUM(ATTEMPT_CNT), 0) ATTEMPT_CNT
        ,	IFNULL(SUM(SUCCESS_CNT), 0) SUCCESS_CNT
        ,	CASE IFNULL(SUM(ATTEMPT_CNT), 0) WHEN 0 THEN '0' ELSE ROUND((SUM(SUCCESS_CNT) / SUM(ATTEMPT_CNT)) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT) != 0 AND SUM(DROP_CNT) != 0 THEN ROUND(((SUM(DROP_CNT) / (SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT))) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(SUM(DATA_ATTEMPT_CNT), 0) DATA_ATTEMPT_CNT
        , 	IFNULL(SUM(DATA_SUCCESS_CNT), 0) DATA_SUCCESS_CNT
        , 	CASE WHEN SUM(DATA_ATTEMPT_CNT) != 0 AND SUM(DATA_SUCCESS_CNT) != 0 THEN ROUND(((SUM(DATA_SUCCESS_CNT) / SUM(DATA_ATTEMPT_CNT)) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(SUM(IMS_ATTEMPT_CNT), 0) IMS_ATTEMPT_CNT
        ,	IFNULL(SUM(IMS_SUCCESS_CNT), 0) IMS_SUCCESS_CNT
        , 	CASE WHEN SUM(IMS_ATTEMPT_CNT) != 0 AND SUM(IMS_SUCCESS_CNT) != 0 THEN ROUND(((SUM(IMS_SUCCESS_CNT) / SUM(IMS_ATTEMPT_CNT)) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(SUM(DETACH_CNT), 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000087' THEN CAUSE_CNT ELSE 0 END) CD_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000103' THEN CAUSE_CNT ELSE 0 END) CD_C_02000103
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000503' THEN CAUSE_CNT ELSE 0 END) CD_C_02000503
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000090' THEN CAUSE_CNT ELSE 0 END) CD_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000108' THEN CAUSE_CNT ELSE 0 END) CD_C_02000108
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000403' THEN CAUSE_CNT ELSE 0 END) CD_C_02000403
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000027' THEN CAUSE_CNT ELSE 0 END) CD_C_06000027
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000038' THEN CAUSE_CNT ELSE 0 END) CD_C_06000038
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000121' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000504' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000027' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000027
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000078' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000078
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000901' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000040' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000040
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000201' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000201
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000038' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000038
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN NVL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME >= DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
                AND A.EVENT_TIME <  DATE_FORMAT('20240531094300', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0041' , '0045' , '0049' , '0082' , '0014' , '0059' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 
        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-05-31 09:45:26.753[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:45:26.754[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:45:26.756[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before set Executor
[36m2024-05-31 09:45:26.756[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before Loop sArr
[36m2024-05-31 09:45:26.757[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before Future
[36m2024-05-31 09:45:26.808[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'SUCCESRATE'
            AND FAIL_TYPE = 'S'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:45:26.809[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'SUCCESRATE'
            AND FAIL_TYPE = 'S'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:45:26.810[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'SUCCESRATE'
            AND FAIL_TYPE = 'S'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:45:26.812[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'SUCCESRATE'
            AND FAIL_TYPE = 'S'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:45:26.812[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'SUCCESRATE'
            AND FAIL_TYPE = 'S'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:45:26.885[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- IMSI : OK
[36m2024-05-31 09:45:26.886[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- ENB : OK
[36m2024-05-31 09:45:26.886[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- MME : OK
[36m2024-05-31 09:45:26.886[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- SGW : OK
[36m2024-05-31 09:45:26.887[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- PGW : OK
[36m2024-05-31 09:46:23.642[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:46:23.643[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:46:23.645[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before set Executor
[36m2024-05-31 09:46:23.645[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before Loop sArr
[36m2024-05-31 09:46:23.646[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before Future
[36m2024-05-31 09:46:23.783[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000121'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:46:23.789[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000121'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:46:23.791[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000121'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:46:23.794[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000121'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:46:23.797[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000121'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:46:23.911[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- IMSI : OK
[36m2024-05-31 09:46:23.912[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- ENB : OK
[36m2024-05-31 09:46:23.912[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- MME : OK
[36m2024-05-31 09:46:23.912[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- SGW : OK
[36m2024-05-31 09:46:23.913[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- PGW : OK
[36m2024-05-31 09:46:29.037[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-31 09:46:29.037[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 09:46:29.038[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- before set Executor
[36m2024-05-31 09:46:29.039[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- before Loop sArr
[36m2024-05-31 09:46:29.039[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- before Future
[36m2024-05-31 09:46:29.154[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'dropcnt'
            AND FAIL_TYPE = ''
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:46:29.156[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'dropcnt'
            AND FAIL_TYPE = ''
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:46:29.156[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'dropcnt'
            AND FAIL_TYPE = ''
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:46:29.156[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'dropcnt'
            AND FAIL_TYPE = ''
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:46:29.156[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'dropcnt'
            AND FAIL_TYPE = ''
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0014'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 09:46:29.200[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- IMSI : OK
[36m2024-05-31 09:46:29.201[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- ENB : OK
[36m2024-05-31 09:46:29.202[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- MME : OK
[36m2024-05-31 09:46:29.202[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- SGW : OK
[36m2024-05-31 09:46:29.202[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-9][m- PGW : OK
[36m2024-05-31 11:13:25.487[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m18s680ms).
[36m2024-05-31 11:14:33.248[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m7s762ms).
[36m2024-05-31 11:16:24.101[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m20s846ms).
[36m2024-05-31 11:18:13.306[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m19s196ms).
[36m2024-05-31 11:19:37.595[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m24s289ms).
[36m2024-05-31 11:21:23.632[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m16s25ms).
[36m2024-05-31 11:22:34.303[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m10s672ms).
[36m2024-05-31 11:24:23.508[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m19s195ms).
[36m2024-05-31 11:26:16.896[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m23s373ms).
[36m2024-05-31 11:27:26.478[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m9s583ms).
[36m2024-05-31 11:29:22.122[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m25s629ms).
[36m2024-05-31 11:30:47.568[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m25s446ms).
[36m2024-05-31 11:32:29.054[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m11s472ms).
[36m2024-05-31 13:52:44.330[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 13:52:44.332[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 13:52:44.373[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 15:43:11.286[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 30195 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 15:43:11.289[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 15:43:11.289[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 15:43:11.580[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 15:43:11.621[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 36 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 15:43:11.775[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 15:43:12.181[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 15:43:12.187[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 15:43:12.188[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 15:43:12.188[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 15:43:12.256[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 15:43:12.256[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 943 ms
[36m2024-05-31 15:43:12.361[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 15:43:12.403[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 15:43:12.518[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 15:43:12.648[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 15:43:12.771[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 15:43:12.792[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 15:43:13.123[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 15:43:13.129[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 15:43:13.575[m [33m[WARN ][m [org.springframework.context.support.AbstractApplicationContext] [33m[main][m- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'nwConfigController' defined in file [/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes/com/mobigen/cdev/poc/module/nw/controller/NwConfigController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'nwConfigServiceImpl' defined in file [/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes/com/mobigen/cdev/poc/module/nw/service/NwConfigServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.mobigen.cdev.poc.module.nw.process.NwConfigDemon' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
[36m2024-05-31 15:43:13.576[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 15:43:13.578[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 15:43:13.633[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 15:43:13.637[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Stopping service [Tomcat]
[36m2024-05-31 15:43:13.651[m [32m[INFO ][m [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] [33m[main][m- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[36m2024-05-31 15:43:13.679[m [31m[ERROR][m [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] [33m[main][m- 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl required a bean of type 'com.mobigen.cdev.poc.module.nw.process.NwConfigDemon' that could not be found.


Action:

Consider defining a bean of type 'com.mobigen.cdev.poc.module.nw.process.NwConfigDemon' in your configuration.

[36m2024-05-31 15:44:13.332[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 30287 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 15:44:13.335[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 15:44:13.335[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 15:44:13.605[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 15:44:13.645[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 34 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 15:44:13.791[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 15:44:14.174[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 15:44:14.180[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 15:44:14.180[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 15:44:14.180[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 15:44:14.238[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 15:44:14.238[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 882 ms
[36m2024-05-31 15:44:14.343[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 15:44:14.374[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 15:44:14.470[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 15:44:14.582[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 15:44:14.696[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 15:44:14.716[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 15:44:15.028[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 15:44:15.034[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 15:44:15.433[m [33m[WARN ][m [org.springframework.context.support.AbstractApplicationContext] [33m[main][m- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'nwConfigController' defined in file [/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes/com/mobigen/cdev/poc/module/nw/controller/NwConfigController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'nwConfigServiceImpl' defined in file [/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes/com/mobigen/cdev/poc/module/nw/service/NwConfigServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.mobigen.cdev.poc.module.nw.process.NwConfigDemon' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
[36m2024-05-31 15:44:15.434[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 15:44:15.435[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 15:44:15.479[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 15:44:15.480[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Stopping service [Tomcat]
[36m2024-05-31 15:44:15.486[m [32m[INFO ][m [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] [33m[main][m- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[36m2024-05-31 15:44:15.499[m [31m[ERROR][m [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] [33m[main][m- 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl required a bean of type 'com.mobigen.cdev.poc.module.nw.process.NwConfigDemon' that could not be found.


Action:

Consider defining a bean of type 'com.mobigen.cdev.poc.module.nw.process.NwConfigDemon' in your configuration.

[36m2024-05-31 15:45:12.953[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 30388 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 15:45:12.956[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 15:45:12.956[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 15:45:13.226[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 15:45:13.266[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 34 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 15:45:13.419[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 15:45:13.818[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 15:45:13.824[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 15:45:13.824[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 15:45:13.824[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 15:45:13.883[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 15:45:13.883[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 904 ms
[36m2024-05-31 15:45:13.987[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 15:45:14.022[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 15:45:14.119[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 15:45:14.224[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 15:45:14.341[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 15:45:14.361[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 15:45:14.681[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 15:45:14.687[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 15:45:15.229[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7ec729be, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f7da3a2, org.springframework.security.web.context.SecurityContextPersistenceFilter@464017f5, org.springframework.security.web.header.HeaderWriterFilter@481eb705, org.springframework.security.web.authentication.logout.LogoutFilter@18c95fbb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@397f9672, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@72e4ffa2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@24ea71d, org.springframework.security.web.session.SessionManagementFilter@3b48361e, org.springframework.security.web.access.ExceptionTranslationFilter@711261c7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1b62ad1e]
[36m2024-05-31 15:45:15.265[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 15:45:15.509[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 15:45:15.526[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 15:45:15.532[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 2.923 seconds (JVM running for 3.632)
[36m2024-05-31 15:45:44.823[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 15:45:44.825[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 15:45:44.867[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 15:45:48.369[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 30431 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 15:45:48.373[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 15:45:48.373[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 15:45:48.732[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 15:45:48.784[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 46 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 15:45:48.941[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 15:45:49.468[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 15:45:49.477[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 15:45:49.478[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 15:45:49.478[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 15:45:49.559[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 15:45:49.559[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1154 ms
[36m2024-05-31 15:45:49.679[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 15:45:49.741[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 15:45:49.881[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 15:45:49.991[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 15:45:50.708[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 15:45:50.733[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 15:45:51.172[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 15:45:51.179[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 15:45:51.908[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7a3ab73a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@12a8d03b, org.springframework.security.web.context.SecurityContextPersistenceFilter@5fdff4f1, org.springframework.security.web.header.HeaderWriterFilter@1a67bcaf, org.springframework.security.web.authentication.logout.LogoutFilter@6d7a343f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@140fa482, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78de0f6f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@67cd1db3, org.springframework.security.web.session.SessionManagementFilter@5643052d, org.springframework.security.web.access.ExceptionTranslationFilter@5aa461, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7fae6f43]
[36m2024-05-31 15:45:51.976[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 15:45:52.345[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 15:45:52.370[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 15:45:52.377[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 4.354 seconds (JVM running for 5.424)
[36m2024-05-31 15:46:33.218[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 15:46:33.219[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 15:46:33.263[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 15:46:47.443[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 30501 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 15:46:47.446[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 15:46:47.446[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 15:46:47.812[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 15:46:47.863[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 45 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 15:46:48.027[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 15:46:48.541[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 15:46:48.553[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 15:46:48.553[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 15:46:48.555[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 15:46:48.627[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 15:46:48.627[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1158 ms
[36m2024-05-31 15:46:48.767[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 15:46:48.820[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 15:46:48.962[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 15:46:49.103[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 15:46:49.380[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 15:46:49.404[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 15:46:49.721[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 15:46:49.726[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 15:46:50.450[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@253c7189, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@cfe72b0, org.springframework.security.web.context.SecurityContextPersistenceFilter@764d54a0, org.springframework.security.web.header.HeaderWriterFilter@1dcc0bb8, org.springframework.security.web.authentication.logout.LogoutFilter@4a49ce3a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5b7d5eca, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@52a3eba3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@12f933c7, org.springframework.security.web.session.SessionManagementFilter@1b62ad1e, org.springframework.security.web.access.ExceptionTranslationFilter@2b33f7a0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7e0393df]
[36m2024-05-31 15:46:50.500[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 15:46:50.822[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 15:46:50.847[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 15:46:50.854[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.864 seconds (JVM running for 4.684)
[36m2024-05-31 15:48:03.431[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 15:48:03.432[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 15:48:03.474[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 15:51:38.317[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 31137 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 15:51:38.320[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 15:51:38.320[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 15:51:38.648[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 15:51:38.689[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 35 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 15:51:38.870[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 15:51:39.339[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 15:51:39.346[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 15:51:39.347[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 15:51:39.347[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 15:51:39.424[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 15:51:39.424[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1081 ms
[36m2024-05-31 15:51:39.587[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 15:51:39.655[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 15:51:39.812[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 15:51:39.945[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 15:51:40.059[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 15:51:40.081[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 15:51:40.381[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 15:51:40.387[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 15:51:41.330[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@342a5b57, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5e781b4f, org.springframework.security.web.context.SecurityContextPersistenceFilter@5a0b550a, org.springframework.security.web.header.HeaderWriterFilter@21262bde, org.springframework.security.web.authentication.logout.LogoutFilter@c0a8787, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@69d9d322, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4e23ddf0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1b89debc, org.springframework.security.web.session.SessionManagementFilter@7842260f, org.springframework.security.web.access.ExceptionTranslationFilter@28468162, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@549fe529]
[36m2024-05-31 15:51:41.372[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 15:51:41.689[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 15:51:41.719[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 15:51:41.726[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.873 seconds (JVM running for 4.524)
[36m2024-05-31 15:52:59.019[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 15:52:59.020[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 15:52:59.062[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 15:53:05.413[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 31235 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 15:53:05.415[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 15:53:05.415[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 15:53:05.747[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 15:53:05.787[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 34 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 15:53:05.956[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 15:53:06.406[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 15:53:06.413[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 15:53:06.413[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 15:53:06.413[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 15:53:06.478[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 15:53:06.478[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1040 ms
[36m2024-05-31 15:53:06.602[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 15:53:06.649[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 15:53:06.767[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 15:53:06.883[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 15:53:06.993[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 15:53:07.013[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 15:53:07.314[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 15:53:07.319[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 15:53:07.962[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@342a5b57, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5e781b4f, org.springframework.security.web.context.SecurityContextPersistenceFilter@5a0b550a, org.springframework.security.web.header.HeaderWriterFilter@21262bde, org.springframework.security.web.authentication.logout.LogoutFilter@c0a8787, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@69d9d322, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4e23ddf0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1b89debc, org.springframework.security.web.session.SessionManagementFilter@7842260f, org.springframework.security.web.access.ExceptionTranslationFilter@28468162, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@549fe529]
[36m2024-05-31 15:53:08.013[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 15:53:08.301[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 15:53:08.323[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 15:53:08.331[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.303 seconds (JVM running for 3.828)
[36m2024-05-31 15:53:27.817[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-05-31 16:00:27.488[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:00:27.490[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 16:00:27.533[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 16:00:31.735[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 31751 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 16:00:31.737[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 16:00:31.737[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 16:00:32.036[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 16:00:32.079[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 35 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 16:00:32.254[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 16:00:32.728[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 16:00:32.735[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:00:32.736[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 16:00:32.736[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 16:00:32.813[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 16:00:32.813[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1053 ms
[36m2024-05-31 16:00:32.977[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 16:00:33.023[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 16:00:33.135[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 16:00:33.259[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 16:00:33.363[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 16:00:33.382[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 16:00:33.660[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 16:00:33.665[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:00:34.516[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@69542112, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@35a81281, org.springframework.security.web.context.SecurityContextPersistenceFilter@6821d4e1, org.springframework.security.web.header.HeaderWriterFilter@542c6165, org.springframework.security.web.authentication.logout.LogoutFilter@4417755b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@213c812a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@25814d3c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58829c2c, org.springframework.security.web.session.SessionManagementFilter@18c95fbb, org.springframework.security.web.access.ExceptionTranslationFilter@1f3310fc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@37a0c3c6]
[36m2024-05-31 16:00:34.576[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 16:00:34.900[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:00:34.922[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 16:00:34.930[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.569 seconds (JVM running for 4.185)
[36m2024-05-31 16:00:35.288[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-05-31 16:00:38.366[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:00:38.367[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 16:00:38.410[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 16:00:41.364[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 31762 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 16:00:41.367[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 16:00:41.368[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 16:00:41.767[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 16:00:41.816[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 44 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 16:00:42.052[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 16:00:42.569[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 16:00:42.581[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:00:42.581[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 16:00:42.581[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 16:00:42.654[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 16:00:42.654[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1250 ms
[36m2024-05-31 16:00:42.772[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 16:00:42.822[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 16:00:42.965[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 16:00:43.100[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 16:00:43.230[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 16:00:43.250[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 16:00:43.574[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 16:00:43.579[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:00:44.305[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@360d0c7a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@32f8a37b, org.springframework.security.web.context.SecurityContextPersistenceFilter@edf4973, org.springframework.security.web.header.HeaderWriterFilter@45775a15, org.springframework.security.web.authentication.logout.LogoutFilter@52a3eba3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6e68ccc9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1784fcab, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@657e7e8, org.springframework.security.web.session.SessionManagementFilter@171b0d3, org.springframework.security.web.access.ExceptionTranslationFilter@54c697c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@12a8d03b]
[36m2024-05-31 16:00:44.351[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 16:00:44.694[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:00:44.717[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 16:00:44.724[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.804 seconds (JVM running for 4.772)
[36m2024-05-31 16:00:48.820[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-05-31 16:04:59.346[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:04:59.348[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 16:04:59.393[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 16:05:06.241[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 32039 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 16:05:06.244[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 16:05:06.244[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 16:05:06.576[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 16:05:06.624[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 43 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 16:05:06.789[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 16:05:07.478[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 16:05:07.488[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:05:07.490[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 16:05:07.490[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 16:05:07.600[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 16:05:07.601[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1333 ms
[36m2024-05-31 16:05:07.768[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 16:05:07.819[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 16:05:07.974[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 16:05:08.102[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 16:05:08.457[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 16:05:08.488[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 16:05:08.838[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 16:05:08.844[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:05:09.693[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@cfe72b0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@12f933c7, org.springframework.security.web.context.SecurityContextPersistenceFilter@78c91d2a, org.springframework.security.web.header.HeaderWriterFilter@29767156, org.springframework.security.web.authentication.logout.LogoutFilter@518ed9b4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@52a3eba3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ed74d03, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@156d7556, org.springframework.security.web.session.SessionManagementFilter@714a4ba2, org.springframework.security.web.access.ExceptionTranslationFilter@71b6edfb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@62b2bc2e]
[36m2024-05-31 16:05:09.753[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 16:05:10.118[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:05:10.140[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 16:05:10.148[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 4.33 seconds (JVM running for 5.104)
[36m2024-05-31 16:05:14.193[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-05-31 16:06:10.935[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:06:10.936[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 16:06:10.980[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 16:06:12.388[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 32107 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 16:06:12.391[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 16:06:12.391[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 16:06:12.770[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 16:06:12.825[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 49 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 16:06:12.990[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 16:06:13.483[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 16:06:13.490[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:06:13.491[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 16:06:13.491[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 16:06:13.563[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 16:06:13.563[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1142 ms
[36m2024-05-31 16:06:13.690[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 16:06:13.735[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 16:06:13.867[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 16:06:13.991[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 16:06:14.124[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 16:06:14.143[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 16:06:14.472[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 16:06:14.478[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:06:15.179[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3894d1b1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5f6b1f19, org.springframework.security.web.context.SecurityContextPersistenceFilter@714a4ba2, org.springframework.security.web.header.HeaderWriterFilter@71b6edfb, org.springframework.security.web.authentication.logout.LogoutFilter@7af17d31, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@764d54a0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78c91d2a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@253c7189, org.springframework.security.web.session.SessionManagementFilter@64ff0eaa, org.springframework.security.web.access.ExceptionTranslationFilter@7fb28ed, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1df83569]
[36m2024-05-31 16:06:15.226[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 16:06:15.528[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:06:15.548[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 16:06:15.559[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.629 seconds (JVM running for 4.324)
[36m2024-05-31 16:06:16.012[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-05-31 16:06:42.479[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:06:42.480[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 16:06:42.523[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 16:06:43.847[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 32141 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 16:06:43.850[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 16:06:43.850[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 16:06:44.210[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 16:06:44.273[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 57 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 16:06:44.516[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 16:06:45.035[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 16:06:45.048[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:06:45.049[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 16:06:45.049[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 16:06:45.120[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 16:06:45.120[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1247 ms
[36m2024-05-31 16:06:45.247[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 16:06:45.293[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 16:06:45.434[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 16:06:45.568[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 16:06:45.690[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 16:06:45.711[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 16:06:46.061[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 16:06:46.068[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:06:46.844[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@15096b0e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@67748053, org.springframework.security.web.context.SecurityContextPersistenceFilter@d5eca06, org.springframework.security.web.header.HeaderWriterFilter@78de0f6f, org.springframework.security.web.authentication.logout.LogoutFilter@26398f67, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@304cad3a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@628cb8e0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7da59f6e, org.springframework.security.web.session.SessionManagementFilter@5825932c, org.springframework.security.web.access.ExceptionTranslationFilter@5fdff4f1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@32f8a37b]
[36m2024-05-31 16:06:46.897[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 16:06:47.207[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:06:47.229[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 16:06:47.239[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.758 seconds (JVM running for 4.463)
[36m2024-05-31 16:06:47.688[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-05-31 16:07:40.313[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=54s520ms).
[36m2024-05-31 16:07:40.387[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:07:40.388[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 16:07:40.433[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 16:07:57.577[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 32241 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 16:07:57.579[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 16:07:57.580[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 16:07:57.910[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 16:07:57.959[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 43 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 16:07:58.122[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 16:07:58.620[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 16:07:58.628[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:07:58.628[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 16:07:58.628[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 16:07:58.701[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 16:07:58.701[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1097 ms
[36m2024-05-31 16:07:58.855[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 16:07:58.899[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 16:07:59.029[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 16:07:59.159[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 16:07:59.526[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 16:07:59.546[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 16:07:59.867[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 16:07:59.873[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:08:00.561[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3e3d8e6c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7fd3197b, org.springframework.security.web.context.SecurityContextPersistenceFilter@26398f67, org.springframework.security.web.header.HeaderWriterFilter@3b9c386d, org.springframework.security.web.authentication.logout.LogoutFilter@2c6553c6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@401b7226, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1b62ad1e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d2ce035, org.springframework.security.web.session.SessionManagementFilter@24ccc91b, org.springframework.security.web.access.ExceptionTranslationFilter@6d7a343f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@ab595e8]
[36m2024-05-31 16:08:00.609[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 16:08:00.917[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:08:00.943[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 16:08:00.951[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.754 seconds (JVM running for 4.436)
[36m2024-05-31 16:08:01.387[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-05-31 16:08:08.540[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:10:49.578[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:10:49.581[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 16:10:49.627[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 16:10:50.899[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 32462 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 16:10:50.901[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 16:10:50.902[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 16:10:51.270[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 16:10:51.324[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 48 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 16:10:51.531[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 16:10:52.076[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 16:10:52.085[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:10:52.085[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 16:10:52.085[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 16:10:52.171[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 16:10:52.171[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1246 ms
[36m2024-05-31 16:10:52.305[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 16:10:52.350[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 16:10:52.497[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 16:10:52.639[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 16:10:52.781[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 16:10:52.800[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 16:10:53.352[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 16:10:53.360[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:10:54.103[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4ffcb1bd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5be8a92c, org.springframework.security.web.context.SecurityContextPersistenceFilter@506654fa, org.springframework.security.web.header.HeaderWriterFilter@1d160161, org.springframework.security.web.authentication.logout.LogoutFilter@19f9404d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@21f421b8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4e3bc13b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@51d80f6e, org.springframework.security.web.session.SessionManagementFilter@4f4b7a2e, org.springframework.security.web.access.ExceptionTranslationFilter@75708130, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@c7aac7c]
[36m2024-05-31 16:10:54.156[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 16:10:54.476[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:10:54.496[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 16:10:54.503[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 4.01 seconds (JVM running for 4.659)
[36m2024-05-31 16:10:54.943[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-05-31 16:11:00.758[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:14:23.844[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:14:23.845[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 16:14:23.890[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 16:14:30.129[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 32927 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 16:14:30.131[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 16:14:30.131[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 16:14:30.445[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 16:14:30.496[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 46 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 16:14:30.668[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 16:14:31.160[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 16:14:31.168[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:14:31.169[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 16:14:31.169[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 16:14:31.242[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 16:14:31.243[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1086 ms
[36m2024-05-31 16:14:31.380[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 16:14:31.427[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 16:14:31.601[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 16:14:31.726[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 16:14:31.876[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 16:14:31.897[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 16:14:32.221[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 16:14:32.227[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:14:32.987[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2c8f7d6a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77331437, org.springframework.security.web.context.SecurityContextPersistenceFilter@7ec729be, org.springframework.security.web.header.HeaderWriterFilter@7c35d7d, org.springframework.security.web.authentication.logout.LogoutFilter@4a15d5f5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@24ea71d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@76055d02, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@98a0842, org.springframework.security.web.session.SessionManagementFilter@5b7d5eca, org.springframework.security.web.access.ExceptionTranslationFilter@6f6998b6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6a087c72]
[36m2024-05-31 16:14:33.032[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 16:14:33.396[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:14:33.437[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 16:14:33.451[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.684 seconds (JVM running for 4.292)
[36m2024-05-31 16:14:33.823[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-05-31 16:14:39.618[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:16:58.357[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:16:58.358[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 16:16:58.401[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 16:17:08.790[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 33161 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 16:17:08.793[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 16:17:08.793[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 16:17:09.242[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 16:17:09.315[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 61 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 16:17:09.543[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 16:17:10.076[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 16:17:10.083[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:17:10.083[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 16:17:10.083[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 16:17:10.156[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 16:17:10.156[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1337 ms
[36m2024-05-31 16:17:10.291[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 16:17:10.326[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 16:17:10.441[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 16:17:10.549[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 16:17:10.672[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 16:17:10.693[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 16:17:10.965[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 16:17:10.969[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:17:11.613[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@751526a7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2279e7c7, org.springframework.security.web.context.SecurityContextPersistenceFilter@6d3194ff, org.springframework.security.web.header.HeaderWriterFilter@464017f5, org.springframework.security.web.authentication.logout.LogoutFilter@55f4ec04, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@123d666b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1f3310fc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4c5e123d, org.springframework.security.web.session.SessionManagementFilter@4c231f62, org.springframework.security.web.access.ExceptionTranslationFilter@3b48361e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@383a5260]
[36m2024-05-31 16:17:11.665[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 16:17:11.949[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:17:11.971[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 16:17:11.978[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.57 seconds (JVM running for 4.296)
[36m2024-05-31 16:17:29.868[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:17:29.869[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 16:17:29.912[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 16:18:28.820[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 33287 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 16:18:28.822[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 16:18:28.822[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 16:18:29.141[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 16:18:29.182[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 35 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 16:18:29.427[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 16:18:29.974[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 16:18:29.980[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:18:29.981[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 16:18:29.981[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 16:18:30.056[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 16:18:30.057[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1210 ms
[36m2024-05-31 16:18:30.189[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 16:18:30.226[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 16:18:30.334[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 16:18:30.450[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 16:18:30.843[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 16:18:30.865[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 16:18:31.197[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 16:18:31.202[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:18:31.789[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-05-31 16:18:31.914[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:18:31.914[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:18:31.914[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-2][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:18:31.915[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:18:31.966[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@590ab84, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@8a8cab8, org.springframework.security.web.context.SecurityContextPersistenceFilter@94b5fe3, org.springframework.security.web.header.HeaderWriterFilter@1b2e841, org.springframework.security.web.authentication.logout.LogoutFilter@7894a250, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3811464b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5f0a5848, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d48299e, org.springframework.security.web.session.SessionManagementFilter@4e00723b, org.springframework.security.web.access.ExceptionTranslationFilter@1fd4850b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@51a73873]
[36m2024-05-31 16:18:32.024[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 16:18:32.342[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:18:32.363[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 16:18:32.371[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.959 seconds (JVM running for 4.596)
[36m2024-05-31 16:20:51.766[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 16:22:51.830[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:22:51.829[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:22:51.829[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:22:51.829[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-2][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:22:53.079[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-2][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-05-31 16:22:53.079[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-2][m- Initializing Servlet 'dispatcherServlet'
[36m2024-05-31 16:22:53.081[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-2][m- Completed initialization in 2 ms
[36m2024-05-31 16:22:53.333[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-31 16:22:53.350[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:22:53.450[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-05-31 16:22:53.538[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-05-31 16:22:53.635[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-31 16:22:53.683[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:22:53.683[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:22:53.720[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:22:53.883[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:22:53.884[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:22:53.917[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:22:53.918[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:22:53.922[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:22:54.283[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:22:54.283[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:22:54.284[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:22:54.284[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:22:54.293[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:22:54.333[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:24:24.921[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:24:24.922[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:24:25.044[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:24:53.415[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:24:53.415[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:24:53.509[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:25:51.990[m [33m[WARN ][m [org.mariadb.jdbc.util.log.Slf4JLogger] [33m[pool-3-thread-1][m- Error: 1969-70100: Query execution was interrupted (max_statement_time exceeded)
[36m2024-05-31 16:25:51.992[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-1][m- 1. PreparedStatement.execute() select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

java.sql.SQLTimeoutException: (conn=1909) Query execution was interrupted (max_statement_time exceeded)
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:257) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:370) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.Result.readNext(Result.java:176) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.CompleteResult.<init>(CompleteResult.java:68) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:263) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:855) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:794) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:713) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:637) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:95) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:268) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$191aa30e.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:162) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:14) ~[classes/:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-31 16:25:52.010[m [33m[WARN ][m [com.zaxxer.hikari.pool.ProxyConnection] [33m[pool-3-thread-1][m- HikariPool-1 - Connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@b0fc089 marked as broken because of SQLSTATE(70100), ErrorCode(1969)
java.sql.SQLTimeoutException: (conn=1909) Query execution was interrupted (max_statement_time exceeded)
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:257) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:370) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.Result.readNext(Result.java:176) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.CompleteResult.<init>(CompleteResult.java:68) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:263) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:855) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:794) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:713) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:637) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:95) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:268) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$191aa30e.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:162) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:14) ~[classes/:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-31 16:25:52.023[m [33m[WARN ][m [org.mariadb.jdbc.util.log.Slf4JLogger] [33m[pool-3-thread-2][m- Error: 1969-70100: Query execution was interrupted (max_statement_time exceeded)
[36m2024-05-31 16:25:52.024[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-2][m- 3. PreparedStatement.execute() select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

java.sql.SQLTimeoutException: (conn=1911) Query execution was interrupted (max_statement_time exceeded)
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:257) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:370) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.Result.readNext(Result.java:176) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.CompleteResult.<init>(CompleteResult.java:68) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:263) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:855) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:794) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:713) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:637) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:95) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:268) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$191aa30e.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:174) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:14) ~[classes/:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-31 16:25:52.025[m [33m[WARN ][m [com.zaxxer.hikari.pool.ProxyConnection] [33m[pool-3-thread-2][m- HikariPool-1 - Connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@33c1501f marked as broken because of SQLSTATE(70100), ErrorCode(1969)
java.sql.SQLTimeoutException: (conn=1911) Query execution was interrupted (max_statement_time exceeded)
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:257) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:370) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.Result.readNext(Result.java:176) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.CompleteResult.<init>(CompleteResult.java:68) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:263) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:855) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:794) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:713) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:637) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:95) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:268) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$191aa30e.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:174) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:14) ~[classes/:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-31 16:25:54.448[m [33m[WARN ][m [org.mariadb.jdbc.util.log.Slf4JLogger] [33m[http-nio-9091-exec-7][m- Error: 1969-70100: Query execution was interrupted (max_statement_time exceeded)
[36m2024-05-31 16:25:54.449[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- 2. PreparedStatement.execute() select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

java.sql.SQLTimeoutException: (conn=1910) Query execution was interrupted (max_statement_time exceeded)
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:257) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:370) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.Result.readNext(Result.java:176) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.CompleteResult.<init>(CompleteResult.java:68) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:263) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:855) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:794) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:713) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:637) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:95) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:268) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$191aa30e.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl.getEnbTreeList(NwConfigServiceImpl.java:129) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl$$FastClassBySpringCGLIB$$12378b9c.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl$$EnhancerBySpringCGLIB$$207f1574.getEnbTreeList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController.getEnbTreeList(NwConfigController.java:55) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController$$FastClassBySpringCGLIB$$1d261ac4.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController$$EnhancerBySpringCGLIB$$121851c.getEnbTreeList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-31 16:25:54.453[m [33m[WARN ][m [com.zaxxer.hikari.pool.ProxyConnection] [33m[http-nio-9091-exec-7][m- HikariPool-1 - Connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@62843ccf marked as broken because of SQLSTATE(70100), ErrorCode(1969)
java.sql.SQLTimeoutException: (conn=1910) Query execution was interrupted (max_statement_time exceeded)
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:257) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:370) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.Result.readNext(Result.java:176) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.CompleteResult.<init>(CompleteResult.java:68) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:263) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:855) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:794) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:713) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:637) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:95) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:268) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$191aa30e.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl.getEnbTreeList(NwConfigServiceImpl.java:129) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl$$FastClassBySpringCGLIB$$12378b9c.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl$$EnhancerBySpringCGLIB$$207f1574.getEnbTreeList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController.getEnbTreeList(NwConfigController.java:55) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController$$FastClassBySpringCGLIB$$1d261ac4.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController$$EnhancerBySpringCGLIB$$121851c.getEnbTreeList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-31 16:25:54.468[m [31m[ERROR][m [com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler] [33m[http-nio-9091-exec-7][m- rsResultExcption : {}
com.mobigen.cdev.poc.core.exception.RsResultException: null
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController$$EnhancerBySpringCGLIB$$121851c.getEnbTreeList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: org.springframework.dao.QueryTimeoutException: 
### Error querying database.  Cause: java.sql.SQLTimeoutException: (conn=1910) Query execution was interrupted (max_statement_time exceeded)
### The error may exist in file [/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes/mybatis/mysql/module/nw/config_sqlMap.xml]
### The error may involve com.mobigen.cdev.mapper.mysql.module.nw.config.getEnbList-Inline
### The error occurred while setting parameters
### SQL: select             A.*         , case                 when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'                 else 'N'             end branch_first         , case                 when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'                 else 'N'             end branch_last         , case                 when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'                 else 'N'             end opteam_first         , case                 when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'                 else 'N'             end opteam_last         , case                 when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'                 else 'N'             end part_first         , case                 when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'                 else 'N'             end part_last         from         (                       select             A.branch_id         , B.branch_name         , A.opteam_id         , C.team_name opteam_name         , A.part_id         , D.part_name         , A.mtso_name         , E.mtso_id         , enb_id         , bts_name         ,   enb_id value         ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label         ,   case when ifnull(opteam_name, '-') = '-' then '미분류'                 else concat(opteam_name, ' (', opteam_id, ')')             end group_filter         ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description         from              CL_ENB  A             left outer join  CM_BRANCH  B             on A.branch_id = B.branch_id             left outer join  CM_TEAM  C             on A.opteam_id = C.team_id             left outer join  CM_PART  D             on A.part_id = D.part_id             left outer join  CB_MTSO  E             on A.mtso_name = E.mtso_name         where 1 = 1         and opr_status = 'ACT'               ) A         where 1 = 1         and branch_name is not null         and opteam_name is not null         and part_name is not null                     order by branch_id, opteam_id, part_id
### Cause: java.sql.SQLTimeoutException: (conn=1910) Query execution was interrupted (max_statement_time exceeded)
; (conn=1910) Query execution was interrupted (max_statement_time exceeded); nested exception is java.sql.SQLTimeoutException: (conn=1910) Query execution was interrupted (max_statement_time exceeded)
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:76) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$191aa30e.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl.getEnbTreeList(NwConfigServiceImpl.java:129) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl$$FastClassBySpringCGLIB$$12378b9c.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl$$EnhancerBySpringCGLIB$$207f1574.getEnbTreeList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController.getEnbTreeList(NwConfigController.java:55) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController$$FastClassBySpringCGLIB$$1d261ac4.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
Caused by: java.sql.SQLTimeoutException: (conn=1910) Query execution was interrupted (max_statement_time exceeded)
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:257) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:370) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.Result.readNext(Result.java:176) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.CompleteResult.<init>(CompleteResult.java:68) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:263) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:855) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:794) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:713) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:637) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:95) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:268) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$191aa30e.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl.getEnbTreeList(NwConfigServiceImpl.java:129) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl$$FastClassBySpringCGLIB$$12378b9c.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl$$EnhancerBySpringCGLIB$$207f1574.getEnbTreeList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController.getEnbTreeList(NwConfigController.java:55) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController$$FastClassBySpringCGLIB$$1d261ac4.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
[36m2024-05-31 16:26:13.228[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:26:13.228[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:26:13.275[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:26:14.007[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:26:14.008[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:26:14.008[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:26:14.009[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:26:14.075[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:26:14.076[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:26:25.630[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:26:25.631[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:26:25.701[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:26:26.437[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:26:26.437[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:26:26.437[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:26:26.437[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:26:26.501[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:26:26.503[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:27:00.102[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:27:00.103[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:27:00.119[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:27:13.733[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:27:13.733[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:27:13.734[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:27:13.734[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:27:13.753[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

                AND bts_name LIKE concat('%', '서초', '%')

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:27:13.756[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

                AND bts_name LIKE concat('%', '서초', '%')

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:28:48.255[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 34125 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 16:28:48.257[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 16:28:48.257[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 16:28:48.558[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 16:28:48.603[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 35 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 16:28:48.767[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 16:28:49.193[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 16:28:49.199[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:28:49.199[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 16:28:49.200[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 16:28:49.265[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 16:28:49.265[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 984 ms
[36m2024-05-31 16:28:49.372[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 16:28:49.410[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 16:28:49.518[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 16:28:49.658[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 16:28:49.959[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 16:28:49.985[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 16:28:50.347[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 16:28:50.353[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:28:50.944[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7ec729be, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f7da3a2, org.springframework.security.web.context.SecurityContextPersistenceFilter@464017f5, org.springframework.security.web.header.HeaderWriterFilter@481eb705, org.springframework.security.web.authentication.logout.LogoutFilter@18c95fbb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@397f9672, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@72e4ffa2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@24ea71d, org.springframework.security.web.session.SessionManagementFilter@3b48361e, org.springframework.security.web.access.ExceptionTranslationFilter@711261c7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1b62ad1e]
[36m2024-05-31 16:28:50.985[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 16:28:51.259[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:28:51.279[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 16:28:51.286[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.385 seconds (JVM running for 4.083)
[36m2024-05-31 16:29:23.376[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-05-31 16:29:23.376[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Initializing Servlet 'dispatcherServlet'
[36m2024-05-31 16:29:23.377[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Completed initialization in 1 ms
[36m2024-05-31 16:29:30.381[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-31 16:29:30.401[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:29:30.416[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-05-31 16:29:30.432[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-05-31 16:29:30.444[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-31 16:29:30.485[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:29:30.486[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:29:30.514[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:29:30.665[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:29:30.665[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:29:30.714[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:29:30.715[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:29:30.717[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:29:31.409[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:29:31.409[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:29:31.409[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:29:31.409[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:29:31.429[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:29:31.432[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:29:59.261[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:29:59.263[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:29:59.349[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:30:00.046[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:30:00.046[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:30:00.047[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:30:00.047[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:30:00.112[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:30:00.113[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:30:45.773[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:30:45.775[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:30:45.825[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:30:46.440[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:30:46.440[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:30:46.441[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:30:46.441[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:30:46.527[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:30:46.528[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:31:50.666[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:31:50.667[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:31:50.781[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:31:51.539[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:31:51.539[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:31:51.540[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:31:51.541[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:31:51.582[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:31:51.583[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:32:52.360[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:32:52.363[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:32:52.536[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:32:53.105[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:32:53.105[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:32:53.105[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:32:53.105[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:32:53.136[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:32:53.138[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:33:44.089[m [33m[WARN ][m [org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver] [33m[http-nio-9091-exec-3][m- Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
[36m2024-05-31 16:33:44.092[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:33:44.093[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:33:46.671[m [33m[WARN ][m [org.mariadb.jdbc.util.log.Slf4JLogger] [33m[http-nio-9091-exec-4][m- Error: 1969-70100: Query execution was interrupted (max_statement_time exceeded)
[36m2024-05-31 16:33:46.673[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- 4. PreparedStatement.execute() select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

java.sql.SQLTimeoutException: (conn=1926) Query execution was interrupted (max_statement_time exceeded)
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:257) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:370) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.Result.readNext(Result.java:176) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.CompleteResult.<init>(CompleteResult.java:68) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:263) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:855) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:794) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:713) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:637) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:95) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:268) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$3da1d70d.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl.getEnbTreeList(NwConfigServiceImpl.java:129) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl$$FastClassBySpringCGLIB$$12378b9c.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl$$EnhancerBySpringCGLIB$$68deb174.getEnbTreeList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController.getEnbTreeList(NwConfigController.java:55) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController$$FastClassBySpringCGLIB$$1d261ac4.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController$$EnhancerBySpringCGLIB$$d28e1c39.getEnbTreeList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-31 16:33:46.698[m [33m[WARN ][m [com.zaxxer.hikari.pool.ProxyConnection] [33m[http-nio-9091-exec-4][m- HikariPool-1 - Connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@67d0a12f marked as broken because of SQLSTATE(70100), ErrorCode(1969)
java.sql.SQLTimeoutException: (conn=1926) Query execution was interrupted (max_statement_time exceeded)
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:257) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:370) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.Result.readNext(Result.java:176) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.CompleteResult.<init>(CompleteResult.java:68) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:263) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:855) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:794) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:713) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:637) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:95) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:268) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$3da1d70d.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl.getEnbTreeList(NwConfigServiceImpl.java:129) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl$$FastClassBySpringCGLIB$$12378b9c.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl$$EnhancerBySpringCGLIB$$68deb174.getEnbTreeList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController.getEnbTreeList(NwConfigController.java:55) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController$$FastClassBySpringCGLIB$$1d261ac4.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController$$EnhancerBySpringCGLIB$$d28e1c39.getEnbTreeList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-31 16:33:46.767[m [31m[ERROR][m [com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler] [33m[http-nio-9091-exec-4][m- rsResultExcption : {}
com.mobigen.cdev.poc.core.exception.RsResultException: null
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController$$EnhancerBySpringCGLIB$$d28e1c39.getEnbTreeList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: org.springframework.dao.QueryTimeoutException: 
### Error querying database.  Cause: java.sql.SQLTimeoutException: (conn=1926) Query execution was interrupted (max_statement_time exceeded)
### The error may exist in file [/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes/mybatis/mysql/module/nw/config_sqlMap.xml]
### The error may involve com.mobigen.cdev.mapper.mysql.module.nw.config.getEnbList-Inline
### The error occurred while setting parameters
### SQL: select             A.*         , case                 when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'                 else 'N'             end branch_first         , case                 when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'                 else 'N'             end branch_last         , case                 when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'                 else 'N'             end opteam_first         , case                 when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'                 else 'N'             end opteam_last         , case                 when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'                 else 'N'             end part_first         , case                 when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'                 else 'N'             end part_last         from         (                       select             A.branch_id         , B.branch_name         , A.opteam_id         , C.team_name opteam_name         , A.part_id         , D.part_name         , A.mtso_name         , E.mtso_id         , enb_id         , bts_name         ,   enb_id value         ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label         ,   case when ifnull(opteam_name, '-') = '-' then '미분류'                 else concat(opteam_name, ' (', opteam_id, ')')             end group_filter         ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description         from              CL_ENB  A             left outer join  CM_BRANCH  B             on A.branch_id = B.branch_id             left outer join  CM_TEAM  C             on A.opteam_id = C.team_id             left outer join  CM_PART  D             on A.part_id = D.part_id             left outer join  CB_MTSO  E             on A.mtso_name = E.mtso_name         where 1 = 1         and opr_status = 'ACT'               ) A         where 1 = 1         and branch_name is not null         and opteam_name is not null         and part_name is not null                     order by branch_id, opteam_id, part_id
### Cause: java.sql.SQLTimeoutException: (conn=1926) Query execution was interrupted (max_statement_time exceeded)
; (conn=1926) Query execution was interrupted (max_statement_time exceeded); nested exception is java.sql.SQLTimeoutException: (conn=1926) Query execution was interrupted (max_statement_time exceeded)
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:76) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:79) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$3da1d70d.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl.getEnbTreeList(NwConfigServiceImpl.java:129) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl$$FastClassBySpringCGLIB$$12378b9c.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl$$EnhancerBySpringCGLIB$$68deb174.getEnbTreeList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController.getEnbTreeList(NwConfigController.java:55) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController$$FastClassBySpringCGLIB$$1d261ac4.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
Caused by: java.sql.SQLTimeoutException: (conn=1926) Query execution was interrupted (max_statement_time exceeded)
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:257) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:370) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.Result.readNext(Result.java:176) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.result.CompleteResult.<init>(CompleteResult.java:68) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:263) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:855) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:794) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:713) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:637) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:95) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:268) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$3da1d70d.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl.getEnbTreeList(NwConfigServiceImpl.java:129) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl$$FastClassBySpringCGLIB$$12378b9c.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.service.NwConfigServiceImpl$$EnhancerBySpringCGLIB$$68deb174.getEnbTreeList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController.getEnbTreeList(NwConfigController.java:55) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.controller.NwConfigController$$FastClassBySpringCGLIB$$1d261ac4.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
[36m2024-05-31 16:38:47.471[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:38:47.472[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:38:47.491[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:38:48.388[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:38:48.388[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:38:48.389[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:38:48.389[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:38:48.402[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:38:48.404[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:49:37.670[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:49:37.671[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 16:49:37.713[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 16:49:58.204[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 35876 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 16:49:58.206[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 16:49:58.207[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 16:49:58.528[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 16:49:58.569[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 35 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 16:49:58.750[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 16:49:59.195[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 16:49:59.202[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:49:59.202[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 16:49:59.203[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 16:49:59.282[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 16:49:59.283[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1044 ms
[36m2024-05-31 16:49:59.414[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 16:49:59.451[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 16:49:59.567[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 16:49:59.686[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 16:49:59.941[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 16:49:59.964[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 16:50:00.251[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 16:50:00.257[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:50:00.655[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-05-31 16:50:00.740[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:50:00.740[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:50:00.741[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-2][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:50:00.742[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:50:00.786[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@58829c2c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@64f1b2fb, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d5b549b, org.springframework.security.web.header.HeaderWriterFilter@193d73d3, org.springframework.security.web.authentication.logout.LogoutFilter@1b2e841, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@539f2fec, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a4e1ca7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c6553c6, org.springframework.security.web.session.SessionManagementFilter@123d666b, org.springframework.security.web.access.ExceptionTranslationFilter@397f9672, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@219ec4b6]
[36m2024-05-31 16:50:00.825[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 16:50:01.093[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:50:01.110[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 16:50:01.116[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.268 seconds (JVM running for 3.898)
[36m2024-05-31 16:50:08.398[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:50:08.399[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 16:50:08.793[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- 2. PreparedStatement.execute() select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

java.sql.SQLNonTransientConnectionException: (conn=1935) Socket error
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:293) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:359) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:878) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:794) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:713) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:637) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:95) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:268) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$a008be04.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:162) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:14) ~[classes/:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: java.io.EOFException: unexpected end of stream, read 0 bytes from 4 (socket was closed by server)
	at org.mariadb.jdbc.client.socket.impl.PacketReader.readReusablePacket(PacketReader.java:68) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:115) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:855) ~[mariadb-java-client-3.1.0.jar:?]
	... 42 more
[36m2024-05-31 16:50:08.806[m [33m[WARN ][m [com.zaxxer.hikari.pool.ProxyConnection] [33m[pool-2-thread-1][m- HikariPool-1 - Connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@60c60e59 marked as broken because of SQLSTATE(08000), ErrorCode(-1)
java.sql.SQLNonTransientConnectionException: (conn=1935) Socket error
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:293) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:359) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:878) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:794) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:713) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:637) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:95) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:268) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$a008be04.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:162) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:14) ~[classes/:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: java.io.EOFException: unexpected end of stream, read 0 bytes from 4 (socket was closed by server)
	at org.mariadb.jdbc.client.socket.impl.PacketReader.readReusablePacket(PacketReader.java:68) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:115) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:855) ~[mariadb-java-client-3.1.0.jar:?]
	... 42 more
[36m2024-05-31 16:50:08.839[m [33m[WARN ][m [org.springframework.jdbc.support.SQLErrorCodesFactory] [33m[pool-2-thread-1][m- Error while extracting database name
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: HikariDataSource HikariDataSource (HikariPool-1) has been closed.
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:363) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.SQLErrorCodesFactory.resolveErrorCodes(SQLErrorCodesFactory.java:235) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.lambda$setDataSource$0(SQLErrorCodeSQLExceptionTranslator.java:140) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.util.function.SingletonSupplier.get(SingletonSupplier.java:97) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.setDataSource(SQLErrorCodeSQLExceptionTranslator.java:141) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.<init>(SQLErrorCodeSQLExceptionTranslator.java:102) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.MyBatisExceptionTranslator.lambda$new$0(MyBatisExceptionTranslator.java:55) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.MyBatisExceptionTranslator.initExceptionTranslator(MyBatisExceptionTranslator.java:107) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:89) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$a008be04.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:162) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:14) ~[classes/:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: HikariDataSource HikariDataSource (HikariPool-1) has been closed.
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:83) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:337) ~[spring-jdbc-5.3.26.jar:5.3.26]
	... 28 more
Caused by: java.sql.SQLException: HikariDataSource HikariDataSource (HikariPool-1) has been closed.
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:96) ~[HikariCP-4.0.3.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:337) ~[spring-jdbc-5.3.26.jar:5.3.26]
	... 28 more
[36m2024-05-31 16:50:08.840[m [33m[WARN ][m [org.springframework.jdbc.support.SQLErrorCodesFactory] [33m[pool-2-thread-1][m- Error while extracting database name
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: HikariDataSource HikariDataSource (HikariPool-1) has been closed.
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:363) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.SQLErrorCodesFactory.resolveErrorCodes(SQLErrorCodesFactory.java:235) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.lambda$setDataSource$0(SQLErrorCodeSQLExceptionTranslator.java:140) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.util.function.SingletonSupplier.get(SingletonSupplier.java:97) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.util.function.SupplierUtils.resolve(SupplierUtils.java:40) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.getSqlErrorCodes(SQLErrorCodeSQLExceptionTranslator.java:171) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:193) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$a008be04.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:162) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:14) ~[classes/:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: HikariDataSource HikariDataSource (HikariPool-1) has been closed.
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:83) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:337) ~[spring-jdbc-5.3.26.jar:5.3.26]
	... 28 more
Caused by: java.sql.SQLException: HikariDataSource HikariDataSource (HikariPool-1) has been closed.
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:96) ~[HikariCP-4.0.3.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:337) ~[spring-jdbc-5.3.26.jar:5.3.26]
	... 28 more
[36m2024-05-31 16:50:08.939[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-2][m- 1. PreparedStatement.execute() select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

java.sql.SQLNonTransientConnectionException: (conn=1934) Socket error
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:293) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:359) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:878) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:794) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:713) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:637) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:95) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:268) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$a008be04.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:174) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:14) ~[classes/:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: java.io.EOFException: unexpected end of stream, read 0 bytes from 4 (socket was closed by server)
	at org.mariadb.jdbc.client.socket.impl.PacketReader.readReusablePacket(PacketReader.java:68) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:115) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:855) ~[mariadb-java-client-3.1.0.jar:?]
	... 42 more
[36m2024-05-31 16:50:08.940[m [33m[WARN ][m [com.zaxxer.hikari.pool.ProxyConnection] [33m[pool-2-thread-2][m- HikariPool-1 - Connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@42052942 marked as broken because of SQLSTATE(08000), ErrorCode(-1)
java.sql.SQLNonTransientConnectionException: (conn=1934) Socket error
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:293) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:359) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:878) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:794) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:713) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:637) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:95) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:268) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-4.0.3.jar:?]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$a008be04.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:174) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:14) ~[classes/:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: java.io.EOFException: unexpected end of stream, read 0 bytes from 4 (socket was closed by server)
	at org.mariadb.jdbc.client.socket.impl.PacketReader.readReusablePacket(PacketReader.java:68) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:115) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:855) ~[mariadb-java-client-3.1.0.jar:?]
	... 42 more
[36m2024-05-31 16:50:08.941[m [33m[WARN ][m [org.springframework.jdbc.support.SQLErrorCodesFactory] [33m[pool-2-thread-2][m- Error while extracting database name
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: HikariDataSource HikariDataSource (HikariPool-1) has been closed.
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:363) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.SQLErrorCodesFactory.resolveErrorCodes(SQLErrorCodesFactory.java:235) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.lambda$setDataSource$0(SQLErrorCodeSQLExceptionTranslator.java:140) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.util.function.SingletonSupplier.get(SingletonSupplier.java:97) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.util.function.SupplierUtils.resolve(SupplierUtils.java:40) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.getSqlErrorCodes(SQLErrorCodeSQLExceptionTranslator.java:171) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:193) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl.getEnbList(NwConfigRepositoryImpl.java:30) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$FastClassBySpringCGLIB$$16341bbf.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.nw.repository.mybatis.NwConfigRepositoryImpl$$EnhancerBySpringCGLIB$$a008be04.getEnbList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:174) ~[classes/:?]
	at com.mobigen.cdev.poc.module.nw.thread.NwEquipNodesThread.call(NwEquipNodesThread.java:14) ~[classes/:?]
	at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLException: HikariDataSource HikariDataSource (HikariPool-1) has been closed.
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:83) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:337) ~[spring-jdbc-5.3.26.jar:5.3.26]
	... 28 more
Caused by: java.sql.SQLException: HikariDataSource HikariDataSource (HikariPool-1) has been closed.
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:96) ~[HikariCP-4.0.3.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:337) ~[spring-jdbc-5.3.26.jar:5.3.26]
	... 28 more
[36m2024-05-31 16:50:08.942[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 16:51:10.883[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 36019 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 16:51:10.886[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 16:51:10.887[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 16:51:11.172[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 16:51:11.211[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 34 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 16:51:11.374[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 16:51:11.830[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 16:51:11.836[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:51:11.836[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 16:51:11.836[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 16:51:11.899[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 16:51:11.899[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 989 ms
[36m2024-05-31 16:51:11.999[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 16:51:12.029[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 16:51:12.148[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 16:51:12.261[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 16:51:12.393[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 16:51:12.414[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 16:51:12.732[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 16:51:12.739[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 16:51:13.191[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-05-31 16:51:13.270[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:51:13.288[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:51:13.289[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-2][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:51:13.290[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:51:13.333[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@219ec4b6, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@cdc09d, org.springframework.security.web.context.SecurityContextPersistenceFilter@4c231f62, org.springframework.security.web.header.HeaderWriterFilter@3b48361e, org.springframework.security.web.authentication.logout.LogoutFilter@280e4390, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7bfedfb7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6d3194ff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@31c29db1, org.springframework.security.web.session.SessionManagementFilter@2220c5f7, org.springframework.security.web.access.ExceptionTranslationFilter@18fcfe7e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@31c800a5]
[36m2024-05-31 16:51:13.376[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 16:51:13.664[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 16:51:13.682[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 16:51:13.689[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.17 seconds (JVM running for 3.763)
[36m2024-05-31 16:53:32.921[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- Result Equips : OK!!!
[36m2024-05-31 16:53:32.922[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 16:53:40.588[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-05-31 16:53:40.588[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Initializing Servlet 'dispatcherServlet'
[36m2024-05-31 16:53:40.590[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Completed initialization in 1 ms
[36m2024-05-31 16:53:46.402[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-31 16:53:46.412[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:53:46.424[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-05-31 16:53:46.435[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-05-31 16:53:46.450[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-31 16:53:46.492[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:53:46.492[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:53:46.522[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:53:46.665[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:53:46.665[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:53:46.712[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:53:46.713[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:53:46.715[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:53:47.375[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:53:47.376[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:53:47.376[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:53:47.376[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:53:47.433[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:53:58.798[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:53:58.799[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:53:58.820[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 16:54:05.341[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:54:05.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:54:05.382[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:54:06.213[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:54:06.213[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:54:06.213[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:54:06.213[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:54:06.231[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:54:51.409[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-31 16:54:51.420[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:54:51.488[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-05-31 16:54:51.499[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-05-31 16:54:51.510[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-31 16:54:51.557[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:54:51.558[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:54:51.560[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:54:51.743[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:54:51.743[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:54:51.777[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:54:51.777[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:54:51.779[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:54:52.098[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:54:52.098[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:54:52.099[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:54:52.099[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:54:52.101[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:55:32.927[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 16:55:52.592[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-31 16:55:52.601[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:55:52.611[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-05-31 16:55:52.620[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-05-31 16:55:52.629[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-31 16:55:52.663[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:55:52.664[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:55:52.674[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:55:52.812[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:55:52.812[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:55:52.929[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:55:52.930[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:55:52.930[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:55:52.930[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:55:52.930[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:55:52.930[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:55:52.931[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:55:52.932[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:57:22.672[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:57:22.673[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:57:22.696[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:57:24.461[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:57:24.462[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:57:24.481[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:57:27.898[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:57:27.898[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:57:27.912[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:57:28.912[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:57:28.913[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:57:28.923[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:57:30.384[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:57:30.384[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:57:30.422[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:57:30.893[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:57:30.893[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:57:30.895[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:57:32.263[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:57:32.263[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:57:32.279[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:57:32.761[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:57:32.761[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:57:32.805[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 16:57:32.932[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 16:59:02.548[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:59:02.549[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:59:02.569[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 16:59:12.488[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-31 16:59:12.488[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 16:59:12.536[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM
                PM_EPC_ROOT_CAUSE_1M A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240531165400', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0042' , '0044' , '0047' , '0049' , '0014' , '0060' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.MCC = 'ALL'
            AND A.MNC = 'ALL'
            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-05-31 16:59:12.587[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- tmpCallTypeList [0], ATTACH
[36m2024-05-31 16:59:12.589[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(SUM(ATTEMPT_CNT), 0) ATTEMPT_CNT
        ,	IFNULL(SUM(SUCCESS_CNT), 0) SUCCESS_CNT
        ,	CASE IFNULL(SUM(ATTEMPT_CNT), 0) WHEN 0 THEN '0' ELSE ROUND((SUM(SUCCESS_CNT) / SUM(ATTEMPT_CNT)) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT) != 0 AND SUM(DROP_CNT) != 0 THEN ROUND(((SUM(DROP_CNT) / (SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT))) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(SUM(DATA_ATTEMPT_CNT), 0) DATA_ATTEMPT_CNT
        , 	IFNULL(SUM(DATA_SUCCESS_CNT), 0) DATA_SUCCESS_CNT
        , 	CASE WHEN SUM(DATA_ATTEMPT_CNT) != 0 AND SUM(DATA_SUCCESS_CNT) != 0 THEN ROUND(((SUM(DATA_SUCCESS_CNT) / SUM(DATA_ATTEMPT_CNT)) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(SUM(IMS_ATTEMPT_CNT), 0) IMS_ATTEMPT_CNT
        ,	IFNULL(SUM(IMS_SUCCESS_CNT), 0) IMS_SUCCESS_CNT
        , 	CASE WHEN SUM(IMS_ATTEMPT_CNT) != 0 AND SUM(IMS_SUCCESS_CNT) != 0 THEN ROUND(((SUM(IMS_SUCCESS_CNT) / SUM(IMS_ATTEMPT_CNT)) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(SUM(DETACH_CNT), 0) DETACH_CNT

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN NVL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240531165400', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0042' , '0044' , '0047' , '0049' , '0014' , '0060' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 
        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-05-31 16:59:32.939[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:01:32.941[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:01:46.539[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:01:46.540[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:01:46.554[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 17:01:52.861[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:01:52.862[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:01:52.880[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM
                PM_EPC_ROOT_CAUSE_1M A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112400', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0016' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.MCC = 'ALL'
            AND A.MNC = 'ALL'
            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-05-31 17:01:52.913[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- tmpCallTypeList [0], ATTACH
[36m2024-05-31 17:01:52.925[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(SUM(ATTEMPT_CNT), 0) ATTEMPT_CNT
        ,	IFNULL(SUM(SUCCESS_CNT), 0) SUCCESS_CNT
        ,	CASE IFNULL(SUM(ATTEMPT_CNT), 0) WHEN 0 THEN '0' ELSE ROUND((SUM(SUCCESS_CNT) / SUM(ATTEMPT_CNT)) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT) != 0 AND SUM(DROP_CNT) != 0 THEN ROUND(((SUM(DROP_CNT) / (SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT))) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(SUM(DATA_ATTEMPT_CNT), 0) DATA_ATTEMPT_CNT
        , 	IFNULL(SUM(DATA_SUCCESS_CNT), 0) DATA_SUCCESS_CNT
        , 	CASE WHEN SUM(DATA_ATTEMPT_CNT) != 0 AND SUM(DATA_SUCCESS_CNT) != 0 THEN ROUND(((SUM(DATA_SUCCESS_CNT) / SUM(DATA_ATTEMPT_CNT)) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(SUM(IMS_ATTEMPT_CNT), 0) IMS_ATTEMPT_CNT
        ,	IFNULL(SUM(IMS_SUCCESS_CNT), 0) IMS_SUCCESS_CNT
        , 	CASE WHEN SUM(IMS_ATTEMPT_CNT) != 0 AND SUM(IMS_SUCCESS_CNT) != 0 THEN ROUND(((SUM(IMS_SUCCESS_CNT) / SUM(IMS_ATTEMPT_CNT)) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(SUM(DETACH_CNT), 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000031' THEN CAUSE_CNT ELSE 0 END) CD_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000094' THEN CAUSE_CNT ELSE 0 END) CD_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'ISUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) ISUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000078' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000078
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000093' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000093
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000103' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000103
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000024' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000024
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000201' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000201

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN NVL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112400', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0016' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 
        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-05-31 17:02:02.807[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:02:02.808[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:02:02.812[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- before set Executor
[36m2024-05-31 17:02:02.813[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- before Loop sArr
[36m2024-05-31 17:02:02.814[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- before Future
[36m2024-05-31 17:02:02.872[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:02.873[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:02.873[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:02.873[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:02.875[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:03.204[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- IMSI : OK
[36m2024-05-31 17:02:03.204[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- ENB : OK
[36m2024-05-31 17:02:03.205[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- MME : OK
[36m2024-05-31 17:02:03.205[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- SGW : OK
[36m2024-05-31 17:02:03.206[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-3][m- PGW : OK
[36m2024-05-31 17:02:09.033[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:02:09.033[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:02:09.036[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before set Executor
[36m2024-05-31 17:02:09.036[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before Loop sArr
[36m2024-05-31 17:02:09.037[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before Future
[36m2024-05-31 17:02:09.092[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'dropcnt'
            AND FAIL_TYPE = ''
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:09.092[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'dropcnt'
            AND FAIL_TYPE = ''
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:09.093[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'dropcnt'
            AND FAIL_TYPE = ''
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:09.093[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'dropcnt'
            AND FAIL_TYPE = ''
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:09.095[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'dropcnt'
            AND FAIL_TYPE = ''
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:09.593[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- IMSI : OK
[36m2024-05-31 17:02:09.594[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- ENB : OK
[36m2024-05-31 17:02:09.594[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- MME : OK
[36m2024-05-31 17:02:09.595[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- SGW : OK
[36m2024-05-31 17:02:09.595[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- PGW : OK
[36m2024-05-31 17:02:12.541[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:02:12.541[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:02:12.543[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before set Executor
[36m2024-05-31 17:02:12.543[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before Loop sArr
[36m2024-05-31 17:02:12.544[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before Future
[36m2024-05-31 17:02:12.627[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:12.632[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:12.632[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:12.632[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:12.632[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-5-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:12.777[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- IMSI : OK
[36m2024-05-31 17:02:12.778[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- ENB : OK
[36m2024-05-31 17:02:12.796[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- MME : OK
[36m2024-05-31 17:02:12.796[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- SGW : OK
[36m2024-05-31 17:02:12.796[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- PGW : OK
[36m2024-05-31 17:02:56.239[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:02:56.240[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:02:56.242[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before set Executor
[36m2024-05-31 17:02:56.242[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before Loop sArr
[36m2024-05-31 17:02:56.244[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- before Future
[36m2024-05-31 17:02:56.297[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_00000901'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:56.297[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_00000901'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:56.298[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_00000901'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:56.298[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_00000901'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:56.299[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-6-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_00000901'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:02:56.429[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- IMSI : OK
[36m2024-05-31 17:02:56.477[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- ENB : OK
[36m2024-05-31 17:02:56.478[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- MME : OK
[36m2024-05-31 17:02:56.478[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- SGW : OK
[36m2024-05-31 17:02:56.478[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- PGW : OK
[36m2024-05-31 17:03:01.165[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:03:01.166[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:03:01.168[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- before set Executor
[36m2024-05-31 17:03:01.168[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- before Loop sArr
[36m2024-05-31 17:03:01.169[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- before Future
[36m2024-05-31 17:03:01.227[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-7-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:03:01.229[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-7-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:03:01.229[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-7-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:03:01.229[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-7-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:03:01.230[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-7-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:03:01.332[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- IMSI : OK
[36m2024-05-31 17:03:01.344[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- ENB : OK
[36m2024-05-31 17:03:01.346[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- MME : OK
[36m2024-05-31 17:03:01.346[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- SGW : OK
[36m2024-05-31 17:03:01.347[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- PGW : OK
[36m2024-05-31 17:03:13.704[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:03:13.705[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:03:13.708[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- before set Executor
[36m2024-05-31 17:03:13.708[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- before Loop sArr
[36m2024-05-31 17:03:13.709[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- before Future
[36m2024-05-31 17:03:13.761[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-8-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:03:13.761[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-8-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:03:13.761[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-8-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:03:13.762[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-8-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:03:13.762[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-8-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:03:13.879[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- IMSI : OK
[36m2024-05-31 17:03:13.880[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- ENB : OK
[36m2024-05-31 17:03:13.880[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- MME : OK
[36m2024-05-31 17:03:13.886[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- SGW : OK
[36m2024-05-31 17:03:13.887[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-10][m- PGW : OK
[36m2024-05-31 17:03:32.946[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:05:32.950[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:05:35.613[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-31 17:05:35.635[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 17:05:35.649[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-05-31 17:05:35.659[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-05-31 17:05:35.669[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-31 17:05:35.870[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:05:35.871[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:05:35.900[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 17:05:36.073[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:05:36.073[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:05:36.249[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:05:36.249[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:05:36.249[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:05:36.249[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:05:36.249[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:05:36.249[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:05:36.250[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 17:05:36.250[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 17:07:32.956[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:07:55.854[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-31 17:07:55.865[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 17:07:55.876[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-05-31 17:07:55.886[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-05-31 17:07:55.897[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-31 17:07:55.935[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:07:55.936[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:07:55.938[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 17:07:56.082[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:07:56.082[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:07:56.113[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:07:56.113[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:07:56.114[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 17:07:56.462[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:07:56.462[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:07:56.462[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:07:56.462[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:07:56.472[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 17:08:24.433[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:08:24.434[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:08:24.450[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 17:08:32.714[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:08:32.715[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:08:32.735[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM
                PM_EPC_ROOT_CAUSE_1M A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0016' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.MCC = 'ALL'
            AND A.MNC = 'ALL'
            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-05-31 17:08:32.760[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-7][m- tmpCallTypeList [0], ATTACH
[36m2024-05-31 17:08:32.764[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(SUM(ATTEMPT_CNT), 0) ATTEMPT_CNT
        ,	IFNULL(SUM(SUCCESS_CNT), 0) SUCCESS_CNT
        ,	CASE IFNULL(SUM(ATTEMPT_CNT), 0) WHEN 0 THEN '0' ELSE ROUND((SUM(SUCCESS_CNT) / SUM(ATTEMPT_CNT)) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT) != 0 AND SUM(DROP_CNT) != 0 THEN ROUND(((SUM(DROP_CNT) / (SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT))) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(SUM(DATA_ATTEMPT_CNT), 0) DATA_ATTEMPT_CNT
        , 	IFNULL(SUM(DATA_SUCCESS_CNT), 0) DATA_SUCCESS_CNT
        , 	CASE WHEN SUM(DATA_ATTEMPT_CNT) != 0 AND SUM(DATA_SUCCESS_CNT) != 0 THEN ROUND(((SUM(DATA_SUCCESS_CNT) / SUM(DATA_ATTEMPT_CNT)) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(SUM(IMS_ATTEMPT_CNT), 0) IMS_ATTEMPT_CNT
        ,	IFNULL(SUM(IMS_SUCCESS_CNT), 0) IMS_SUCCESS_CNT
        , 	CASE WHEN SUM(IMS_ATTEMPT_CNT) != 0 AND SUM(IMS_SUCCESS_CNT) != 0 THEN ROUND(((SUM(IMS_SUCCESS_CNT) / SUM(IMS_ATTEMPT_CNT)) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(SUM(DETACH_CNT), 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN NVL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0016' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 
        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-05-31 17:08:37.770[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:08:37.770[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:08:37.773[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before set Executor
[36m2024-05-31 17:08:37.773[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before Loop sArr
[36m2024-05-31 17:08:37.774[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- before Future
[36m2024-05-31 17:08:37.829[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-9-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:08:37.830[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-9-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:08:37.829[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-9-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:08:37.830[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-9-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:08:37.831[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-9-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000504'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:08:37.938[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- IMSI : OK
[36m2024-05-31 17:08:37.948[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- ENB : OK
[36m2024-05-31 17:08:37.948[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- MME : OK
[36m2024-05-31 17:08:37.948[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- SGW : OK
[36m2024-05-31 17:08:37.948[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-6][m- PGW : OK
[36m2024-05-31 17:09:32.961[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:11:32.969[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:13:32.972[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:15:05.954[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:15:05.955[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:15:05.957[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- before set Executor
[36m2024-05-31 17:15:05.957[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- before Loop sArr
[36m2024-05-31 17:15:05.958[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- before Future
[36m2024-05-31 17:15:06.016[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-10-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:15:06.017[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-10-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:15:06.017[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-10-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:15:06.018[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-10-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:15:06.018[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-10-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000126'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240520130000', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:15:06.142[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- IMSI : OK
[36m2024-05-31 17:15:06.143[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- ENB : OK
[36m2024-05-31 17:15:06.144[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- MME : OK
[36m2024-05-31 17:15:06.145[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- SGW : OK
[36m2024-05-31 17:15:06.146[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-8][m- PGW : OK
[36m2024-05-31 17:15:08.304[m [33m[WARN ][m [org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver] [33m[http-nio-9091-exec-10][m- Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
[36m2024-05-31 17:15:08.305[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:15:08.306[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:15:32.979[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:15:48.282[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 17:15:48.283[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 17:15:48.325[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-31 17:16:00.871[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 37571 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-31 17:16:00.874[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-31 17:16:00.874[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-31 17:16:01.265[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-31 17:16:01.308[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 36 ms. Found 1 JPA repository interfaces.
[36m2024-05-31 17:16:01.539[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-31 17:16:02.044[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-31 17:16:02.052[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 17:16:02.052[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-31 17:16:02.052[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-31 17:16:02.162[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-31 17:16:02.162[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1255 ms
[36m2024-05-31 17:16:02.314[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-31 17:16:02.375[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-31 17:16:02.516[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-31 17:16:02.671[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-31 17:16:03.030[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-31 17:16:03.063[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-31 17:16:03.413[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-31 17:16:03.419[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 17:16:04.016[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 0
[36m2024-05-31 17:16:04.146[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 17:16:04.147[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-2][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 17:16:04.147[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-1][m- select
            A.*
        ,	case
                when ifnull(LAG(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end branch_first
        ,	case
                when ifnull(LEAD(A.branch_id, 1) over (partition by A.branch_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end branch_last
        ,	case
                when ifnull(LAG(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end opteam_first
        ,	case
                when ifnull(LEAD(A.opteam_id, 1) over (partition by A.opteam_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end opteam_last
        ,	case
                when ifnull(LAG(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'F') = 'F' then 'Y'
                else 'N'
            end part_first
        ,	case
                when ifnull(LEAD(A.part_id, 1) over (partition by A.part_id order by A.branch_id, opteam_id, part_id), 'L') = 'L' then 'Y'
                else 'N'
            end part_last
        from
        (

        select
            A.branch_id
        ,	B.branch_name
        ,	A.opteam_id
        ,	C.team_name opteam_name
        ,	A.part_id
        ,	D.part_name
        ,	A.mtso_name
        ,	E.mtso_id
        ,	enb_id
        ,	bts_name
        ,   enb_id value
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') label
        ,   case when ifnull(opteam_name, '-') = '-' then '미분류'
                else concat(opteam_name, ' (', opteam_id, ')')
            end group_filter
        ,   concat(ifnull(bts_name, '-'), ' (', enb_id, ')') description
        from
             CL_ENB  A
            left outer join  CM_BRANCH  B
            on A.branch_id = B.branch_id
            left outer join  CM_TEAM  C
            on A.opteam_id = C.team_id
            left outer join  CM_PART  D
            on A.part_id = D.part_id
            left outer join  CB_MTSO  E
            on A.mtso_name = E.mtso_name
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1
        and branch_name is not null
        and opteam_name is not null
        and part_name is not null

        order by branch_id, opteam_id, part_id

[36m2024-05-31 17:16:04.147[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-2-thread-4][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 17:16:04.199[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@590ab84, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@8a8cab8, org.springframework.security.web.context.SecurityContextPersistenceFilter@94b5fe3, org.springframework.security.web.header.HeaderWriterFilter@1b2e841, org.springframework.security.web.authentication.logout.LogoutFilter@7894a250, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3811464b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5f0a5848, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d48299e, org.springframework.security.web.session.SessionManagementFilter@4e00723b, org.springframework.security.web.access.ExceptionTranslationFilter@1fd4850b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@51a73873]
[36m2024-05-31 17:16:04.263[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-31 17:16:04.671[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-31 17:16:04.701[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-31 17:16:04.711[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 4.226 seconds (JVM running for 4.811)
[36m2024-05-31 17:18:22.970[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- Result Equips : OK!!!
[36m2024-05-31 17:18:22.971[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:20:11.114[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-2][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-05-31 17:20:11.115[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-2][m- Initializing Servlet 'dispatcherServlet'
[36m2024-05-31 17:20:11.117[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-2][m- Completed initialization in 1 ms
[36m2024-05-31 17:20:14.457[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 CM_USER 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'ADMIN'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-31 17:20:14.466[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 17:20:14.480[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from
			 CM_USER  A
			left outer join  CM_USER_ROLE  B
			on A.user_id = B.user_id
			left outer join  CM_ROLE  C
			on B.role_id  = C.role_id
		where A.user_id  = 'ADMIN'

[36m2024-05-31 17:20:14.516[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE

                (select config_value from  CM_MAIN_CONFIG  where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM
                                                 CM_SMS_AUTHONTICATION 
                                            WHERE user_id = 'ADMIN'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM
             CM_EXCEPTION_SMS_AUTH 
        WHERE 1 = 1
        AND user_id  = 'ADMIN'
        AND use_yn = 'Y'

[36m2024-05-31 17:20:14.523[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-31 17:20:14.562[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:20:14.562[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:20:14.598[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 17:20:14.740[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:20:14.740[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:20:14.790[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:20:14.790[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:20:14.791[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				 CM_MENU  A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						 CM_MODULE  A
						left outer join
						 CM_MENU_MODULE  B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					 CM_USER  A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							 CM_ROLE  A
							left outer join
							 CM_USER_ROLE  B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and A.use_yn = 'Y'
					and A.user_id = 'ADMIN'
				) A
				left outer join
				 CM_ROLE_MODULE  B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-31 17:20:15.475[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:20:15.475[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:20:15.477[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:20:15.477[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:20:15.528[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 17:20:22.974[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:20:25.451[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:20:25.451[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:20:25.469[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

        order by mtso_id, node_id

[36m2024-05-31 17:20:51.913[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:20:51.915[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:20:52.049[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
            *
        from
        (

        select
            A.mtso_id
        ,	B.mtso_name
        ,	case
                when ifnull(LAG(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'F') = 'F' then 'Y'
                else 'N'
            end mtso_first
        ,	case
                when ifnull(LEAD(A.mtso_id, 1) over (partition by A.mtso_id order by A.mtso_id, mme_id), 'L') = 'L' then 'Y'
                else 'N'
            end mtso_last
        ,   'MME' node_type
        ,	A.mme_id node_id
        ,	concat('MME#', lpad(cast(mme_id as integer), 2, '0')) node_exp_id
        ,	A.mme_name node_name
        ,   A.mme_id value
        ,   concat('MME#', lpad(cast(mme_id as integer), 2, '0')) label
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')') group_filter
        ,   concat(B.mtso_name, ' (', A.mtso_id, ')', ' - MME#', lpad(cast(mme_id as integer), 2, '0')) description
        from
             CL_MME  A
            left outer join  CB_MTSO  B
            on A.mtso_id = B.mtso_id
        where 1 = 1
        and opr_status = 'ACT'

        ) A
        where 1 = 1

                AND node_exp_id LIKE concat('%', '16', '%')

        order by mtso_id, node_id

[36m2024-05-31 17:21:14.287[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:21:14.287[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:21:14.320[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CAUSE
        ,	CASE WHEN IFNULL(DESCRIPTION, '0') = '0' THEN CAUSE ELSE DESCRIPTION END DESCRIPTION
        FROM
        (
            SELECT
                A.FAIL_TYPE
            ,	CONCAT(A.FAIL_TYPE, '_', A.CAUSE) CAUSE
            ,	CONCAT(IFNULL(B.DESCRIPTION, '-'), '|'
                , 	CASE
                        WHEN IFNULL(CAUSE_TYPE, '') = 'EMM' THEN 'EMM_'
                        WHEN IFNULL(CAUSE_TYPE, '') = 'ESM' THEN 'ESM_' ELSE ''
                    END
                ,	CASE
                        WHEN A.DESCRIPTION =  '0' THEN  A.CAUSE
                        ELSE  REPLACE(REPLACE(A.DESCRIPTION, 'EMM_', ''), 'ESM_', '')
                    END
                ) DESCRIPTION
            ,	CAUSE_CNT
            FROM
                PM_EPC_ROOT_CAUSE_1M A
                LEFT OUTER JOIN
                CU_CAUSE_FAIL_TYPE B
                ON A.FAIL_TYPE = B.FAIL_TYPE
            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0016' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 

            AND A.MCC = 'ALL'
            AND A.MNC = 'ALL'
            AND A.CAUSE_CNT > 0
        ) A
        GROUP BY
        FAIL_TYPE, CAUSE, DESCRIPTION
        ORDER BY
        FAIL_TYPE, SUM(CAUSE_CNT) DESC

[36m2024-05-31 17:21:14.341[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-1][m- tmpCallTypeList [0], ATTACH
[36m2024-05-31 17:21:14.344[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
                DATE_FORMAT(EVENT_TIME, '%Y%m%d%H%i%s') EVENT_TIME
            ,	DATE_FORMAT(EVENT_TIME, '%Y-%m-%d %H:%i:%s') EVENT_EXP_TIME
            , 	NODE1_TYPE, NODE1_ID, NODE1_NAME, NODE1_EXP_ID
            ,	NODE2_TYPE, NODE2_ID, NODE2_NAME, NODE2_EXP_ID
            ,   CALL_TYPE

        ,	IFNULL(SUM(ATTEMPT_CNT), 0) ATTEMPT_CNT
        ,	IFNULL(SUM(SUCCESS_CNT), 0) SUCCESS_CNT
        ,	CASE IFNULL(SUM(ATTEMPT_CNT), 0) WHEN 0 THEN '0' ELSE ROUND((SUM(SUCCESS_CNT) / SUM(ATTEMPT_CNT)) * 100, 2) END SUCCESS_RATE
        ,	IFNULL(DROP_CNT, 0) DROP_CNT
        ,	CASE WHEN SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT) != 0 AND SUM(DROP_CNT) != 0 THEN ROUND(((SUM(DROP_CNT) / (SUM(DATA_SUCCESS_CNT) + SUM(IMS_SUCCESS_CNT))) * 100), 2) ELSE 0 END DROP_RATE
        , 	IFNULL(SUM(DATA_ATTEMPT_CNT), 0) DATA_ATTEMPT_CNT
        , 	IFNULL(SUM(DATA_SUCCESS_CNT), 0) DATA_SUCCESS_CNT
        , 	CASE WHEN SUM(DATA_ATTEMPT_CNT) != 0 AND SUM(DATA_SUCCESS_CNT) != 0 THEN ROUND(((SUM(DATA_SUCCESS_CNT) / SUM(DATA_ATTEMPT_CNT)) * 100), 2) ELSE 0 END DATA_SUCCESS_RATE
        ,	IFNULL(SUM(IMS_ATTEMPT_CNT), 0) IMS_ATTEMPT_CNT
        ,	IFNULL(SUM(IMS_SUCCESS_CNT), 0) IMS_SUCCESS_CNT
        , 	CASE WHEN SUM(IMS_ATTEMPT_CNT) != 0 AND SUM(IMS_SUCCESS_CNT) != 0 THEN ROUND(((SUM(IMS_SUCCESS_CNT) / SUM(IMS_ATTEMPT_CNT)) * 100), 2) ELSE 0 END IMS_SUCCESS_RATE

        ,	IFNULL(SUM(DETACH_CNT), 0) DETACH_CNT

            ,      
                    SUM(CASE WHEN CAUSE = 'CD_C_00000901' THEN CAUSE_CNT ELSE 0 END) CD_C_00000901
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000504' THEN CAUSE_CNT ELSE 0 END) CD_C_02000504
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000126' THEN CAUSE_CNT ELSE 0 END) CD_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000101' THEN CAUSE_CNT ELSE 0 END) CD_C_02000101
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000106' THEN CAUSE_CNT ELSE 0 END) CD_C_02000106
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000100' THEN CAUSE_CNT ELSE 0 END) CD_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000121' THEN CAUSE_CNT ELSE 0 END) CD_C_02000121
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_02000129' THEN CAUSE_CNT ELSE 0 END) CD_C_02000129
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_06000033' THEN CAUSE_CNT ELSE 0 END) CD_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000018' THEN CAUSE_CNT ELSE 0 END) CD_C_05000018
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_05000900' THEN CAUSE_CNT ELSE 0 END) CD_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'CD_C_04000072' THEN CAUSE_CNT ELSE 0 END) CD_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'DSUC_FAIL_C_04000900' THEN CAUSE_CNT ELSE 0 END) DSUC_FAIL_C_04000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000087' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000087
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000090' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000090
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000072' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000072
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015001' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015001
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000015' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000015
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000033' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000033
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000011' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000011
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000089' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000089
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_00000902' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_00000902
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000017' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000017
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000021' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000021
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015420' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015420
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005012' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005012
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_06000031' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_06000031
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000126' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000126
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01015004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01015004
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000094' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000094
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000006' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000006
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_02000100' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_02000100
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000068' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000068
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000900' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000900
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01005003' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01005003
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000020' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000020
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_04000092' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_04000092
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003002' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003002
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_05000010' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_05000010
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01014181' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01014181
                 , 
                    SUM(CASE WHEN CAUSE = 'SUC_FAIL_C_01003004' THEN CAUSE_CNT ELSE 0 END) SUC_FAIL_C_01003004

        FROM
        (
            SELECT
                A.EVENT_TIME

                    ,	A.NODE_TYPE NODE1_TYPE
                    ,	A.NODE_ID NODE1_ID
                    ,	CONCAT(A.NODE_TYPE, '_', A.NODE_ID) NODE1_NAME
                    ,	CASE WHEN NVL(A.NODE_ID, '0') = '0' THEN '-' ELSE CONCAT(A.NODE_TYPE, '#', LPAD(A.NODE_ID * 1, 2, '0')) END NODE1_EXP_ID

            ,	'-' NODE2_TYPE
            ,	'-' NODE2_ID
            ,	'-' NODE2_NAME
            ,	'-' NODE2_EXP_ID

            ,	A.CALL_TYPE
            ,	A.ATTEMPT_CNT
            ,   A.SUCCESS_CNT
            ,   A.DROP_CNT
            ,	A.DATA_ATTEMPT_CNT
            ,   A.DATA_SUCESS_CNT DATA_SUCCESS_CNT
            ,	A.IMS_ATTEMPT_CNT
            ,   A.IMS_SUCESS_CNT IMS_SUCCESS_CNT
            ,	A.DETACH_CNT
            ,	B.CAUSE_TYPE
            ,	CONCAT(B.FAIL_TYPE, '_', B.CAUSE) CAUSE
            ,	B.CAUSE_CNT
            FROM

                    PM_EPC_KPI_1M A LEFT OUTER JOIN
                    PM_EPC_ROOT_CAUSE_1M B
                    ON A.EVENT_TIME = B.EVENT_TIME
                    AND A.NODE_TYPE = B.NODE_TYPE
                    AND A.NODE_ID  = B.NODE_ID
                    AND A.CALL_TYPE = B.CALL_TYPE
                    AND A.MCC = B.MCC
                    AND A.MNC = B.MNC

            WHERE 1 = 1

                AND A.EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')

                    AND A.NODE_TYPE = 'MME'

                        AND A.NODE_ID IN  (  '0016' ) 

                    AND A.MCC = 'ALL'
                    AND A.MNC = 'ALL'

            AND A.CALL_TYPE IN  (  'ATTACH' , 'SRMO' , 'SRMT' , 'TAU' , 'PAGING' , 'ESRMO' , 'ESRMT' ) 
        ) A
        GROUP BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE
        ORDER BY EVENT_TIME, NODE1_TYPE, NODE1_ID, NODE2_TYPE, NODE2_ID, CALL_TYPE

[36m2024-05-31 17:21:17.542[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:21:17.542[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:21:17.548[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- before set Executor
[36m2024-05-31 17:21:17.548[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- before Loop sArr
[36m2024-05-31 17:21:17.550[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- before Future
[36m2024-05-31 17:21:17.608[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000101'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:21:17.608[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000101'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:21:17.610[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000101'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:21:17.609[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000101'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:21:17.611[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-3-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000101'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:21:17.720[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- IMSI : OK
[36m2024-05-31 17:21:17.723[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- ENB : OK
[36m2024-05-31 17:21:17.730[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- MME : OK
[36m2024-05-31 17:21:17.731[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- SGW : OK
[36m2024-05-31 17:21:17.736[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-4][m- PGW : OK
[36m2024-05-31 17:21:30.849[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-31 17:21:30.850[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-31 17:21:30.853[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before set Executor
[36m2024-05-31 17:21:30.853[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before Loop sArr
[36m2024-05-31 17:21:30.854[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- before Future
[36m2024-05-31 17:21:30.911[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-2][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (BTS_NAME, '합계') STD_NAME
                ,   BTS_NAME STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(BTS_NAME, 'NULL') BTS_NAME

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000106'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY BTS_NAME WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:21:30.911[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-1][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (IMSI, '합계') STD_NAME
                ,   IMSI STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        IFNULL(IMSI, 'NULL') IMSI

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000106'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY IMSI WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:21:30.911[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-3][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (MME_ID, '합계') STD_NAME
                ,   MME_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(MME_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(MME_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('MME', '#', LPAD(MME_ID * 1, LENGTH(MME_ID * 1), '0'))
                            END
                        END MME_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000106'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY MME_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:21:30.913[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-5][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (PGW_ID, '합계') STD_NAME
                ,   PGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(PGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(PGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('PGW', '#', LPAD(PGW_ID * 1, LENGTH(PGW_ID * 1), '0'))
                            END
                        END PGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000106'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY PGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:21:30.913[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[pool-4-thread-4][m- SELECT
            *
        FROM
            (

        SELECT

                    COALESCE (SGW_ID, '합계') STD_NAME
                ,   SGW_ID STD_VALUE
                ,	IFNULL(SUM(CAUSE_CNT),0) CAUSE_CNT

        FROM
        (
            SELECT

                        CASE
                            WHEN
                                IFNULL(SGW_ID, 'NULL') = '0000' THEN 'NULL'
                            ELSE
                                CASE
                                    WHEN
                                        IFNULL(SGW_ID, 'NULL') REGEXP('^[0-9]+$') = 0 THEN 'NULL'
                                    ELSE
                                        CONCAT('SGW', '#', LPAD(SGW_ID * 1, LENGTH(SGW_ID * 1), '0'))
                            END
                        END SGW_ID

                ,	CAUSE_CNT
            FROM
                PM_PATH_ROOT_CAUSE_1M

            WHERE 1 = 1
            AND CAUSE = 'C_02000106'
            AND FAIL_TYPE = 'CD'
            AND EVENT_TIME = DATE_FORMAT('20240530112900', '%Y%m%d%H%i%s')
            AND CALL_TYPE = 'SRMO'

            AND MCC = 'ALL'
            AND MNC = 'ALL'

            AND MME_ID = '0016'

        ) A

                GROUP BY SGW_ID WITH ROLLUP

            ) A
        ORDER BY CASE WHEN STD_VALUE = '합계' THEN '0' ELSE STD_VALUE END

[36m2024-05-31 17:21:31.052[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- IMSI : OK
[36m2024-05-31 17:21:31.053[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- ENB : OK
[36m2024-05-31 17:21:31.054[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- MME : OK
[36m2024-05-31 17:21:31.054[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- SGW : OK
[36m2024-05-31 17:21:31.055[m [32m[INFO ][m [com.mobigen.cdev.poc.module.nw.service.NwAnalysisServiceImpl] [33m[http-nio-9091-exec-5][m- PGW : OK
[36m2024-05-31 17:22:22.980[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:24:22.981[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:26:22.985[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:28:22.992[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:30:22.995[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:32:23.002[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:34:23.009[m [34m[DEBUG][m [com.mobigen.cdev.poc.module.nw.process.NwConfigDemon] [33m[Thread-1][m- current Idx : 1
[36m2024-05-31 17:35:10.726[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-31 17:35:10.727[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-31 17:35:10.769[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
