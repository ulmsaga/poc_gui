[36m2024-05-02 09:30:02.467[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 4215 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-02 09:30:02.479[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-02 09:30:02.479[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-02 09:30:02.864[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-02 09:30:02.913[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 42 ms. Found 1 JPA repository interfaces.
[36m2024-05-02 09:30:03.138[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-02 09:30:03.588[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-02 09:30:03.599[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-02 09:30:03.599[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-02 09:30:03.600[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-02 09:30:03.708[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-02 09:30:03.709[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1192 ms
[36m2024-05-02 09:30:03.834[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-02 09:30:03.876[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-02 09:30:04.000[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-02 09:30:04.149[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-02 09:30:04.295[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-02 09:30:04.317[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-02 09:30:04.671[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-02 09:30:04.676[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-02 09:30:05.154[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@60e5b3a8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e084a26, org.springframework.security.web.context.SecurityContextPersistenceFilter@12ebcdf6, org.springframework.security.web.header.HeaderWriterFilter@34893693, org.springframework.security.web.authentication.logout.LogoutFilter@33efa7d4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@88fc9cb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@75693526, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@31c31fa6, org.springframework.security.web.session.SessionManagementFilter@d15f031, org.springframework.security.web.access.ExceptionTranslationFilter@7daf167, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@e8fb390]
[36m2024-05-02 09:30:05.188[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-02 09:30:05.429[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-02 09:30:05.446[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-02 09:30:05.451[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.428 seconds (JVM running for 4.041)
[36m2024-05-02 09:43:27.757[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-05-02 09:43:27.758[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Initializing Servlet 'dispatcherServlet'
[36m2024-05-02 09:43:27.761[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Completed initialization in 3 ms
[36m2024-05-02 09:43:27.903[m [31m[ERROR][m [com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler] [33m[http-nio-9091-exec-1][m- rsResultExcption : {}
com.mobigen.cdev.poc.core.exception.RsResultException: null
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$EnhancerBySpringCGLIB$$239e7d95.getUserMenuInfoList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: java.lang.reflect.UndeclaredThrowableException
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:780) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$a0fa541.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
Caused by: com.mobigen.cdev.poc.core.exception.RsResultException
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:35) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$a0fa541.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
[36m2024-05-02 09:43:27.930[m [33m[WARN ][m [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [33m[http-nio-9091-exec-1][m- Failure in @ExceptionHandler com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler#rsResultExceptionHandler(RsResultException)
java.lang.reflect.UndeclaredThrowableException: null
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:780) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler$$EnhancerBySpringCGLIB$$a9598774.rsResultExceptionHandler(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:428) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1332) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1143) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: com.mobigen.cdev.poc.core.exception.RsResultException
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	... 97 more
Caused by: java.lang.NullPointerException
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler.rsResultException(GlobalExceptionHandler.java:70) ~[classes/:?]
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler.rsResultExceptionHandler(GlobalExceptionHandler.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler$$FastClassBySpringCGLIB$$b032731a.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	... 97 more
[36m2024-05-02 09:43:27.937[m [31m[ERROR][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Servlet.service() for servlet [dispatcherServlet] in context with path [/poc_service] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
com.mobigen.cdev.poc.core.exception.RsResultException: null
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:35) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$a0fa541.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$EnhancerBySpringCGLIB$$239e7d95.getUserMenuInfoList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 09:45:22.376[m [31m[ERROR][m [com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler] [33m[http-nio-9091-exec-2][m- rsResultExcption : {}
com.mobigen.cdev.poc.core.exception.RsResultException: null
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$EnhancerBySpringCGLIB$$239e7d95.getUserMenuInfoList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: java.lang.reflect.UndeclaredThrowableException
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:780) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$a0fa541.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
Caused by: com.mobigen.cdev.poc.core.exception.RsResultException
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:35) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$a0fa541.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
[36m2024-05-02 09:45:22.388[m [33m[WARN ][m [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [33m[http-nio-9091-exec-2][m- Failure in @ExceptionHandler com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler#rsResultExceptionHandler(RsResultException)
java.lang.reflect.UndeclaredThrowableException: null
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:780) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler$$EnhancerBySpringCGLIB$$a9598774.rsResultExceptionHandler(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:428) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1332) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1143) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: com.mobigen.cdev.poc.core.exception.RsResultException
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	... 97 more
Caused by: java.lang.NullPointerException
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler.rsResultException(GlobalExceptionHandler.java:70) ~[classes/:?]
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler.rsResultExceptionHandler(GlobalExceptionHandler.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler$$FastClassBySpringCGLIB$$b032731a.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	... 97 more
[36m2024-05-02 09:45:22.391[m [31m[ERROR][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-2][m- Servlet.service() for servlet [dispatcherServlet] in context with path [/poc_service] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
com.mobigen.cdev.poc.core.exception.RsResultException: null
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:35) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$a0fa541.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$EnhancerBySpringCGLIB$$239e7d95.getUserMenuInfoList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 09:47:19.446[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-02 09:47:19.448[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-02 09:47:19.490[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-02 09:47:23.739[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 5484 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-02 09:47:23.741[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-02 09:47:23.742[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-02 09:47:24.050[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-02 09:47:24.099[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 43 ms. Found 1 JPA repository interfaces.
[36m2024-05-02 09:47:24.260[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-02 09:47:24.689[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-02 09:47:24.695[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-02 09:47:24.695[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-02 09:47:24.695[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-02 09:47:24.755[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-02 09:47:24.755[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 990 ms
[36m2024-05-02 09:47:24.859[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-02 09:47:24.901[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-02 09:47:25.037[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-02 09:47:25.144[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-02 09:47:25.249[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-02 09:47:25.270[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-02 09:47:25.631[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-02 09:47:25.638[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-02 09:47:26.207[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@13288174, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@24ae2183, org.springframework.security.web.context.SecurityContextPersistenceFilter@7a05cdc8, org.springframework.security.web.header.HeaderWriterFilter@5b5e45bc, org.springframework.security.web.authentication.logout.LogoutFilter@50bc0bbd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@174aabb2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@33b4c775, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b697993, org.springframework.security.web.session.SessionManagementFilter@528ef230, org.springframework.security.web.access.ExceptionTranslationFilter@6b44121e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@230dd372]
[36m2024-05-02 09:47:26.244[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-02 09:47:26.497[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-02 09:47:26.516[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-02 09:47:26.522[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.118 seconds (JVM running for 4.018)
[36m2024-05-02 09:48:35.548[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-05-02 09:48:35.548[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Initializing Servlet 'dispatcherServlet'
[36m2024-05-02 09:48:35.549[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Completed initialization in 1 ms
[36m2024-05-02 09:48:35.634[m [31m[ERROR][m [com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler] [33m[http-nio-9091-exec-1][m- rsResultExcption : {}
com.mobigen.cdev.poc.core.exception.RsResultException: null
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$EnhancerBySpringCGLIB$$d6141601.getUserMenuInfoList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: java.lang.reflect.UndeclaredThrowableException
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:780) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$2149fc3b.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
Caused by: com.mobigen.cdev.poc.core.exception.RsResultException
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:35) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$2149fc3b.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 96 more
[36m2024-05-02 09:48:35.645[m [33m[WARN ][m [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [33m[http-nio-9091-exec-1][m- Failure in @ExceptionHandler com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler#rsResultExceptionHandler(RsResultException)
java.lang.reflect.UndeclaredThrowableException: null
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:780) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler$$EnhancerBySpringCGLIB$$6c2dea7b.rsResultExceptionHandler(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:428) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1332) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1143) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: com.mobigen.cdev.poc.core.exception.RsResultException
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	... 97 more
Caused by: java.lang.NullPointerException
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler.rsResultException(GlobalExceptionHandler.java:70) ~[classes/:?]
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler.rsResultExceptionHandler(GlobalExceptionHandler.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler$$FastClassBySpringCGLIB$$b032731a.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	... 97 more
[36m2024-05-02 09:48:35.650[m [31m[ERROR][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Servlet.service() for servlet [dispatcherServlet] in context with path [/poc_service] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
com.mobigen.cdev.poc.core.exception.RsResultException: null
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:35) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$2149fc3b.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$EnhancerBySpringCGLIB$$d6141601.getUserMenuInfoList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 09:50:52.703[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-02 09:50:52.704[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-02 09:50:52.747[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-02 09:51:03.688[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 5796 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-02 09:51:03.691[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-02 09:51:03.691[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-02 09:51:04.009[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-02 09:51:04.061[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 46 ms. Found 1 JPA repository interfaces.
[36m2024-05-02 09:51:04.216[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-02 09:51:04.690[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-02 09:51:04.695[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-02 09:51:04.696[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-02 09:51:04.696[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-02 09:51:04.759[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-02 09:51:04.759[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1044 ms
[36m2024-05-02 09:51:04.870[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-02 09:51:04.915[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-02 09:51:05.043[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-02 09:51:05.152[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-02 09:51:05.274[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-02 09:51:05.296[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-02 09:51:05.608[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-02 09:51:05.614[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-02 09:51:06.179[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@23a78d2e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@20724c21, org.springframework.security.web.context.SecurityContextPersistenceFilter@2ded31cc, org.springframework.security.web.header.HeaderWriterFilter@38dc1c50, org.springframework.security.web.authentication.logout.LogoutFilter@4cff38ff, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6fb2b972, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5fa3df, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c0cb9c2, org.springframework.security.web.session.SessionManagementFilter@73db1a6, org.springframework.security.web.access.ExceptionTranslationFilter@7be9e9fc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@24ae2183]
[36m2024-05-02 09:51:06.230[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-02 09:51:06.512[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-02 09:51:06.533[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-02 09:51:06.539[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.209 seconds (JVM running for 3.924)
[36m2024-05-02 09:51:10.897[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-05-02 09:51:10.898[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Initializing Servlet 'dispatcherServlet'
[36m2024-05-02 09:51:10.898[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Completed initialization in 0 ms
[36m2024-05-02 09:51:20.065[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 09:53:26.949[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m21s563ms).
[36m2024-05-02 09:53:26.973[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 09:53:26.973[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 09:53:26.973[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 09:53:26.973[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 09:53:27.022[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-02 09:53:27.023[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-02 09:53:27.065[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-02 09:53:34.802[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 6004 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-02 09:53:34.805[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-02 09:53:34.805[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-02 09:53:35.189[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-02 09:53:35.242[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 46 ms. Found 1 JPA repository interfaces.
[36m2024-05-02 09:53:35.415[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-02 09:53:35.987[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-02 09:53:36.065[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1226 ms
[36m2024-05-02 09:53:36.201[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-02 09:53:36.274[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-02 09:53:36.397[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-02 09:53:36.516[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-02 09:53:36.656[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-02 09:53:36.682[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-02 09:53:37.053[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-02 09:53:37.059[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-02 09:53:37.716[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7ff40324, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a22d69f, org.springframework.security.web.context.SecurityContextPersistenceFilter@237824b0, org.springframework.security.web.header.HeaderWriterFilter@25d87313, org.springframework.security.web.authentication.logout.LogoutFilter@711fbcef, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5345552f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@55ba4bff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7164e54, org.springframework.security.web.session.SessionManagementFilter@5694f6a0, org.springframework.security.web.access.ExceptionTranslationFilter@64dfa1a3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7adde776]
[36m2024-05-02 09:53:37.769[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-02 09:53:38.146[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-02 09:53:38.153[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.801 seconds (JVM running for 4.593)
[36m2024-05-02 09:53:38.174[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-02 09:53:38.176[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-02 09:53:38.226[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-02 09:53:43.092[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 6020 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-02 09:53:43.095[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-02 09:53:43.095[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-02 09:53:43.411[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-02 09:53:43.447[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 31 ms. Found 1 JPA repository interfaces.
[36m2024-05-02 09:53:43.608[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-02 09:53:44.055[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-02 09:53:44.063[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-02 09:53:44.063[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-02 09:53:44.063[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-02 09:53:44.173[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-02 09:53:44.173[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 1054 ms
[36m2024-05-02 09:53:44.361[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-02 09:53:44.418[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-02 09:53:44.560[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-02 09:53:44.736[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-02 09:53:44.873[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-02 09:53:44.894[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-02 09:53:45.259[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-02 09:53:45.273[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-02 09:53:46.044[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@77f95e19, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4607cbe2, org.springframework.security.web.context.SecurityContextPersistenceFilter@6e0dec27, org.springframework.security.web.header.HeaderWriterFilter@1f5a1ad4, org.springframework.security.web.authentication.logout.LogoutFilter@7916568d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@237824b0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@52a8f789, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7ff40324, org.springframework.security.web.session.SessionManagementFilter@1188e08b, org.springframework.security.web.access.ExceptionTranslationFilter@4138af7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@39ee07a9]
[36m2024-05-02 09:53:46.115[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-02 09:53:46.513[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-02 09:53:46.532[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-02 09:53:46.540[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 3.819 seconds (JVM running for 4.473)
[36m2024-05-02 09:55:28.900[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-05-02 09:55:28.901[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Initializing Servlet 'dispatcherServlet'
[36m2024-05-02 09:55:28.906[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Completed initialization in 5 ms
[36m2024-05-02 10:35:00.954[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

		 AND USER_PASS = 'cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e' 
		 AND 1 = 1

[36m2024-05-02 10:35:07.571[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:35:19.324[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:38:14.705[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:39:39.517[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:42:02.519[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = 'f686d3de9c420e9642b78901aa1c370604d2d5e9351747bf1df4041e2b994a091975804c64e4454f2cb09a8abf65d73f4d027185a9bcf3fea3857a8303affb3d' 
		 AND 1 = 1

[36m2024-05-02 10:42:09.817[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

		 AND USER_PASS = 'cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e' 
		 AND 1 = 1

[36m2024-05-02 10:42:36.817[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:42:36.840[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 10:42:36.855[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 10:42:36.887[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 10:42:36.888[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 10:42:36.959[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 10:45:13.799[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '2ea68ee4ef8dccdae633837cb04ac9dbcdf7c86655c02ae7738b731cd4040bd97816993acc43ad42597aedf69f4bccb65f648b82a4fd3b277f20991f8f9e607c' 
		 AND 1 = 1

[36m2024-05-02 10:45:42.293[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '2ea68ee4ef8dccdae633837cb04ac9dbcdf7c86655c02ae7738b731cd4040bd97816993acc43ad42597aedf69f4bccb65f648b82a4fd3b277f20991f8f9e607c' 
		 AND 1 = 1

[36m2024-05-02 10:45:54.716[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = 'ee26b0dd4af7e749aa1a8ee3c10ae9923f618980772e473f8819a5d4940e0db27ac185f8a0e1d5f84f88bc887fd67b143732c304cc5fa9ad8e6f57f50028a8ff' 
		 AND 1 = 1

[36m2024-05-02 10:46:02.903[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:46:02.914[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 10:46:02.922[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 10:46:02.940[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 10:46:02.940[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 10:46:02.942[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 10:46:10.797[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:46:10.806[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 10:46:10.813[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 10:46:10.829[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 10:46:10.830[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 10:46:10.833[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 10:46:32.080[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:46:32.089[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 10:46:32.096[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 10:46:32.112[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 10:46:32.112[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 10:46:32.114[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 10:47:22.383[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:47:22.392[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 10:47:22.401[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 10:47:22.419[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-02 10:47:22.419[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 10:47:22.423[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 10:47:37.787[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = 'd6f644b19812e97b5d871658d6d3400ecd4787faeb9b8990c1e7608288664be77257104a58d033bcf1a0e0945ff06468ebe53e2dff36e248424c7273117dac09' 
		 AND 1 = 1

[36m2024-05-02 10:48:08.982[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = 'd6f644b19812e97b5d871658d6d3400ecd4787faeb9b8990c1e7608288664be77257104a58d033bcf1a0e0945ff06468ebe53e2dff36e248424c7273117dac09' 
		 AND 1 = 1

[36m2024-05-02 10:48:14.999[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = 'd6f644b19812e97b5d871658d6d3400ecd4787faeb9b8990c1e7608288664be77257104a58d033bcf1a0e0945ff06468ebe53e2dff36e248424c7273117dac09' 
		 AND 1 = 1

[36m2024-05-02 10:48:28.565[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = 'fb131bc57a477c8c9d068f1ee5622ac304195a77164ccc2d75d82dfe1a727ba8d674ed87f96143b2b416aacefb555e3045c356faa23e6d21de72b85822e39fdd' 
		 AND 1 = 1

[36m2024-05-02 10:48:31.842[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:48:31.850[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 10:48:31.861[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 10:48:31.879[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 10:48:31.879[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 10:48:31.881[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 10:49:28.190[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:49:28.200[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 10:49:28.216[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 10:49:28.231[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 10:49:28.231[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 10:49:28.232[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 10:49:43.674[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:49:43.709[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 10:49:43.718[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 10:49:43.737[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 10:49:43.737[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 10:49:43.739[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 10:49:46.306[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '1f40fc92da241694750979ee6cf582f2d5d7d28e18335de05abc54d0560e0f5302860c652bf08d560252aa5e74210546f369fbbbce8c12cfc7957b2652fe9a75' 
		 AND 1 = 1

[36m2024-05-02 10:51:18.697[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '1f40fc92da241694750979ee6cf582f2d5d7d28e18335de05abc54d0560e0f5302860c652bf08d560252aa5e74210546f369fbbbce8c12cfc7957b2652fe9a75' 
		 AND 1 = 1

[36m2024-05-02 10:51:27.105[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '1f40fc92da241694750979ee6cf582f2d5d7d28e18335de05abc54d0560e0f5302860c652bf08d560252aa5e74210546f369fbbbce8c12cfc7957b2652fe9a75' 
		 AND 1 = 1

[36m2024-05-02 10:51:31.349[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:51:31.356[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 10:51:31.363[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 10:51:31.379[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 10:51:31.379[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 10:51:31.381[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 10:58:18.175[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:58:18.189[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 10:58:18.200[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 10:58:18.223[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 10:58:18.224[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 10:58:18.227[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 10:58:22.600[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '3627909a29c31381a071ec27f7c9ca97726182aed29a7ddd2e54353322cfb30abb9e3a6df2ac2c20fe23436311d678564d0c8d305930575f60e2d3d048184d79' 
		 AND 1 = 1

[36m2024-05-02 10:58:34.528[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:58:34.539[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 10:58:34.550[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 10:58:34.569[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 10:58:34.569[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 10:58:34.572[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 10:58:36.736[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:58:36.749[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 10:58:36.760[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 10:58:36.808[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 10:58:36.809[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 10:58:36.810[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 10:58:43.215[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:58:43.228[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 10:58:43.238[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 10:58:43.341[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-02 10:58:43.341[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 10:58:43.343[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 10:58:44.087[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:58:44.099[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 10:58:44.110[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 10:58:44.130[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 10:58:44.130[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 10:58:44.132[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 10:59:26.349[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:59:26.361[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 10:59:26.372[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 10:59:26.392[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 10:59:26.392[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 10:59:26.395[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 10:59:28.103[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:59:28.118[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 10:59:28.130[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 10:59:28.156[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 10:59:28.156[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 10:59:28.159[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 10:59:29.125[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 10:59:29.137[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 10:59:29.147[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 10:59:29.168[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 10:59:29.169[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 10:59:29.171[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:08:05.871[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:08:05.873[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:08:10.888[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- 21. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
java.sql.SQLSyntaxErrorException: (conn=15529) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128) ~[HikariCP-4.0.3.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:337) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor100.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl.getUserMenuInfoList(CommonRepositoryImpl.java:45) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$FastClassBySpringCGLIB$$99321fe1.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$EnhancerBySpringCGLIB$$605af9c8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl.getUserMenuInfoList(CommonServiceImpl.java:99) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$FastClassBySpringCGLIB$$8b77be3e.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:44) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$c8215fb8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$EnhancerBySpringCGLIB$$9b9a25e0.getUserMenuInfoList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:08:10.918[m [33m[WARN ][m [com.zaxxer.hikari.pool.PoolBase] [33m[http-nio-9091-exec-9][m- HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@374eb88e ((conn=15529) Connection.setNetworkTimeout cannot be called on a closed connection). Possibly consider using a shorter maxLifetime value.
[36m2024-05-02 11:08:10.919[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[HikariPool-1 connection closer][m- 21. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
java.sql.SQLSyntaxErrorException: (conn=15529) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451) ~[HikariCP-4.0.3.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:08:15.925[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- 22. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
java.sql.SQLSyntaxErrorException: (conn=15530) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128) ~[HikariCP-4.0.3.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:337) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor100.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl.getUserMenuInfoList(CommonRepositoryImpl.java:45) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$FastClassBySpringCGLIB$$99321fe1.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$EnhancerBySpringCGLIB$$605af9c8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl.getUserMenuInfoList(CommonServiceImpl.java:99) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$FastClassBySpringCGLIB$$8b77be3e.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:44) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$c8215fb8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$EnhancerBySpringCGLIB$$9b9a25e0.getUserMenuInfoList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:08:15.933[m [33m[WARN ][m [com.zaxxer.hikari.pool.PoolBase] [33m[http-nio-9091-exec-9][m- HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6d696775 ((conn=15530) Connection.setNetworkTimeout cannot be called on a closed connection). Possibly consider using a shorter maxLifetime value.
[36m2024-05-02 11:08:15.934[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[HikariPool-1 connection closer][m- 22. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
java.sql.SQLSyntaxErrorException: (conn=15530) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451) ~[HikariCP-4.0.3.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:08:20.936[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- 23. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
java.sql.SQLSyntaxErrorException: (conn=15531) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128) ~[HikariCP-4.0.3.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:337) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor100.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl.getUserMenuInfoList(CommonRepositoryImpl.java:45) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$FastClassBySpringCGLIB$$99321fe1.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$EnhancerBySpringCGLIB$$605af9c8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl.getUserMenuInfoList(CommonServiceImpl.java:99) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$FastClassBySpringCGLIB$$8b77be3e.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:44) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$c8215fb8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$EnhancerBySpringCGLIB$$9b9a25e0.getUserMenuInfoList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:08:20.941[m [33m[WARN ][m [com.zaxxer.hikari.pool.PoolBase] [33m[http-nio-9091-exec-9][m- HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3fc5abab ((conn=15531) Connection.setNetworkTimeout cannot be called on a closed connection). Possibly consider using a shorter maxLifetime value.
[36m2024-05-02 11:08:20.943[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[HikariPool-1 connection closer][m- 23. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
java.sql.SQLSyntaxErrorException: (conn=15531) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451) ~[HikariCP-4.0.3.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:08:25.948[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- 24. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
java.sql.SQLSyntaxErrorException: (conn=15532) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128) ~[HikariCP-4.0.3.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:337) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor100.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl.getUserMenuInfoList(CommonRepositoryImpl.java:45) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$FastClassBySpringCGLIB$$99321fe1.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$EnhancerBySpringCGLIB$$605af9c8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl.getUserMenuInfoList(CommonServiceImpl.java:99) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$FastClassBySpringCGLIB$$8b77be3e.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:44) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$c8215fb8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$EnhancerBySpringCGLIB$$9b9a25e0.getUserMenuInfoList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:08:25.956[m [33m[WARN ][m [com.zaxxer.hikari.pool.PoolBase] [33m[http-nio-9091-exec-9][m- HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@24376c5a ((conn=15532) Connection.setNetworkTimeout cannot be called on a closed connection). Possibly consider using a shorter maxLifetime value.
[36m2024-05-02 11:08:25.957[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[HikariPool-1 connection closer][m- 24. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
java.sql.SQLSyntaxErrorException: (conn=15532) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451) ~[HikariCP-4.0.3.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:08:30.963[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- 25. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
java.sql.SQLSyntaxErrorException: (conn=15533) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128) ~[HikariCP-4.0.3.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:337) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor100.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl.getUserMenuInfoList(CommonRepositoryImpl.java:45) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$FastClassBySpringCGLIB$$99321fe1.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$EnhancerBySpringCGLIB$$605af9c8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl.getUserMenuInfoList(CommonServiceImpl.java:99) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$FastClassBySpringCGLIB$$8b77be3e.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:44) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$c8215fb8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$EnhancerBySpringCGLIB$$9b9a25e0.getUserMenuInfoList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:08:30.967[m [33m[WARN ][m [com.zaxxer.hikari.pool.PoolBase] [33m[http-nio-9091-exec-9][m- HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@24103c1d ((conn=15533) Connection.setNetworkTimeout cannot be called on a closed connection). Possibly consider using a shorter maxLifetime value.
[36m2024-05-02 11:08:30.968[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[HikariPool-1 connection closer][m- 25. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
java.sql.SQLSyntaxErrorException: (conn=15533) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451) ~[HikariCP-4.0.3.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:08:35.971[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- 26. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
java.sql.SQLSyntaxErrorException: (conn=15534) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128) ~[HikariCP-4.0.3.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:337) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor100.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl.getUserMenuInfoList(CommonRepositoryImpl.java:45) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$FastClassBySpringCGLIB$$99321fe1.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$EnhancerBySpringCGLIB$$605af9c8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl.getUserMenuInfoList(CommonServiceImpl.java:99) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$FastClassBySpringCGLIB$$8b77be3e.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:44) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$c8215fb8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$EnhancerBySpringCGLIB$$9b9a25e0.getUserMenuInfoList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:08:35.975[m [33m[WARN ][m [com.zaxxer.hikari.pool.PoolBase] [33m[http-nio-9091-exec-9][m- HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@268929c8 ((conn=15534) Connection.setNetworkTimeout cannot be called on a closed connection). Possibly consider using a shorter maxLifetime value.
[36m2024-05-02 11:08:35.975[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[HikariPool-1 connection closer][m- 26. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
java.sql.SQLSyntaxErrorException: (conn=15534) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451) ~[HikariCP-4.0.3.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:08:35.990[m [31m[ERROR][m [com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler] [33m[http-nio-9091-exec-9][m- rsResultExcption : {}
com.mobigen.cdev.poc.core.exception.RsResultException: null
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$EnhancerBySpringCGLIB$$9b9a25e0.getUserMenuInfoList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 30095ms.
### The error may exist in file [/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes/mybatis/mariadb/module/common/common_sqlMap.xml]
### The error may involve com.mobigen.cdev.mapper.mariadb.module.common.getUserMenuInfoList
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 30095ms.
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:97) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl.getUserMenuInfoList(CommonRepositoryImpl.java:45) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$FastClassBySpringCGLIB$$99321fe1.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$EnhancerBySpringCGLIB$$605af9c8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl.getUserMenuInfoList(CommonServiceImpl.java:99) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$FastClassBySpringCGLIB$$8b77be3e.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:44) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$c8215fb8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 95 more
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 30095ms.
### The error may exist in file [/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes/mybatis/mariadb/module/common/common_sqlMap.xml]
### The error may involve com.mobigen.cdev.mapper.mariadb.module.common.getUserMenuInfoList
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 30095ms.
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:153) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor100.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl.getUserMenuInfoList(CommonRepositoryImpl.java:45) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$FastClassBySpringCGLIB$$99321fe1.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$EnhancerBySpringCGLIB$$605af9c8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl.getUserMenuInfoList(CommonServiceImpl.java:99) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$FastClassBySpringCGLIB$$8b77be3e.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:44) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$c8215fb8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 95 more
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 30095ms.
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:83) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:337) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor100.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl.getUserMenuInfoList(CommonRepositoryImpl.java:45) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$FastClassBySpringCGLIB$$99321fe1.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$EnhancerBySpringCGLIB$$605af9c8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl.getUserMenuInfoList(CommonServiceImpl.java:99) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$FastClassBySpringCGLIB$$8b77be3e.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:44) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$c8215fb8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 95 more
Caused by: java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 30095ms.
	at com.zaxxer.hikari.pool.HikariPool.createTimeoutException(HikariPool.java:696) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:197) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128) ~[HikariCP-4.0.3.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:337) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor100.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl.getUserMenuInfoList(CommonRepositoryImpl.java:45) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$FastClassBySpringCGLIB$$99321fe1.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$EnhancerBySpringCGLIB$$605af9c8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl.getUserMenuInfoList(CommonServiceImpl.java:99) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$FastClassBySpringCGLIB$$8b77be3e.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:44) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$c8215fb8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 95 more
Caused by: java.sql.SQLSyntaxErrorException: (conn=15534) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128) ~[HikariCP-4.0.3.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:337) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor100.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl.getUserMenuInfoList(CommonRepositoryImpl.java:45) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$FastClassBySpringCGLIB$$99321fe1.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$EnhancerBySpringCGLIB$$605af9c8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl.getUserMenuInfoList(CommonServiceImpl.java:99) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$FastClassBySpringCGLIB$$8b77be3e.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:44) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$c8215fb8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 95 more
[36m2024-05-02 11:08:35.997[m [33m[WARN ][m [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [33m[http-nio-9091-exec-9][m- Failure in @ExceptionHandler com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler#rsResultExceptionHandler(RsResultException)
java.lang.reflect.UndeclaredThrowableException: null
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:780) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler$$EnhancerBySpringCGLIB$$d85c3409.rsResultExceptionHandler(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:428) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1332) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1143) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: com.mobigen.cdev.poc.core.exception.RsResultException
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	... 97 more
Caused by: java.lang.NullPointerException
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler.rsResultException(GlobalExceptionHandler.java:71) ~[classes/:?]
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler.rsResultExceptionHandler(GlobalExceptionHandler.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler$$FastClassBySpringCGLIB$$b032731a.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	... 97 more
[36m2024-05-02 11:08:36.002[m [31m[ERROR][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-9][m- Servlet.service() for servlet [dispatcherServlet] in context with path [/poc_service] threw exception [Request processing failed; nested exception is java.lang.reflect.UndeclaredThrowableException] with root cause
java.sql.SQLSyntaxErrorException: (conn=15534) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128) ~[HikariCP-4.0.3.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:337) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor100.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl.getUserMenuInfoList(CommonRepositoryImpl.java:45) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$FastClassBySpringCGLIB$$99321fe1.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$EnhancerBySpringCGLIB$$605af9c8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl.getUserMenuInfoList(CommonServiceImpl.java:99) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$FastClassBySpringCGLIB$$8b77be3e.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.util.aop.EnvStatusAspect.autoAddEnvStatusToParam(EnvStatusAspect.java:37) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.security.aop.LoginUserAspect.autoAddSessionUserToParam(LoginUserAspect.java:44) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.service.CommonServiceImpl$$EnhancerBySpringCGLIB$$c8215fb8.getUserMenuInfoList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController.getUserMenuInfoList(CommonController.java:104) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$FastClassBySpringCGLIB$$152a82a6.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.controller.CommonController$$EnhancerBySpringCGLIB$$9b9a25e0.getUserMenuInfoList(<generated>) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:528) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:08:36.014[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:08:36.014[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:14:33.302[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- 27. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
java.sql.SQLSyntaxErrorException: (conn=15535) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128) ~[HikariCP-4.0.3.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:337) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor100.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl.getUserList(CommonRepositoryImpl.java:25) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$FastClassBySpringCGLIB$$99321fe1.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$EnhancerBySpringCGLIB$$605af9c8.getUserList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.polish.LoginPolicyDefaultImpl.userDbAuthentication(LoginPolicyDefaultImpl.java:67) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.polish.LoginPolicyDefaultImpl.authentication(LoginPolicyDefaultImpl.java:56) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.service.LoginServiceImpl.loginProc(LoginServiceImpl.java:138) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.controller.LoginController.loginProc(LoginController.java:74) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.controller.LoginController$$FastClassBySpringCGLIB$$1d511328.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.login.controller.LoginController$$EnhancerBySpringCGLIB$$8a5d8cf3.loginProc(<generated>) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:14:33.315[m [33m[WARN ][m [com.zaxxer.hikari.pool.PoolBase] [33m[http-nio-9091-exec-1][m- HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1850b494 ((conn=15535) Connection.setNetworkTimeout cannot be called on a closed connection). Possibly consider using a shorter maxLifetime value.
[36m2024-05-02 11:14:33.316[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[HikariPool-1 connection closer][m- 27. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
java.sql.SQLSyntaxErrorException: (conn=15535) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451) ~[HikariCP-4.0.3.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:14:38.321[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- 28. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
java.sql.SQLSyntaxErrorException: (conn=15536) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128) ~[HikariCP-4.0.3.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:337) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor100.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl.getUserList(CommonRepositoryImpl.java:25) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$FastClassBySpringCGLIB$$99321fe1.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$EnhancerBySpringCGLIB$$605af9c8.getUserList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.polish.LoginPolicyDefaultImpl.userDbAuthentication(LoginPolicyDefaultImpl.java:67) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.polish.LoginPolicyDefaultImpl.authentication(LoginPolicyDefaultImpl.java:56) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.service.LoginServiceImpl.loginProc(LoginServiceImpl.java:138) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.controller.LoginController.loginProc(LoginController.java:74) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.controller.LoginController$$FastClassBySpringCGLIB$$1d511328.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.login.controller.LoginController$$EnhancerBySpringCGLIB$$8a5d8cf3.loginProc(<generated>) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:14:38.325[m [33m[WARN ][m [com.zaxxer.hikari.pool.PoolBase] [33m[http-nio-9091-exec-1][m- HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@39914bff ((conn=15536) Connection.setNetworkTimeout cannot be called on a closed connection). Possibly consider using a shorter maxLifetime value.
[36m2024-05-02 11:14:38.326[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[HikariPool-1 connection closer][m- 28. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
java.sql.SQLSyntaxErrorException: (conn=15536) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451) ~[HikariCP-4.0.3.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:14:43.331[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- 29. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
java.sql.SQLSyntaxErrorException: (conn=15537) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128) ~[HikariCP-4.0.3.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:337) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor100.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl.getUserList(CommonRepositoryImpl.java:25) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$FastClassBySpringCGLIB$$99321fe1.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$EnhancerBySpringCGLIB$$605af9c8.getUserList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.polish.LoginPolicyDefaultImpl.userDbAuthentication(LoginPolicyDefaultImpl.java:67) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.polish.LoginPolicyDefaultImpl.authentication(LoginPolicyDefaultImpl.java:56) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.service.LoginServiceImpl.loginProc(LoginServiceImpl.java:138) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.controller.LoginController.loginProc(LoginController.java:74) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.controller.LoginController$$FastClassBySpringCGLIB$$1d511328.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.login.controller.LoginController$$EnhancerBySpringCGLIB$$8a5d8cf3.loginProc(<generated>) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:14:43.338[m [33m[WARN ][m [com.zaxxer.hikari.pool.PoolBase] [33m[http-nio-9091-exec-1][m- HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@12292ae2 ((conn=15537) Connection.setNetworkTimeout cannot be called on a closed connection). Possibly consider using a shorter maxLifetime value.
[36m2024-05-02 11:14:43.339[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[HikariPool-1 connection closer][m- 29. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
java.sql.SQLSyntaxErrorException: (conn=15537) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451) ~[HikariCP-4.0.3.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:14:48.345[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- 30. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
java.sql.SQLSyntaxErrorException: (conn=15538) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128) ~[HikariCP-4.0.3.jar:?]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:159) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:117) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80) ~[spring-jdbc-5.3.26.jar:5.3.26]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:337) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:151) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:145) ~[mybatis-3.5.11.jar:3.5.11]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.11.jar:3.5.11]
	at jdk.internal.reflect.GeneratedMethodAccessor100.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.sun.proxy.$Proxy123.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224) ~[mybatis-spring-3.0.0.jar:3.0.0]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl.getUserList(CommonRepositoryImpl.java:25) ~[classes/:?]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$FastClassBySpringCGLIB$$99321fe1.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) ~[spring-tx-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.common.repository.mybatis.CommonRepositoryImpl$$EnhancerBySpringCGLIB$$605af9c8.getUserList(<generated>) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.polish.LoginPolicyDefaultImpl.userDbAuthentication(LoginPolicyDefaultImpl.java:67) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.polish.LoginPolicyDefaultImpl.authentication(LoginPolicyDefaultImpl.java:56) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.service.LoginServiceImpl.loginProc(LoginServiceImpl.java:138) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.controller.LoginController.loginProc(LoginController.java:74) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.controller.LoginController$$FastClassBySpringCGLIB$$1d511328.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.login.controller.LoginController$$EnhancerBySpringCGLIB$$8a5d8cf3.loginProc(<generated>) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:14:48.347[m [33m[WARN ][m [com.zaxxer.hikari.pool.PoolBase] [33m[http-nio-9091-exec-1][m- HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3778fb52 ((conn=15538) Connection.setNetworkTimeout cannot be called on a closed connection). Possibly consider using a shorter maxLifetime value.
[36m2024-05-02 11:14:48.348[m [31m[ERROR][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[HikariPool-1 connection closer][m- 30. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@4b22214d[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
java.sql.SQLSyntaxErrorException: (conn=15538) Connection.setNetworkTimeout cannot be called on a closed connection
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:282) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:336) ~[mariadb-java-client-3.1.0.jar:?]
	at org.mariadb.jdbc.Connection.setNetworkTimeout(Connection.java:738) ~[mariadb-java-client-3.1.0.jar:?]
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120) ~[log4jdbc-log4j2-jdbc4.1-1.16.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:566) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137) ~[HikariCP-4.0.3.jar:?]
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451) ~[HikariCP-4.0.3.jar:?]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[?:?]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 11:14:48.431[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 11:14:48.443[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 11:14:48.454[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 11:14:48.514[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:14:48.514[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:14:48.517[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:17:49.922[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 11:17:49.930[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 11:17:49.941[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 11:17:58.320[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:17:58.326[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:17:58.341[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:19:03.263[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 11:19:03.274[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 11:19:03.283[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 11:19:05.331[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:19:05.331[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:19:05.370[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:20:48.200[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 11:20:48.209[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 11:20:48.217[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 11:20:50.266[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:20:50.267[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:20:50.282[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:20:58.169[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:20:58.169[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:21:09.353[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:21:09.354[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:21:09.370[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:21:16.903[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:21:16.903[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:21:16.919[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:22:05.324[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 11:22:05.333[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 11:22:05.341[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 11:22:05.358[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:22:05.359[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:22:05.360[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:22:07.608[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:22:07.609[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:26:32.254[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 11:26:32.263[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 11:26:32.271[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 11:26:32.290[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:26:32.290[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:26:32.292[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:26:40.368[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 11:26:40.376[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 11:26:40.384[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 11:26:40.402[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:26:40.402[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:26:40.404[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:26:41.590[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:26:41.591[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:26:41.617[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:26:41.617[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:26:41.627[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:32:18.413[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:32:18.413[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:32:18.423[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:33:56.590[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 11:33:56.603[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 11:33:56.612[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 11:33:56.635[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:33:56.635[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:33:56.637[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:33:58.160[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:33:58.161[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:33:58.209[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:33:58.210[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:33:58.220[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:35:29.028[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 11:35:29.037[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 11:35:29.045[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 11:35:29.061[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:35:29.061[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:35:29.062[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:35:29.191[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:35:29.191[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:35:29.224[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:35:29.224[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:35:29.226[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:35:32.770[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:35:32.771[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:35:32.779[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:35:35.496[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:35:35.496[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:35:35.511[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:35:37.851[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:35:37.851[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:35:37.869[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:35:38.498[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:35:38.498[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:35:38.514[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:35:44.262[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 11:35:44.270[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 11:35:44.278[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 11:35:44.294[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:35:44.295[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:35:44.297[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:35:44.428[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:35:44.428[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:35:44.448[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:35:44.448[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:35:44.450[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:35:55.520[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:35:55.521[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:35:55.537[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:36:02.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:36:02.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:36:02.368[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:36:06.987[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:36:06.987[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:36:07.004[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:36:07.821[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:36:07.822[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:36:07.838[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:36:08.136[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:36:08.136[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:36:08.138[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:50:10.780[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:50:10.781[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:50:10.820[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:55:35.889[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 11:55:35.900[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 11:55:35.910[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 11:55:35.934[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:55:35.934[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:55:35.936[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:55:36.068[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:55:36.068[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:55:36.102[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:55:36.102[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:55:36.103[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 11:55:39.069[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 11:55:39.069[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 11:55:39.080[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 12:05:40.088[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 12:05:40.090[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 12:05:40.116[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 12:05:52.513[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 12:05:52.523[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 12:05:52.533[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 12:05:52.552[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 12:05:52.552[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 12:05:52.554[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 12:05:52.683[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 12:05:52.683[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 12:05:52.730[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 12:05:52.730[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 12:05:52.732[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 12:07:15.892[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 12:07:15.907[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 12:07:15.922[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 12:07:22.900[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 12:07:22.900[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 12:07:22.920[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 12:07:23.058[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 12:07:23.058[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 12:07:23.088[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 12:07:23.088[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 12:07:23.089[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 12:37:14.326[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m28s126ms).
[36m2024-05-02 12:48:06.587[m [33m[WARN ][m [com.zaxxer.hikari.pool.HikariPool$HouseKeeper] [33m[HikariPool-1 housekeeper][m- HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=10m22s255ms).
[36m2024-05-02 13:12:21.280[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 13:12:21.293[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 13:12:21.304[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 13:12:21.324[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:12:21.324[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:12:21.328[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 13:12:21.457[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:12:21.457[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:12:21.486[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:12:21.486[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:12:21.487[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 13:15:21.698[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 13:15:21.709[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 13:15:21.719[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 13:15:21.740[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:15:21.740[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:15:21.742[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 13:15:21.873[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:15:21.873[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:15:21.919[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:15:21.920[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:15:21.921[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 13:15:24.503[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:15:24.504[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:15:24.580[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 13:21:02.174[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 13:21:02.206[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 13:21:02.217[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 13:22:23.119[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:22:23.120[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:22:23.202[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 13:22:23.341[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:22:23.342[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:22:23.376[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:22:23.376[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:22:23.377[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 13:22:28.120[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:22:28.121[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:22:28.135[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 13:22:28.875[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:22:28.875[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:22:28.967[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 13:23:58.547[m [33m[WARN ][m [org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver] [33m[http-nio-9091-exec-4][m- Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
[36m2024-05-02 13:23:58.549[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:23:58.549[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:38:13.054[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:38:13.054[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:38:13.079[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 13:38:45.896[m [31m[ERROR][m [com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler] [33m[http-nio-9091-exec-5][m- rsResultExcption : {}
com.mobigen.cdev.poc.core.exception.RsResultException: null
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.login.controller.LoginController$$EnhancerBySpringCGLIB$$8a5d8cf3.loginProc(<generated>) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: java.lang.NullPointerException
	at com.mobigen.cdev.poc.module.login.service.LoginServiceImpl.loginProc(LoginServiceImpl.java:141) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.controller.LoginController.loginProc(LoginController.java:74) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.controller.LoginController$$FastClassBySpringCGLIB$$1d511328.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	... 95 more
[36m2024-05-02 13:38:45.899[m [33m[WARN ][m [org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver] [33m[http-nio-9091-exec-5][m- Failure in @ExceptionHandler com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler#rsResultExceptionHandler(RsResultException)
java.lang.reflect.UndeclaredThrowableException: null
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:780) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler$$EnhancerBySpringCGLIB$$d85c3409.rsResultExceptionHandler(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:428) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:142) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1332) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1143) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
Caused by: com.mobigen.cdev.poc.core.exception.RsResultException
	at com.mobigen.cdev.poc.core.exception.ControllerThrowsAdvice.ControllerAfterThrowing(ControllerThrowsAdvice.java:62) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:617) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:68) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	... 97 more
Caused by: java.lang.NullPointerException
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler.rsResultException(GlobalExceptionHandler.java:70) ~[classes/:?]
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler.rsResultExceptionHandler(GlobalExceptionHandler.java:31) ~[classes/:?]
	at com.mobigen.cdev.poc.core.exception.GlobalExceptionHandler$$FastClassBySpringCGLIB$$b032731a.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	... 97 more
[36m2024-05-02 13:38:45.900[m [31m[ERROR][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-5][m- Servlet.service() for servlet [dispatcherServlet] in context with path [/poc_service] threw exception [Request processing failed; nested exception is com.mobigen.cdev.poc.core.exception.RsResultException] with root cause
java.lang.NullPointerException: null
	at com.mobigen.cdev.poc.module.login.service.LoginServiceImpl.loginProc(LoginServiceImpl.java:141) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.controller.LoginController.loginProc(LoginController.java:74) ~[classes/:?]
	at com.mobigen.cdev.poc.module.login.controller.LoginController$$FastClassBySpringCGLIB$$1d511328.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763) ~[spring-aop-5.3.26.jar:5.3.26]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708) ~[spring-aop-5.3.26.jar:5.3.26]
	at com.mobigen.cdev.poc.module.login.controller.LoginController$$EnhancerBySpringCGLIB$$8a5d8cf3.loginProc(<generated>) ~[classes/:?]
	at jdk.internal.reflect.GeneratedMethodAccessor102.invoke(Unknown Source) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:502) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.26.jar:5.3.26]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:596) ~[tomcat-embed-core-9.0.73.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.7.jar:5.7.7]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.26.jar:5.3.26]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.26.jar:5.3.26]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:492) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:673) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.73.jar:9.0.73]
	at java.lang.Thread.run(Thread.java:829) ~[?:?]
[36m2024-05-02 13:38:45.901[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:38:45.901[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:39:04.473[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 13:39:04.485[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 13:39:04.497[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 13:39:04.517[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:39:04.517[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:39:04.519[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 13:39:04.649[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:39:04.649[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:39:04.675[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 13:39:04.675[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 13:39:04.679[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 14:25:04.369[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-02 14:25:04.372[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-02 14:25:04.412[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-02 14:25:15.058[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 24027 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-02 14:25:15.061[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-02 14:25:15.061[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-02 14:25:15.342[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-02 14:25:15.380[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 31 ms. Found 1 JPA repository interfaces.
[36m2024-05-02 14:25:15.533[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-02 14:25:15.939[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-02 14:25:15.945[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-02 14:25:15.945[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-02 14:25:15.945[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-02 14:25:16.004[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-02 14:25:16.004[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 921 ms
[36m2024-05-02 14:25:16.108[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-02 14:25:16.143[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-02 14:25:16.267[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-02 14:25:16.370[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-02 14:25:16.486[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-02 14:25:16.507[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-02 14:25:16.824[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-02 14:25:16.829[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-02 14:25:17.324[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@38d9c9c4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a4388f1, org.springframework.security.web.context.SecurityContextPersistenceFilter@51eeae0a, org.springframework.security.web.header.HeaderWriterFilter@a5df98c, org.springframework.security.web.authentication.logout.LogoutFilter@3f2feab7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@55589ef5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@23a9400c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3687b83c, org.springframework.security.web.session.SessionManagementFilter@2af1bf5a, org.springframework.security.web.access.ExceptionTranslationFilter@43d2c8e3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@31c31fa6]
[36m2024-05-02 14:25:17.358[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-02 14:25:17.606[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-02 14:25:17.626[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-02 14:25:17.632[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 2.933 seconds (JVM running for 3.461)
[36m2024-05-02 14:31:37.004[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-02 14:31:37.006[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-02 14:31:37.048[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
[36m2024-05-02 14:42:18.052[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Starting PocApplication using Java 11.0.18 on isangchan-ui-MacBookPro.local with PID 25332 (/Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend/target/classes started by sclee1115 in /Users/sclee1115/Project/Dev/poc_gui/01.gui_source/pocgui_backend)
[36m2024-05-02 14:42:18.054[m [34m[DEBUG][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Running with Spring Boot v2.7.10, Spring v5.3.26
[36m2024-05-02 14:42:18.055[m [32m[INFO ][m [org.springframework.boot.SpringApplication] [33m[main][m- The following 7 profiles are active: "db", "config", "log", "local", "db-local", "config-local", "log-local"
[36m2024-05-02 14:42:18.345[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[36m2024-05-02 14:42:18.382[m [32m[INFO ][m [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [33m[main][m- Finished Spring Data repository scanning in 31 ms. Found 1 JPA repository interfaces.
[36m2024-05-02 14:42:18.530[m [33m[WARN ][m [org.mybatis.logging.Logger] [33m[main][m- No MyBatis mapper was found in '[com.mobigen.cdev.poc]' package. Please check your configuration.
[36m2024-05-02 14:42:18.935[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat initialized with port(s): 9091 (http)
[36m2024-05-02 14:42:18.941[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing ProtocolHandler ["http-nio-9091"]
[36m2024-05-02 14:42:18.941[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting service [Tomcat]
[36m2024-05-02 14:42:18.941[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting Servlet engine: [Apache Tomcat/9.0.73]
[36m2024-05-02 14:42:18.999[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Initializing Spring embedded WebApplicationContext
[36m2024-05-02 14:42:18.999[m [32m[INFO ][m [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [33m[main][m- Root WebApplicationContext: initialization completed in 922 ms
[36m2024-05-02 14:42:19.101[m [32m[INFO ][m [org.hibernate.jpa.internal.util.LogHelper] [33m[main][m- HHH000204: Processing PersistenceUnitInfo [name: default]
[36m2024-05-02 14:42:19.133[m [32m[INFO ][m [org.hibernate.Version] [33m[main][m- HHH000412: Hibernate ORM core version 5.6.15.Final
[36m2024-05-02 14:42:19.257[m [32m[INFO ][m [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [33m[main][m- HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[36m2024-05-02 14:42:19.352[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Starting...
[36m2024-05-02 14:42:19.509[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[main][m- HikariPool-1 - Start completed.
[36m2024-05-02 14:42:19.531[m [32m[INFO ][m [org.hibernate.dialect.Dialect] [33m[main][m- HHH000400: Using dialect: org.hibernate.dialect.MariaDB106Dialect
[36m2024-05-02 14:42:19.851[m [32m[INFO ][m [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [33m[main][m- HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[36m2024-05-02 14:42:19.856[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[main][m- Initialized JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-02 14:42:20.334[m [32m[INFO ][m [org.springframework.security.web.DefaultSecurityFilterChain] [33m[main][m- Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@299cddbf, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@31beb0d0, org.springframework.security.web.context.SecurityContextPersistenceFilter@4cd7128, org.springframework.security.web.header.HeaderWriterFilter@6e0dec27, org.springframework.security.web.authentication.logout.LogoutFilter@39a1c200, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@25af1dbf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2cdcedef, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@13da6bc9, org.springframework.security.web.session.SessionManagementFilter@1146e32e, org.springframework.security.web.access.ExceptionTranslationFilter@1188e08b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@cbea0df]
[36m2024-05-02 14:42:20.378[m [33m[WARN ][m [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [33m[main][m- spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[36m2024-05-02 14:42:20.622[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[main][m- Starting ProtocolHandler ["http-nio-9091"]
[36m2024-05-02 14:42:20.639[m [32m[INFO ][m [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [33m[main][m- Tomcat started on port(s): 9091 (http) with context path '/poc_service'
[36m2024-05-02 14:42:20.645[m [32m[INFO ][m [org.springframework.boot.StartupInfoLogger] [33m[main][m- Started PocApplication in 2.944 seconds (JVM running for 3.442)
[36m2024-05-02 14:42:33.305[m [32m[INFO ][m [org.apache.juli.logging.DirectJDKLog] [33m[http-nio-9091-exec-1][m- Initializing Spring DispatcherServlet 'dispatcherServlet'
[36m2024-05-02 14:42:33.306[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Initializing Servlet 'dispatcherServlet'
[36m2024-05-02 14:42:33.308[m [32m[INFO ][m [org.springframework.web.servlet.FrameworkServlet] [33m[http-nio-9091-exec-1][m- Completed initialization in 2 ms
[36m2024-05-02 14:42:33.647[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 14:42:33.664[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 14:42:33.679[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 14:42:33.691[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 14:42:33.701[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 14:42:33.727[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 14:42:33.728[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 14:42:33.759[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 14:42:33.893[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 14:42:33.894[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 14:42:33.912[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 14:42:33.913[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 14:42:33.919[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 14:49:49.489[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '163b60cd8c5a6929b94fc7dcd4cb86d84b22f6b76d164d2011fff464a8fcebfb0aeab1f4e31b256145a0f9fe0f0dbd6eb59d320155f91343b12b0d150777afc5' 
		 AND 1 = 1

[36m2024-05-02 14:49:49.498[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 14:49:49.508[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 14:52:13.371[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = 'd747067a91d2f3ed7f1ad8b8857d6328e5748d9c1e7a34ceadf3cbd0addf48a8d26ac59e6d15bdea15e3578bde64b97f77ca1529c44dbad300153be8f56c2d6c' 
		 AND 1 = 1

[36m2024-05-02 14:52:13.382[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 14:52:13.420[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 14:54:13.900[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '2c0094b18ee3d25ac88435f0bbee137aaa5cbd167f4e73fdb5f906ba49bb2f531a899f223641f9f9d2df26eb21b4c7f3bb82bb797393874da820bbedab2ce2f5' 
		 AND 1 = 1

[36m2024-05-02 14:54:13.908[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 14:54:13.918[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 14:55:28.868[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '163b60cd8c5a6929b94fc7dcd4cb86d84b22f6b76d164d2011fff464a8fcebfb0aeab1f4e31b256145a0f9fe0f0dbd6eb59d320155f91343b12b0d150777afc5' 
		 AND 1 = 1

[36m2024-05-02 14:55:28.883[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 14:55:28.893[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 14:56:56.818[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = 'eeecab8a35d1892439d0b9fc034231095d543f5507ffead4954d0871c6a4c796cdcda5ae336390ca89fd6ea620ee8ffc442ea1d6c1276111c1970b56d2bddef5' 
		 AND 1 = 1

[36m2024-05-02 14:56:56.827[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 14:56:56.840[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 14:57:22.475[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '802eab6edce7d8a280e905a6d01f7df68180b30b80f28eae896c04a7be7ad1e26355f292a74dc86c6292cbf928558185cb26a63e7d6632e49d18b9685bb7dfd9' 
		 AND 1 = 1

[36m2024-05-02 14:57:22.486[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 14:57:22.498[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 15:14:51.419[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 15:14:51.432[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:14:51.447[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 15:14:51.461[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 15:14:51.474[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 15:14:51.499[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:14:51.500[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:14:51.504[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:14:51.660[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:14:51.660[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:14:51.695[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:14:51.695[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:14:51.697[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:17:10.769[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '263fec58861449aacc1c328a4aff64aff4c62df4a2d50b3f207fa89b6e242c9aa778e7a8baeffef85b6ca6d2e7dc16ff0a760d59c13c238f6bcdc32f8ce9cc62' 
		 AND 1 = 1

[36m2024-05-02 15:17:10.783[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:17:10.798[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 15:17:28.698[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 15:17:28.711[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:17:28.725[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 15:17:28.736[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 15:17:28.748[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 15:17:28.776[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:17:28.776[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:17:28.778[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:17:28.910[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:17:28.911[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:17:28.930[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:17:28.930[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:17:28.932[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:17:31.572[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:17:31.573[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:17:31.587[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:17:32.276[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:17:32.277[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:17:32.290[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:17:57.913[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 15:17:57.924[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:17:57.939[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 15:17:57.951[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 15:17:57.962[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 15:17:57.982[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:17:57.982[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:17:57.983[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:17:58.114[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:17:58.115[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:17:58.140[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:17:58.140[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:17:58.142[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:20:25.196[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:20:25.198[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:20:25.247[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:22:13.968[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:22:13.969[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:22:13.983[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:23:53.296[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 15:23:53.310[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:23:53.325[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 15:23:53.427[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 15:23:53.439[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 15:23:53.469[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:23:53.470[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:23:53.472[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:23:53.605[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:23:53.606[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:23:53.622[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:23:53.623[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:23:53.624[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:23:56.420[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:23:56.421[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:23:56.582[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:25:04.232[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 15:25:04.245[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:25:04.260[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 15:25:04.272[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 15:25:04.286[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 15:25:04.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:25:04.341[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:25:04.345[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:25:04.478[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:25:04.478[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:25:04.501[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:25:04.501[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:25:04.502[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:25:22.379[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:25:22.380[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:25:22.585[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:25:23.991[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:25:23.994[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:25:24.157[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:25:24.217[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:25:24.219[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:25:24.226[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:25:24.375[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:25:24.376[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:25:24.378[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:25:25.299[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:25:25.299[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:25:25.315[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:25:34.675[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:25:34.677[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:25:34.838[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:25:37.519[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:25:37.520[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:25:37.535[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:26:22.022[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 15:26:22.035[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:26:22.049[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 15:26:22.062[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 15:26:22.075[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 15:26:22.197[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:26:22.197[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:26:22.199[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:26:22.339[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:26:22.339[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:26:22.387[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:26:22.387[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:26:22.389[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:31:18.605[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:31:18.606[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:31:18.623[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:31:20.193[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:31:20.193[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:31:20.224[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:31:21.059[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:31:21.059[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:31:21.085[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:31:22.035[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:31:22.035[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:31:22.357[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:31:22.584[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:31:22.584[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:31:22.588[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:31:22.934[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:31:22.934[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:31:22.942[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:31:40.087[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 15:31:40.099[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:31:40.115[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 15:31:40.127[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 15:31:40.139[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 15:31:40.161[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:31:40.162[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:31:40.165[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:31:40.298[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:31:40.298[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:31:40.325[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:31:40.326[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:31:40.327[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:31:46.855[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:31:46.856[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:31:46.906[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:31:48.884[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:31:48.885[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:31:49.003[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:31:53.122[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:31:53.124[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:31:53.225[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:31:54.812[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:31:54.813[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:31:54.826[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:38:05.239[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:38:05.240[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:38:05.263[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:38:11.934[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:38:11.935[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:38:11.950[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:38:50.921[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:38:50.922[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:38:50.935[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:39:41.021[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:39:41.022[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:39:41.042[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:39:42.273[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:39:42.274[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:39:42.287[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:42:03.806[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:42:03.807[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:42:03.821[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:42:46.127[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:42:46.128[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:42:46.154[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:44:41.166[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:44:41.168[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:44:41.202[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:44:44.179[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:44:44.180[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:44:44.193[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:50:38.227[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '163b60cd8c5a6929b94fc7dcd4cb86d84b22f6b76d164d2011fff464a8fcebfb0aeab1f4e31b256145a0f9fe0f0dbd6eb59d320155f91343b12b0d150777afc5' 
		 AND 1 = 1

[36m2024-05-02 15:50:38.240[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:50:38.260[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 15:50:51.541[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 15:50:51.556[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:50:51.568[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 15:50:51.673[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 15:50:51.682[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 15:50:51.707[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:50:51.707[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:50:51.712[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:50:51.843[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:50:51.843[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:50:51.863[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:50:51.863[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:50:51.865[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:50:55.281[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:50:55.282[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:50:55.338[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:50:56.262[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:50:56.262[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:50:56.578[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:56:39.323[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 15:56:39.338[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:56:39.355[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 15:56:39.512[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 15:56:39.521[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 15:56:39.548[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:56:39.548[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:56:39.554[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:56:39.685[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:56:39.685[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:56:39.741[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:56:39.741[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:56:39.743[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:56:43.620[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:56:43.621[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:56:43.672[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:56:44.477[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:56:44.478[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:56:44.568[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:56:47.252[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:56:47.253[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:56:47.268[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:57:46.472[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:57:46.473[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:57:46.498[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 15:57:48.998[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 15:57:48.998[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 15:57:49.054[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:02:27.338[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:02:27.347[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:02:27.545[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:24:04.336[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 16:24:04.349[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:24:04.371[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 16:24:04.385[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 16:24:04.397[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 16:24:04.425[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:24:04.425[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:24:04.429[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:24:04.561[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:24:04.561[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:24:04.608[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:24:04.608[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:24:04.610[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:43:08.497[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:43:08.500[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:43:08.525[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:43:10.633[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:43:10.634[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:43:10.675[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:46:24.590[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:46:24.591[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:46:24.607[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:47:12.418[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:47:12.420[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:47:12.450[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:49:22.326[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:49:22.328[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:49:22.501[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:50:06.690[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:50:06.691[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:50:07.056[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:51:39.555[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:51:39.556[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:51:39.706[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:52:07.177[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:52:07.181[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:52:07.198[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:54:30.694[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 16:54:30.705[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:54:30.714[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 16:54:30.726[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 16:54:30.762[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 16:54:30.788[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:54:30.788[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:54:30.792[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:54:30.929[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:54:30.929[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:54:30.961[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:54:30.962[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:54:30.963[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:54:39.064[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:54:39.064[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:54:39.074[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:56:08.302[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 16:56:08.313[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:56:08.324[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 16:56:08.335[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 16:56:08.346[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 16:56:08.370[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:56:08.370[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:56:08.375[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:56:08.504[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:56:08.504[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:56:08.538[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:56:08.538[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:56:08.539[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:56:08.540[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:56:08.540[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:56:08.551[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 16:58:31.881[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 16:58:31.886[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 16:58:31.918[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:01:43.369[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '2ea68ee4ef8dccdae633837cb04ac9dbcdf7c86655c02ae7738b731cd4040bd97816993acc43ad42597aedf69f4bccb65f648b82a4fd3b277f20991f8f9e607c' 
		 AND 1 = 1

[36m2024-05-02 17:01:43.382[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:01:43.451[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 17:01:50.222[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 17:01:50.241[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:01:50.277[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 17:01:50.291[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 17:01:50.303[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 17:01:50.328[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:01:50.328[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:01:50.333[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:01:50.471[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:01:50.471[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:01:50.515[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:01:50.515[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:01:50.517[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:03:46.112[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:03:46.112[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:03:46.137[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:04:44.213[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:04:44.214[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:04:44.230[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:07:22.158[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 17:07:22.212[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:07:22.222[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 17:07:22.232[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 17:07:22.241[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 17:07:22.267[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:07:22.267[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:07:22.269[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:07:22.482[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:07:22.483[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:07:22.519[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:07:22.519[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:07:22.521[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:10:25.588[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:10:25.590[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:10:25.608[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:13:04.165[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 17:13:04.181[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:13:04.286[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 17:13:04.297[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 17:13:04.310[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 17:13:04.343[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:13:04.344[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:13:04.348[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:13:04.486[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:13:04.486[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:13:04.530[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:13:04.530[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:13:04.532[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:15:00.060[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '57328c763bbf297be9f6703f38f8302ee2e09b8fcc9046f2818a7055885eeac99cb4e7901562c3e85d6189eeb5ce0898cdfc884157326b0be57f080fb03e259c' 
		 AND 1 = 1

[36m2024-05-02 17:15:00.073[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:15:00.130[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 17:15:09.052[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 17:15:09.062[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:15:09.074[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 17:15:09.085[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 17:15:09.094[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 17:15:09.116[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:15:09.116[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:15:09.120[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:15:09.257[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:15:09.257[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:15:09.304[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:15:09.304[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:15:09.306[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:16:36.446[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 17:16:36.457[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:16:36.468[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 17:16:36.480[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 17:16:36.491[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 17:16:36.514[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:16:36.515[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:16:36.518[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:16:36.652[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:16:36.653[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:16:36.669[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:16:36.669[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:16:36.670[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:17:42.845[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:17:42.846[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:17:43.040[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:18:07.633[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:18:07.634[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:18:07.687[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:18:08.815[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:18:08.815[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:18:08.826[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:21:25.339[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:21:25.340[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:21:25.387[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:22:15.608[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:22:15.610[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:22:15.732[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:22:16.672[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:22:16.673[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:22:16.784[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:22:17.896[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:22:17.898[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:22:17.918[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:29:19.415[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:29:19.416[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:29:19.433[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:35:49.164[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:35:49.165[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:35:49.181[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:37:32.544[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:37:32.545[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:37:32.558[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:38:07.175[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:38:07.178[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:38:07.192[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:38:08.359[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:38:08.360[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:38:08.397[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:44:00.615[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:44:00.617[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:44:00.652[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:47:17.640[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:47:17.641[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:47:17.667[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:47:18.497[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:47:18.497[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:47:18.616[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:49:08.623[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:49:08.624[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:49:08.715[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:49:09.697[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:49:09.698[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:49:09.785[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:49:09.971[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:49:09.972[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:49:09.975[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:49:10.202[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:49:10.203[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:49:10.205[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:49:10.402[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:49:10.402[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:49:10.417[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:51:13.239[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:51:13.242[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:51:13.264[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:51:13.963[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:51:13.963[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:51:14.004[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:51:14.729[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:51:14.729[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:51:14.744[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:52:09.244[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:52:09.245[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:52:09.268[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:52:10.224[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:52:10.225[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:52:10.342[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:56:07.187[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 17:56:07.198[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:56:07.213[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 17:56:07.227[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 17:56:07.326[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 17:56:07.350[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:56:07.351[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:56:07.352[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:56:07.485[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:56:07.485[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:56:07.512[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:56:07.513[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:56:07.514[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:56:59.521[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:56:59.524[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:56:59.767[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:58:49.705[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:58:49.705[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:58:49.754[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 17:58:50.442[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-02 17:58:50.442[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 17:58:50.487[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:01:27.912[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:01:27.912[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:01:27.931[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:01:28.905[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:01:28.905[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:01:28.918[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:01:54.784[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:01:54.784[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:01:54.825[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:01:55.557[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:01:55.557[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:01:55.558[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:15:47.012[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:15:47.013[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:15:47.107[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:15:47.968[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:15:47.968[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-2][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:15:48.026[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-2][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:15:48.713[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:15:48.713[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-3][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:15:48.738[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:15:48.920[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:15:48.921[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:15:48.929[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:25:54.731[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:25:54.732[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:25:54.779[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-5][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:27:32.132[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:27:32.133[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:27:32.149[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:27:34.594[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:27:34.595[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:27:34.610[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:29:29.207[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:29:29.208[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-8][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:29:29.278[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-8][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:30:45.793[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:30:45.795[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-9][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:30:45.826[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-9][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:30:46.748[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:30:46.748[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-10][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:30:46.868[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-10][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:30:47.113[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:30:47.114[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-1][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:30:47.117[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-1][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:36:38.659[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			USER_ID
		,	USER_NAME
		,	USER_PASS PASSWORD
		,	PHONE
		,	EMAIL
		,	INSA_TEAM_ID
		,	INSA_TEAM_NAME
		,	LAST_LOGIN_TIME
		,	UPDATE_TIME
		,	UPDATE_USER
		FROM
			 cm_user 
		WHERE 1 = 1
		AND USE_YN = 'Y'

				AND USER_ID = 'MG0001'

		 AND USER_PASS = '71a31cd5c6cb81eb70776c2ce80ce8719ddeebc0fa0903ce3bc8bd568ddcda05ec47b176322842750fbafe029722a47b62983e4a03013f6f03faa58d3f3f86dc' 
		 AND 1 = 1

[36m2024-05-02 18:36:38.671[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:36:38.687[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- select
			A.user_id
		,	A.user_name
		,	B.role_id
		,	C.role_id
		,	C.role_name
		,	C.role_desc
		from cm_user A
			left outer join cm_user_role B
			on A.user_id = B.user_id
			left outer join cm_role C
			on B.role_id  = C.role_id
		where A.user_id  = 'MG0001'

[36m2024-05-02 18:36:38.698[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
            CASE

                (select config_value from cm_main_config where config_type = 'use_sms_auth')
            WHEN 'N'

                THEN 'Y'
            ELSE

                CASE COUNT(*)
                    WHEN 0 THEN 'N'
                    ELSE
                        CASE expire_cond
                            WHEN 'UL' THEN 'Y'
                            ELSE
                                CASE
                                    WHEN
                                        (
                                            SELECT
                                                MAX(auth_passed_time)
                                            FROM

		cm_sms_authontication

                                            WHERE user_id = 'MG0001'
                                        )
                                        >=
                                        (
                                            CASE
                                                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                                                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                                                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                                                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                                                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                                                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
                                            END
                                        )
                                    THEN 'Y'
                                    ELSE 'N'
                                END
                        END
                END
            END allow_exception
        ,	expire_cond
        ,	expire_value
        ,	CASE 
                WHEN expire_cond = 'MIN' OR expire_cond = 'MINUTE' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MINUTE)
                WHEN expire_cond = 'HOUR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value HOUR)
                WHEN expire_cond = 'DAY' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value DAY)
                WHEN expire_cond = 'WEEK' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value WEEK)
                WHEN expire_cond = 'MON' OR expire_cond = 'MONTH' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value MONTH)
                WHEN expire_cond = 'YEAR' THEN DATE_SUB(SYSDATE(), INTERVAL expire_value YEAR)
            END compare_time
        FROM

        cm_exception_sms_auth

        WHERE 1 = 1
        AND user_id  = 'MG0001'
        AND use_yn = 'Y'

[36m2024-05-02 18:36:38.711[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-3][m- SELECT
			A.*
		FROM
		(

		select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		) A
		WHERE A.default_menu_yn = 'Y'

[36m2024-05-02 18:36:38.737[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:36:38.737[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-4][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:36:38.739[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-4][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:36:38.870[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:36:38.871[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-5][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:43:23.636[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:43:23.638[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-6][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:43:23.709[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-6][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:44:03.191[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- firstAuthenticationStatus : 1
[36m2024-05-02 18:44:03.191[m [32m[INFO ][m [com.mobigen.cdev.poc.core.security.interceptor.AuthInterceptPreHandle] [33m[http-nio-9091-exec-7][m- secondaryAuthenticationStatus : 1
[36m2024-05-02 18:44:03.276[m [32m[INFO ][m [net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator] [33m[http-nio-9091-exec-7][m- select
			menu_pcode, menu_code
		,	lead(menu_code) over (order by menu_code, menu_order) menu_code_next
		,	lead(menu_pcode) over (order by menu_code, menu_order) menu_pcode_next
		,	lag(menu_code) over (order by menu_code, menu_order) menu_code_prev
		,	lag(menu_pcode) over (order by menu_code, menu_order) menu_pcode_prev
		, 	menu_order, menu_name, menu_navigation, menu_location
		,	A.use_yn
		,	A.end_flag
		,	A.default_menu_yn
		,	A.module_id, module_name, module_desc
		,	role_id
		,	role_name
		,	role_desc
		,	case when allow_use_lv >= target_use_lv then '1' else '0' end allow_use_auth
		,	case when allow_read_lv >= target_read_lv then '1' else '0' end allow_read_auth
		,	case when allow_create_lv >= target_create_lv then '1' else '0' end allow_create_auth
		,	case when allow_modify_lv >= target_modify_lv then '1' else '0' end allow_modify_auth
		,	case when allow_delete_lv >= target_delete_lv then '1' else '0' end allow_delete_auth
		,	case when allow_confirm_lv >= target_confirm_lv then '1' else '0' end allow_confirm_auth
		,	case when allow_func01_lv >= target_func01_lv then '1' else '0' end allow_func01_auth
		,	case when allow_func02_lv >= target_func02_lv then '1' else '0' end allow_func02_auth
		,	case when allow_func03_lv >= target_func03_lv then '1' else '0' end allow_func03_auth
		,	case when allow_func04_lv >= target_func04_lv then '1' else '0' end allow_func04_auth
		,	case when allow_func05_lv >= target_func05_lv then '1' else '0' end allow_func05_auth
		,	case when allow_func06_lv >= target_func06_lv then '1' else '0' end allow_func06_auth
		,	case when allow_func07_lv >= target_func07_lv then '1' else '0' end allow_func07_auth
		,	case when allow_func08_lv >= target_func08_lv then '1' else '0' end allow_func08_auth
		,	case when allow_func09_lv >= target_func09_lv then '1' else '0' end allow_func09_auth
		,	case when allow_func10_lv >= target_func10_lv then '1' else '0' end allow_func10_auth
		,	update_user
		,	update_time
		from
		(
			select
				A.menu_pcode
			,	A.menu_code
			,	A.menu_order
			,	A.menu_name
			,	A.menu_navigation
			,	A.menu_location
			,	A.use_yn
			,	A.end_flag
			,	A.default_menu_yn
			,	B.module_id
			,	B.module_name
			,	B.module_desc
			,	B.allow_use_lv
			,	B.allow_read_lv
			,	B.allow_create_lv
			,	B.allow_modify_lv
			,	B.allow_delete_lv
			,	B.allow_confirm_lv
			,	B.allow_func01_lv
			,	B.allow_func02_lv
			,	B.allow_func03_lv
			,	B.allow_func04_lv
			,	B.allow_func05_lv
			,	B.allow_func06_lv
			,	B.allow_func07_lv
			,	B.allow_func08_lv
			,	B.allow_func09_lv
			,	B.allow_func10_lv
			,	A.update_user
			,	A.update_time
			from
				cm_menu A
				left outer join
				(
					select
					A.module_id
					,	A.module_name
					,	A.module_desc
					,	B.menu_code
					,	ifnull(B.allow_use_lv, 5) allow_use_lv
					,	ifnull(B.allow_read_lv, 5) allow_read_lv
					,	ifnull(B.allow_create_lv, 5) allow_create_lv
					,	ifnull(B.allow_modify_lv, 5) allow_modify_lv
					,	ifnull(B.allow_delete_lv, 5) allow_delete_lv
					,	ifnull(B.allow_confirm_lv, 5) allow_confirm_lv
					,	ifnull(B.allow_func01_lv, 5) allow_func01_lv
					,	ifnull(B.allow_func02_lv, 5) allow_func02_lv
					,	ifnull(B.allow_func03_lv, 5) allow_func03_lv
					,	ifnull(B.allow_func04_lv, 5) allow_func04_lv
					,	ifnull(B.allow_func05_lv, 5) allow_func05_lv
					,	ifnull(B.allow_func06_lv, 5) allow_func06_lv
					,	ifnull(B.allow_func07_lv, 5) allow_func07_lv
					,	ifnull(B.allow_func08_lv, 5) allow_func08_lv
					,	ifnull(B.allow_func09_lv, 5) allow_func09_lv
					,	ifnull(B.allow_func10_lv, 5) allow_func10_lv
					from
						cm_module A
						left outer join
						cm_menu_module B
						on A.module_id = B.module_id
				) B
				on A.menu_code = B.menu_code
			where A.use_yn = 'Y'
		) A
		left outer join
		(
			select
				A.user_id, A.user_name
			,	A.phone, A.email
			,	A.role_id, A.role_name, A.role_desc
			,	B.module_id
			,	min(nvl(target_use_lv, 5)) target_use_lv
			,	min(nvl(target_read_lv, 5)) target_read_lv
			,	min(nvl(target_create_lv, 5)) target_create_lv
			,	min(nvl(target_modify_lv, 5)) target_modify_lv
			,	min(nvl(target_delete_lv, 5)) target_delete_lv
			,	min(nvl(target_confirm_lv, 5)) target_confirm_lv
			,	min(nvl(target_func01_lv, 5)) target_func01_lv
			,	min(nvl(target_func02_lv, 5)) target_func02_lv
			,	min(nvl(target_func03_lv, 5)) target_func03_lv
			,	min(nvl(target_func04_lv, 5)) target_func04_lv
			,	min(nvl(target_func05_lv, 5)) target_func05_lv
			,	min(nvl(target_func06_lv, 5)) target_func06_lv
			,	min(nvl(target_func07_lv, 5)) target_func07_lv
			,	min(nvl(target_func08_lv, 5)) target_func08_lv
			,	min(nvl(target_func09_lv, 5)) target_func09_lv
			,	min(nvl(target_func10_lv, 5)) target_func10_lv
			from
			(
				select
					A.user_id, A.user_name
				,	A.phone, A.email
				,	B.role_id, B.role_name, B.role_desc
				from
					cm_user A
					left outer join
					(
						select
							A.role_id
						,	A.role_name
						,	A.role_desc
						,	B.user_Id
						from
							cm_role A
							left outer join
							cm_user_role B
							on A.role_id = B.role_id
					) B
					on A.user_id  = B.user_id
					where 1 = 1
					and a.use_yn = 'Y'
					and a.user_id = 'MG0001'
				) A
				left outer join
				cm_role_module B
				on A.role_id = B.role_id
				where 1 = 1
				group by module_id, user_id, user_name, phone, email
			) B
		on A.module_id = B.module_id
		where 1 = 1

		ORDER BY menu_pcode, menu_code

[36m2024-05-02 18:45:14.254[m [32m[INFO ][m [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [33m[SpringApplicationShutdownHook][m- Closing JPA EntityManagerFactory for persistence unit 'default'
[36m2024-05-02 18:45:14.255[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown initiated...
[36m2024-05-02 18:45:14.296[m [32m[INFO ][m [com.zaxxer.hikari.HikariDataSource] [33m[SpringApplicationShutdownHook][m- HikariPool-1 - Shutdown completed.
